url	number_python_files	keyword	merged at	pr_title	pr_body
https://github.com/Charcoal-SE/SmokeDetector/pull/6704	1	legibility	2021-09-30 07:19:07	test/test_findspam.py: reformat "regex poison" posts for legibility	Distracting and potentially troubling (inefficient syntax highlighting).    My Emacs was freezing briefly when I opened this file ... Blame Emacs, but still, inconvenient
https://github.com/closeio/ciso8601/pull/149	1	legibility	2023-10-18 14:45:22	Re-arrange the columns in the README for better legibility	### What are you trying to accomplish?    It is important that people see the relative slowdown column.    But with so many columns in our tables, the relative slowdown column was getting cut off.     img width="897" alt="image" src="https://github.com/closeio/ciso8601/assets/1459385/b57733b5-be53-4568-9a6e-e0d504a0be57">    GitHub only shows about 830 pixels on desktop browsers.    ### What approach did you choose and why?    I re-arranged the table so that the relative slowdown column appears in the middle of the table.    I added a spacer column before continuing with older versions of Python so that the slowdown summary isn't lost in the noise.    At first, I thought that perhaps I could get away with just the most modern Python column, and then the relative slowdown column.    But some of the relative slowdown numbers are based on speed comparisons that aren't using the latest versions (e.g., `pendulum` doesn't support Python 3.12 yet, so the comparison is being done using Python 3.11 numbers). This seemed confusing to read, and I didn't come up with a way to make it clearer.    So instead, I aimed to shove the column to a point where all libraries had comparable numbers to the left of it. To stay within the pixel limit, I was limited to 4 columns.    This means it works for every comparison library. With the next version it won't cover `iso8601tools`, which I'm guessing will never [get fixed to work with modern Python](https://github.com/silverfernsys/iso8601utils/issues/6).    ### Screenshots    830 px:     img width="845" alt="image" src="https://github.com/closeio/ciso8601/assets/1459385/2d02fea6-aaca-4e28-b3e9-96d7012607fb">    ### What should reviewers focus on?    What do you think about the aesthetics of this solution? Is there a better way?    My only complaint with the 4 column version is that it lines up _too well_ with the 830 px table width, not giving a visual indication that there is more beyond Python 3.8 to scroll over for.    I also kinda wish we could highlight Python 2.7 support more. Support for Python 2.7 is [understandably] rare these days. It's only [1% of downloads of `ciso8601`](https://pypistats.org/packages/ciso8601), but for those 1% `ciso8601` is relatively more valuable since there's nothing else worth mentioning for them.     (Perhaps I'm being silly here, and we should simply drop support for anything less than 3.7, but we wouldn't benefit that much from it, and it has been easy enough to continue supporting these versions, so , `ciso8601` can remain useful to slightly more people in the meantime.)    ### The impact of these changes    Our charts will be easier to read??
https://github.com/dbt-labs/metricflow/pull/302	1	legibility	2022-10-19 21:06:01	Improve legibility of issues raised by `validate_safely`	The decorator `validate_safely` has been very useful. Specifically it catches issues during validation that we don't expect to happen. The problem recently has been that the issues built by `validate_safely` have become increasibly hard to read. This is mostly because the args passed to the method which ultimately raised an exception have been included in the base validation issue message. When the passed arg(s) are just a data source name, thats not a problem. But when the passed arg(s) incldue the entire UserConfiguredModel, it becomes an incomprehensible wall of text. This commit moves the method arguments and method name to the `extra_details` portion of the validation issue. Doing so makes the default printing of the validation issue more legible but still allows to get the detail information if the validation issue is printed verbosely.    ### Previously when bad things happened  ```  $ mf validate-configs    (To see warnings and future-errors, run again with flag `--show-all`)     Successfully linted config YAML files (ERRORS: 0, FUTURE_ERRORS: 0, WARNINGS: 0)     Successfully built model from configs (ERRORS: 0, FUTURE_ERRORS: 0, WARNINGS: 0)    Breaking issues found when checking semantics of built model (ERRORS: 1, FUTURE_ERRORS: 0, WARNINGS: 0)    ERROR: An error occured while running model validation ensuring elements have adequately unique names. Issue occurred in method `validate_model` called with positional args: (UserConfiguredModel(data_sources=[DataSource(name='salesforce_users', description=None, sql_table='salesforce.user', sql_query=None, dbt_model=None, identifiers=[Identifier(name='owner', description=None, type= IdentifierType.PRIMARY: 'primary'>, role=None, entity='owner', identifiers=[], expr='id', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/users.yaml', file_slice=FileSlice(filename='users.yaml', content='name: owner\\ntype: primary\\nexpr: id\\n', start_line_number=9, end_line_number=11)))], measures=[], dimensions=[Dimension(name='ds', description=None, type= DimensionType.TIME: 'time'>, is_partition=False, type_params=DimensionTypeParams(is_primary=True, time_format='YYYY-MM-DD', time_granularity=TimeGranularity.DAY), expr='created_date', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/users.yaml', file_slice=FileSlice(filename='users.yaml', content='name: ds\\ntype: time\\ntype_params:\\n  is_primary: True\\n  time_granularity: day\\nexpr: created_date\\n', start_line_number=13, end_line_number=18))), Dimension(name='full_name', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/users.yaml', file_slice=FileSlice(filename='users.yaml', content='name: full_name\\ntype: categorical\\n', start_line_number=19, end_line_number=20)))], mutability=Mutability(type= MutabilityType.IMMUTABLE: 'IMMUTABLE'>, type_params=None), origin= DataSourceOrigin.SOURCE: 'source'>, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/users.yaml', file_slice=FileSlice(filename='users.yaml', content='name: salesforce_users\\nowners:\\n- support@transformdata.io\\nsql_table: salesforce.user\\nmutability:\\n  type: immutable\\nidentifiers:\\n- name: owner\\n  type: primary\\n  expr: id\\ndimensions:\\n- name: ds\\n  type: time\\n  type_params:\\n    is_primary: True\\n    time_granularity: day\\n  expr: created_date\\n- name: full_name\\n  type: categorical\\n', start_line_number=2, end_line_number=20))), DataSource(name='salesforce_oppportunities', description=None, sql_table='salesforce.opportunity', sql_query=None, dbt_model=None, identifiers=[Identifier(name='opportunity', description=None, type= IdentifierType.PRIMARY: 'primary'>, role=None, entity='opportunity', identifiers=[], expr='id', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: opportunity\\ntype: primary\\nexpr: id\\n', start_line_number=9, end_line_number=11))), Identifier(name='owner', description=None, type= IdentifierType.FOREIGN: 'foreign'>, role=None, entity='owner', identifiers=[], expr='owner', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: owner\\ntype: foreign\\nexpr: owner\\n', start_line_number=12, end_line_number=14))), Identifier(name='account', description=None, type= IdentifierType.FOREIGN: 'foreign'>, role=None, entity='account', identifiers=[], expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: account\\ntype: foreign\\n', start_line_number=15, end_line_number=16)))], measures=[Measure(name='opps', agg= AggregationType.COUNT_DISTINCT: 'count_distinct'>, description=None, create_metric=True, expr='id', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: opps\\nagg: count_distinct\\nexpr: id\\ncreate_metric: true\\n', start_line_number=39, end_line_number=42)), non_additive_dimension=None, agg_time_dimension='ds'), Measure(name='closed_opps', agg= AggregationType.COUNT_DISTINCT: 'count_distinct'>, description='Counts distinct opportunities that have been closed.', create_metric=True, expr='case when is_closed = true then id else null end', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: closed_opps\\nagg: count_distinct\\nexpr: case when is_closed = true then id else null end\\ndescription: Counts distinct opportunities that have been closed.\\ncreate_metric: True\\n', start_line_number=43, end_line_number=47)), non_additive_dimension=None, agg_time_dimension='ds'), Measure(name='won_opps', agg= AggregationType.COUNT_DISTINCT: 'count_distinct'>, description=None, create_metric=True, expr='case when is_won = true then id else null end', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: won_opps\\nagg: count_distinct\\nexpr: case when is_won = true then id else null end\\ncreate_metric: True\\n', start_line_number=48, end_line_number=51)), non_additive_dimension=None, agg_time_dimension='ds'), Measure(name='lost_opps', agg= AggregationType.COUNT_DISTINCT: 'count_distinct'>, description=None, create_metric=True, expr='case when is_won = false and is_closed = true then id else null end', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: lost_opps\\nagg: count_distinct\\nexpr: case when is_won = false and is_closed = true then id else null end\\ncreate_metric: True\\n', start_line_number=52, end_line_number=55)), non_additive_dimension=None, agg_time_dimension='ds'), Measure(name='amount', agg= AggregationType.SUM: 'sum'>, description=None, create_metric=None, expr='amount_usd', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: amount\\nexpr: amount_usd\\nagg: sum\\n', start_line_number=56, end_line_number=60)), non_additive_dimension=None, agg_time_dimension='ds')], dimensions=[Dimension(name='ds', description=None, type= DimensionType.TIME: 'time'>, is_partition=False, type_params=DimensionTypeParams(is_primary=True, time_format='YYYY-MM-DD', time_granularity=TimeGranularity.DAY), expr='CAST(created_date as DATETIME)', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: ds\\ntype: time\\ntype_params:\\n  is_primary: True\\n  time_granularity: day\\nexpr: CAST(created_date as DATETIME)\\n', start_line_number=18, end_line_number=23))), Dimension(name='close_date', description=None, type= DimensionType.TIME: 'time'>, is_partition=False, type_params=DimensionTypeParams(is_primary=False, time_format='YYYY-MM-DD', time_granularity=TimeGranularity.DAY), expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: close_date\\ntype: time\\ntype_params:\\n  time_granularity: day\\n', start_line_number=24, end_line_number=27))), Dimension(name='lead_source', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: lead_source\\ntype: categorical\\n', start_line_number=28, end_line_number=29))), Dimension(name='campaign_name', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: campaign_name\\ntype: categorical\\n', start_line_number=30, end_line_number=31))), Dimension(name='name', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: name\\ntype: categorical\\n', start_line_number=32, end_line_number=33))), Dimension(name='stage_name', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: stage_name\\ntype: categorical\\n', start_line_number=34, end_line_number=35))), Dimension(name='is_closed', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: is_closed\\ntype: categorical\\n', start_line_number=36, end_line_number=37)))], mutability=Mutability(type= MutabilityType.IMMUTABLE: 'IMMUTABLE'>, type_params=None), origin= DataSourceOrigin.SOURCE: 'source'>, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: salesforce_oppportunities\\nowners:\\n- support@transformdata.io\\nsql_table: salesforce.opportunity\\nmutability:\\n  type: immutable\\nidentifiers:\\n- name: opportunity\\n  type: primary\\n  expr: id\\n- name: owner\\n  type: foreign\\n  expr: owner\\n- name: account\\n  type: foreign\\ndimensions:\\n- name: ds\\n  type: time\\n  type_params:\\n    is_primary: True\\n    time_granularity: day\\n  expr: CAST(created_date as DATETIME)\\n- name: close_date\\n  type: time\\n  type_params:\\n    time_granularity: day\\n- name: lead_source\\n  type: categorical\\n- name: campaign_name\\n  type: categorical\\n- name: name\\n  type: categorical\\n- name: stage_name\\n  type: categorical\\n- name: is_closed\\n  type: categorical\\nmeasures:\\n- name: opps\\n  agg: count_distinct\\n  expr: id\\n  create_metric: true\\n- name: closed_opps\\n  agg: count_distinct\\n  expr: case when is_closed = true then id else null end\\n  description: Counts distinct opportunities that have been closed.\\n  create_metric: True\\n- name: won_opps\\n  agg: count_distinct\\n  expr: case when is_won = true then id else null end\\n  create_metric: True\\n- name: lost_opps\\n  agg: count_distinct\\n  expr: case when is_won = false and is_closed = true then id else null end\\n  create_metric: True\\n- name: amount\\n  expr: amount_usd\\n  agg: sum\\n', start_line_number=2, end_line_number=60))), DataSource(name='salesforce_account', description=None, sql_table='SALESFORCE.account', sql_query=None, dbt_model=None, identifiers=[Identifier(name='account', description=None, type= IdentifierType.PRIMARY: 'primary'>, role=None, entity='account', identifiers=[], expr='id', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/account.yaml', file_slice=FileSlice(filename='account.yaml', content='name: account\\ntype: primary\\nexpr: id\\n', start_line_number=9, end_line_number=11))), Identifier(name='owner', description=None, type= IdentifierType.FOREIGN: 'foreign'>, role=None, entity='owner', identifiers=[], expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/account.yaml', file_slice=FileSlice(filename='account.yaml', content='name: owner\\ntype: foreign\\n', start_line_number=12, end_line_number=13)))], measures=[], dimensions=[Dimension(name='is_deleted', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/account.yaml', file_slice=FileSlice(filename='account.yaml', content='name: is_deleted\\ntype: categorical\\n', start_line_number=15, end_line_number=16))), Dimension(name='name', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/account.yaml', file_slice=FileSlice(filename='account.yaml', content='name: name\\ntype: categorical\\n', start_line_number=17, end_line_number=18))), Dimension(name='type', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/account.yaml', file_slice=FileSlice(filename='account.yaml', content='name: type\\ntype: categorical\\n', start_line_number=19, end_line_number=20))), Dimension(name='annual_revenue', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/account.yaml', file_slice=FileSlice(filename='account.yaml', content='name: annual_revenue\\ntype: categorical\\n', start_line_number=21, end_line_number=22)))], mutability=Mutability(type= MutabilityType.IMMUTABLE: 'IMMUTABLE'>, type_params=None), origin= DataSourceOrigin.SOURCE: 'source'>, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/account.yaml', file_slice=FileSlice(filename='account.yaml', content='name: salesforce_account\\nowners:\\n- support@transformdata.io\\nsql_table: SALESFORCE.account\\nmutability:\\n  type: immutable\\nidentifiers:\\n- name: account\\n  type: primary\\n  expr: id\\n- name: owner\\n  type: foreign\\ndimensions:\\n- name: is_deleted\\n  type: categorical\\n- name: name\\n  type: categorical\\n- name: type\\n  type: categorical\\n- name: annual_revenue\\n  type: categorical\\n', start_line_number=2, end_line_number=22))), DataSource(name='salesforce_lead', description=None, sql_table='salesforce.lead', sql_query=None, dbt_model=None, identifiers=[Identifier(name='lead', description=None, type= IdentifierType.PRIMARY: 'primary'>, role=None, entity='lead', identifiers=[], expr='id', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: lead\\ntype: primary\\nexpr: id\\n', start_line_number=9, end_line_number=11))), Identifier(name='account', description=None, type= IdentifierType.FOREIGN: 'foreign'>, role=None, entity='account', identifiers=[], expr='converted_account_id', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: account\\ntype: foreign\\nexpr: converted_account_id\\n', start_line_number=12, end_line_number=14))), Identifier(name='opportunity', description=None, type= IdentifierType.FOREIGN: 'foreign'>, role=None, entity='opportunity', identifiers=[], expr='converted_opportunity', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: opportunity\\ntype: foreign\\nexpr: converted_opportunity\\n', start_line_number=15, end_line_number=17))), Identifier(name='contact', description=None, type= IdentifierType.FOREIGN: 'foreign'>, role=None, entity='contact', identifiers=[], expr='converted_contact', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: contact\\ntype: foreign\\nexpr: converted_contact\\n', start_line_number=18, end_line_number=20))), Identifier(name='owner', description=None, type= IdentifierType.FOREIGN: 'foreign'>, role=None, entity='owner', identifiers=[], expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: owner\\ntype: foreign\\n', start_line_number=21, end_line_number=22)))], measures=[Measure(name='leads', agg= AggregationType.COUNT_DISTINCT: 'count_distinct'>, description=None, create_metric=True, expr='id', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: leads\\nagg: count_distinct\\nexpr: id\\ncreate_metric: true\\n', start_line_number=45, end_line_number=48)), non_additive_dimension=None, agg_time_dimension='ds'), Measure(name='converted_leads', agg= AggregationType.COUNT_DISTINCT: 'count_distinct'>, description=None, create_metric=True, expr='case when is_converted = true then id else null end', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: converted_leads\\nagg: count_distinct\\nexpr: case when is_converted = true then id else null end\\ncreate_metric: true\\n', start_line_number=49, end_line_number=52)), non_additive_dimension=None, agg_time_dimension='ds')], dimensions=[Dimension(name='ds', description=None, type= DimensionType.TIME: 'time'>, is_partition=False, type_params=DimensionTypeParams(is_primary=True, time_format='YYYY-MM-DD', time_granularity=TimeGranularity.DAY), expr='created_date', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: ds\\ntype: time\\ntype_params:\\n  is_primary: true\\n  time_granularity: day\\nexpr: created_date\\n', start_line_number=24, end_line_number=29))), Dimension(name='converted_date', description=None, type= DimensionType.TIME: 'time'>, is_partition=False, type_params=DimensionTypeParams(is_primary=False, time_format='YYYY-MM-DD', time_granularity=TimeGranularity.DAY), expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: converted_date\\ntype: time\\ntype_params:\\n  time_granularity: day\\n', start_line_number=30, end_line_number=33))), Dimension(name='is_deleted', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: is_deleted\\ntype: categorical\\n', start_line_number=34, end_line_number=35))), Dimension(name='name', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: name\\ntype: categorical\\n', start_line_number=36, end_line_number=37))), Dimension(name='company', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: company\\ntype: categorical\\n', start_line_number=38, end_line_number=39))), Dimension(name='lead_source', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: lead_source\\ntype: categorical\\n', start_line_number=40, end_line_number=41))), Dimension(name='is_converted', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: is_converted\\ntype: categorical\\n', start_line_number=42, end_line_number=43)))], mutability=Mutability(type= MutabilityType.IMMUTABLE: 'IMMUTABLE'>, type_params=None), origin= DataSourceOrigin.SOURCE: 'source'>, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: salesforce_lead\\nowners:\\n- support@transformdata.io\\nsql_table: salesforce.lead\\nmutability:\\n  type: immutable\\nidentifiers:\\n- name: lead\\n  type: primary\\n  expr: id\\n- name: account\\n  type: foreign\\n  expr: converted_account_id\\n- name: opportunity\\n  type: foreign\\n  expr: converted_opportunity\\n- name: contact\\n  type: foreign\\n  expr: converted_contact\\n- name: owner\\n  type: foreign\\ndimensions:\\n- name: ds\\n  type: time\\n  type_params:\\n    is_primary: true\\n    time_granularity: day\\n  expr: created_date\\n- name: converted_date\\n  type: time\\n  type_params:\\n    time_granularity: day\\n- name: is_deleted\\n  type: categorical\\n- name: name\\n  type: categorical\\n- name: company\\n  type: categorical\\n- name: lead_source\\n  type: categorical\\n- name: is_converted\\n  type: categorical\\nmeasures:\\n- name: leads\\n  agg: count_distinct\\n  expr: id\\n  create_metric: true\\n- name: converted_leads\\n  agg: count_distinct\\n  expr: case when is_converted = true then id else null end\\n  create_metric: true\\n', start_line_number=2, end_line_number=52)))], metrics=[Metric(name='closed_won_opps', description=None, type= MetricType.MEASURE_PROXY: 'measure_proxy'>, type_params=MetricTypeParams(measure=None, measures=[MetricInputMeasure(name='opps', constraint=None, alias=None)], numerator=None, denominator=None, expr=None, window=None, grain_to_date=None), constraint=WhereClauseConstraint(where=stage_name = '6 - Closed Won' , linkable_names=['stage_name']), metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: closed_won_opps\\nowners:\\n- support@transformdata.io\\ntype: measure_proxy\\ntype_params:\\n  measures:\\n  - opps\\nconstraint: "stage_name = \\'6 - Closed Won\\' \\\\n"\\n', start_line_number=63, end_line_number=72))), Metric(name='closed_won_amount', description=None, type= MetricType.MEASURE_PROXY: 'measure_proxy'>, type_params=MetricTypeParams(measure=None, measures=[MetricInputMeasure(name='amount', constraint=None, alias=None)], numerator=None, denominator=None, expr=None, window=None, grain_to_date=None), constraint=WhereClauseConstraint(where=stage_name = '6 - Closed Won', linkable_names=['stage_name']), metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content="name: closed_won_amount\\nowners:\\n- support@transformdata.io\\ntype: measure_proxy\\ntype_params:\\n  measures:\\n  - amount\\nconstraint: |\\n  stage_name = '6 - Closed Won'\\n", start_line_number=75, end_line_number=83))), Metric(name='win_rate', description=None, type= MetricType.RATIO: 'ratio'>, type_params=MetricTypeParams(measure=None, measures=None, numerator=MetricInputMeasure(name='won_opps', constraint=None, alias=None), denominator=MetricInputMeasure(name='closed_opps', constraint=None, alias=None), expr=None, window=None, grain_to_date=None), constraint=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: win_rate\\ntype: ratio\\ntype_params:\\n  numerator: won_opps\\n  denominator: closed_opps\\n', start_line_number=86, end_line_number=90))), Metric(name='opps', description=None, type= MetricType.MEASURE_PROXY: 'measure_proxy'>, type_params=MetricTypeParams(measure=None, measures=[MetricInputMeasure(name='opps', constraint=None, alias=None)], numerator=None, denominator=None, expr='opps', window=None, grain_to_date=None), constraint=None, metadata=None), Metric(name='closed_opps', description=None, type= MetricType.MEASURE_PROXY: 'measure_proxy'>, type_params=MetricTypeParams(measure=None, measures=[MetricInputMeasure(name='closed_opps', constraint=None, alias=None)], numerator=None, denominator=None, expr='closed_opps', window=None, grain_to_date=None), constraint=None, metadata=None), Metric(name='won_opps', description=None, type= MetricType.MEASURE_PROXY: 'measure_proxy'>, type_params=MetricTypeParams(measure=None, measures=[MetricInputMeasure(name='won_opps', constraint=None, alias=None)], numerator=None, denominator=None, expr='won_opps', window=None, grain_to_date=None), constraint=None, metadata=None), Metric(name='lost_opps', description=None, type= MetricType.MEASURE_PROXY: 'measure_proxy'>, type_params=MetricTypeParams(measure=None, measures=[MetricInputMeasure(name='lost_opps', constraint=None, alias=None)], numerator=None, denominator=None, expr='lost_opps', window=None, grain_to_date=None), constraint=None, metadata=None), Metric(name='leads', description=None, type= MetricType.MEASURE_PROXY: 'measure_proxy'>, type_params=MetricTypeParams(measure=None, measures=[MetricInputMeasure(name='leads', constraint=None, alias=None)], numerator=None, denominator=None, expr='leads', window=None, grain_to_date=None), constraint=None, metadata=None), Metric(name='converted_leads', description=None, type= MetricType.MEASURE_PROXY: 'measure_proxy'>, type_params=MetricTypeParams(measure=None, measures=[MetricInputMeasure(name='converted_leads', constraint=None, alias=None)], numerator=None, denominator=None, expr='converted_leads', window=None, grain_to_date=None), constraint=None, metadata=None)], materializations=[]),), key word args: {} - RuntimeError: Oh no a bad thing happened!  ```    ### Now when bad things happen  ```  $ mf validate-configs    (To see warnings and future-errors, run again with flag `--show-all`)     Successfully linted config YAML files (ERRORS: 0, FUTURE_ERRORS: 0, WARNINGS: 0)     Successfully built model from configs (ERRORS: 0, FUTURE_ERRORS: 0, WARNINGS: 0)    Breaking issues found when checking semantics of built model (ERRORS: 1, FUTURE_ERRORS: 0, WARNINGS: 0)    ERROR: An error occured while running model validation ensuring elements have adequately unique names - RuntimeError: Oh no a bad thing happened!  ```    ### Now when bad things happen, but with `--verbose-issues`  ```  $ mf validate-configs --verbose-issues    (To see warnings and future-errors, run again with flag `--show-all`)     Successfully linted config YAML files (ERRORS: 0, FUTURE_ERRORS: 0, WARNINGS: 0)     Successfully built model from configs (ERRORS: 0, FUTURE_ERRORS: 0, WARNINGS: 0)    Breaking issues found when checking semantics of built model (ERRORS: 1, FUTURE_ERRORS: 0, WARNINGS: 0)    ERROR: An error occured while running model validation ensuring elements have adequately unique names - RuntimeError: Oh no a bad thing happened!    method_name: validate_model  passed_args: positional args: (UserConfiguredModel(data_sources=[DataSource(name='salesforce_account', description=None, sql_table='SALESFORCE.account', sql_query=None, dbt_model=None, identifiers=[Identifier(name='account', description=None, type= IdentifierType.PRIMARY: 'primary'>, role=None, entity='account', identifiers=[], expr='id', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/account.yaml', file_slice=FileSlice(filename='account.yaml', content='name: account\\ntype: primary\\nexpr: id\\n', start_line_number=9, end_line_number=11))), Identifier(name='owner', description=None, type= IdentifierType.FOREIGN: 'foreign'>, role=None, entity='owner', identifiers=[], expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/account.yaml', file_slice=FileSlice(filename='account.yaml', content='name: owner\\ntype: foreign\\n', start_line_number=12, end_line_number=13)))], measures=[], dimensions=[Dimension(name='is_deleted', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/account.yaml', file_slice=FileSlice(filename='account.yaml', content='name: is_deleted\\ntype: categorical\\n', start_line_number=15, end_line_number=16))), Dimension(name='name', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/account.yaml', file_slice=FileSlice(filename='account.yaml', content='name: name\\ntype: categorical\\n', start_line_number=17, end_line_number=18))), Dimension(name='type', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/account.yaml', file_slice=FileSlice(filename='account.yaml', content='name: type\\ntype: categorical\\n', start_line_number=19, end_line_number=20))), Dimension(name='annual_revenue', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/account.yaml', file_slice=FileSlice(filename='account.yaml', content='name: annual_revenue\\ntype: categorical\\n', start_line_number=21, end_line_number=22)))], mutability=Mutability(type= MutabilityType.IMMUTABLE: 'IMMUTABLE'>, type_params=None), origin= DataSourceOrigin.SOURCE: 'source'>, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/account.yaml', file_slice=FileSlice(filename='account.yaml', content='name: salesforce_account\\nowners:\\n- support@transformdata.io\\nsql_table: SALESFORCE.account\\nmutability:\\n  type: immutable\\nidentifiers:\\n- name: account\\n  type: primary\\n  expr: id\\n- name: owner\\n  type: foreign\\ndimensions:\\n- name: is_deleted\\n  type: categorical\\n- name: name\\n  type: categorical\\n- name: type\\n  type: categorical\\n- name: annual_revenue\\n  type: categorical\\n', start_line_number=2, end_line_number=22))), DataSource(name='salesforce_lead', description=None, sql_table='salesforce.lead', sql_query=None, dbt_model=None, identifiers=[Identifier(name='lead', description=None, type= IdentifierType.PRIMARY: 'primary'>, role=None, entity='lead', identifiers=[], expr='id', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: lead\\ntype: primary\\nexpr: id\\n', start_line_number=9, end_line_number=11))), Identifier(name='account', description=None, type= IdentifierType.FOREIGN: 'foreign'>, role=None, entity='account', identifiers=[], expr='converted_account_id', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: account\\ntype: foreign\\nexpr: converted_account_id\\n', start_line_number=12, end_line_number=14))), Identifier(name='opportunity', description=None, type= IdentifierType.FOREIGN: 'foreign'>, role=None, entity='opportunity', identifiers=[], expr='converted_opportunity', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: opportunity\\ntype: foreign\\nexpr: converted_opportunity\\n', start_line_number=15, end_line_number=17))), Identifier(name='contact', description=None, type= IdentifierType.FOREIGN: 'foreign'>, role=None, entity='contact', identifiers=[], expr='converted_contact', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: contact\\ntype: foreign\\nexpr: converted_contact\\n', start_line_number=18, end_line_number=20))), Identifier(name='owner', description=None, type= IdentifierType.FOREIGN: 'foreign'>, role=None, entity='owner', identifiers=[], expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: owner\\ntype: foreign\\n', start_line_number=21, end_line_number=22)))], measures=[Measure(name='leads', agg= AggregationType.COUNT_DISTINCT: 'count_distinct'>, description=None, create_metric=True, expr='id', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: leads\\nagg: count_distinct\\nexpr: id\\ncreate_metric: true\\n', start_line_number=45, end_line_number=48)), non_additive_dimension=None, agg_time_dimension='ds'), Measure(name='converted_leads', agg= AggregationType.COUNT_DISTINCT: 'count_distinct'>, description=None, create_metric=True, expr='case when is_converted = true then id else null end', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: converted_leads\\nagg: count_distinct\\nexpr: case when is_converted = true then id else null end\\ncreate_metric: true\\n', start_line_number=49, end_line_number=52)), non_additive_dimension=None, agg_time_dimension='ds')], dimensions=[Dimension(name='ds', description=None, type= DimensionType.TIME: 'time'>, is_partition=False, type_params=DimensionTypeParams(is_primary=True, time_format='YYYY-MM-DD', time_granularity=TimeGranularity.DAY), expr='created_date', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: ds\\ntype: time\\ntype_params:\\n  is_primary: true\\n  time_granularity: day\\nexpr: created_date\\n', start_line_number=24, end_line_number=29))), Dimension(name='converted_date', description=None, type= DimensionType.TIME: 'time'>, is_partition=False, type_params=DimensionTypeParams(is_primary=False, time_format='YYYY-MM-DD', time_granularity=TimeGranularity.DAY), expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: converted_date\\ntype: time\\ntype_params:\\n  time_granularity: day\\n', start_line_number=30, end_line_number=33))), Dimension(name='is_deleted', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: is_deleted\\ntype: categorical\\n', start_line_number=34, end_line_number=35))), Dimension(name='name', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: name\\ntype: categorical\\n', start_line_number=36, end_line_number=37))), Dimension(name='company', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: company\\ntype: categorical\\n', start_line_number=38, end_line_number=39))), Dimension(name='lead_source', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: lead_source\\ntype: categorical\\n', start_line_number=40, end_line_number=41))), Dimension(name='is_converted', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: is_converted\\ntype: categorical\\n', start_line_number=42, end_line_number=43)))], mutability=Mutability(type= MutabilityType.IMMUTABLE: 'IMMUTABLE'>, type_params=None), origin= DataSourceOrigin.SOURCE: 'source'>, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/leads.yaml', file_slice=FileSlice(filename='leads.yaml', content='name: salesforce_lead\\nowners:\\n- support@transformdata.io\\nsql_table: salesforce.lead\\nmutability:\\n  type: immutable\\nidentifiers:\\n- name: lead\\n  type: primary\\n  expr: id\\n- name: account\\n  type: foreign\\n  expr: converted_account_id\\n- name: opportunity\\n  type: foreign\\n  expr: converted_opportunity\\n- name: contact\\n  type: foreign\\n  expr: converted_contact\\n- name: owner\\n  type: foreign\\ndimensions:\\n- name: ds\\n  type: time\\n  type_params:\\n    is_primary: true\\n    time_granularity: day\\n  expr: created_date\\n- name: converted_date\\n  type: time\\n  type_params:\\n    time_granularity: day\\n- name: is_deleted\\n  type: categorical\\n- name: name\\n  type: categorical\\n- name: company\\n  type: categorical\\n- name: lead_source\\n  type: categorical\\n- name: is_converted\\n  type: categorical\\nmeasures:\\n- name: leads\\n  agg: count_distinct\\n  expr: id\\n  create_metric: true\\n- name: converted_leads\\n  agg: count_distinct\\n  expr: case when is_converted = true then id else null end\\n  create_metric: true\\n', start_line_number=2, end_line_number=52))), DataSource(name='salesforce_users', description=None, sql_table='salesforce.user', sql_query=None, dbt_model=None, identifiers=[Identifier(name='owner', description=None, type= IdentifierType.PRIMARY: 'primary'>, role=None, entity='owner', identifiers=[], expr='id', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/users.yaml', file_slice=FileSlice(filename='users.yaml', content='name: owner\\ntype: primary\\nexpr: id\\n', start_line_number=9, end_line_number=11)))], measures=[], dimensions=[Dimension(name='ds', description=None, type= DimensionType.TIME: 'time'>, is_partition=False, type_params=DimensionTypeParams(is_primary=True, time_format='YYYY-MM-DD', time_granularity=TimeGranularity.DAY), expr='created_date', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/users.yaml', file_slice=FileSlice(filename='users.yaml', content='name: ds\\ntype: time\\ntype_params:\\n  is_primary: True\\n  time_granularity: day\\nexpr: created_date\\n', start_line_number=13, end_line_number=18))), Dimension(name='full_name', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/users.yaml', file_slice=FileSlice(filename='users.yaml', content='name: full_name\\ntype: categorical\\n', start_line_number=19, end_line_number=20)))], mutability=Mutability(type= MutabilityType.IMMUTABLE: 'IMMUTABLE'>, type_params=None), origin= DataSourceOrigin.SOURCE: 'source'>, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/users.yaml', file_slice=FileSlice(filename='users.yaml', content='name: salesforce_users\\nowners:\\n- support@transformdata.io\\nsql_table: salesforce.user\\nmutability:\\n  type: immutable\\nidentifiers:\\n- name: owner\\n  type: primary\\n  expr: id\\ndimensions:\\n- name: ds\\n  type: time\\n  type_params:\\n    is_primary: True\\n    time_granularity: day\\n  expr: created_date\\n- name: full_name\\n  type: categorical\\n', start_line_number=2, end_line_number=20))), DataSource(name='salesforce_oppportunities', description=None, sql_table='salesforce.opportunity', sql_query=None, dbt_model=None, identifiers=[Identifier(name='opportunity', description=None, type= IdentifierType.PRIMARY: 'primary'>, role=None, entity='opportunity', identifiers=[], expr='id', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: opportunity\\ntype: primary\\nexpr: id\\n', start_line_number=9, end_line_number=11))), Identifier(name='owner', description=None, type= IdentifierType.FOREIGN: 'foreign'>, role=None, entity='owner', identifiers=[], expr='owner', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: owner\\ntype: foreign\\nexpr: owner\\n', start_line_number=12, end_line_number=14))), Identifier(name='account', description=None, type= IdentifierType.FOREIGN: 'foreign'>, role=None, entity='account', identifiers=[], expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: account\\ntype: foreign\\n', start_line_number=15, end_line_number=16)))], measures=[Measure(name='opps', agg= AggregationType.COUNT_DISTINCT: 'count_distinct'>, description=None, create_metric=True, expr='id', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: opps\\nagg: count_distinct\\nexpr: id\\ncreate_metric: true\\n', start_line_number=39, end_line_number=42)), non_additive_dimension=None, agg_time_dimension='ds'), Measure(name='closed_opps', agg= AggregationType.COUNT_DISTINCT: 'count_distinct'>, description='Counts distinct opportunities that have been closed.', create_metric=True, expr='case when is_closed = true then id else null end', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: closed_opps\\nagg: count_distinct\\nexpr: case when is_closed = true then id else null end\\ndescription: Counts distinct opportunities that have been closed.\\ncreate_metric: True\\n', start_line_number=43, end_line_number=47)), non_additive_dimension=None, agg_time_dimension='ds'), Measure(name='won_opps', agg= AggregationType.COUNT_DISTINCT: 'count_distinct'>, description=None, create_metric=True, expr='case when is_won = true then id else null end', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: won_opps\\nagg: count_distinct\\nexpr: case when is_won = true then id else null end\\ncreate_metric: True\\n', start_line_number=48, end_line_number=51)), non_additive_dimension=None, agg_time_dimension='ds'), Measure(name='lost_opps', agg= AggregationType.COUNT_DISTINCT: 'count_distinct'>, description=None, create_metric=True, expr='case when is_won = false and is_closed = true then id else null end', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: lost_opps\\nagg: count_distinct\\nexpr: case when is_won = false and is_closed = true then id else null end\\ncreate_metric: True\\n', start_line_number=52, end_line_number=55)), non_additive_dimension=None, agg_time_dimension='ds'), Measure(name='amount', agg= AggregationType.SUM: 'sum'>, description=None, create_metric=None, expr='amount_usd', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: amount\\nexpr: amount_usd\\nagg: sum\\n', start_line_number=56, end_line_number=60)), non_additive_dimension=None, agg_time_dimension='ds')], dimensions=[Dimension(name='ds', description=None, type= DimensionType.TIME: 'time'>, is_partition=False, type_params=DimensionTypeParams(is_primary=True, time_format='YYYY-MM-DD', time_granularity=TimeGranularity.DAY), expr='CAST(created_date as DATETIME)', metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: ds\\ntype: time\\ntype_params:\\n  is_primary: True\\n  time_granularity: day\\nexpr: CAST(created_date as DATETIME)\\n', start_line_number=18, end_line_number=23))), Dimension(name='close_date', description=None, type= DimensionType.TIME: 'time'>, is_partition=False, type_params=DimensionTypeParams(is_primary=False, time_format='YYYY-MM-DD', time_granularity=TimeGranularity.DAY), expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: close_date\\ntype: time\\ntype_params:\\n  time_granularity: day\\n', start_line_number=24, end_line_number=27))), Dimension(name='lead_source', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: lead_source\\ntype: categorical\\n', start_line_number=28, end_line_number=29))), Dimension(name='campaign_name', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: campaign_name\\ntype: categorical\\n', start_line_number=30, end_line_number=31))), Dimension(name='name', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: name\\ntype: categorical\\n', start_line_number=32, end_line_number=33))), Dimension(name='stage_name', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: stage_name\\ntype: categorical\\n', start_line_number=34, end_line_number=35))), Dimension(name='is_closed', description=None, type= DimensionType.CATEGORICAL: 'categorical'>, is_partition=False, type_params=None, expr=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: is_closed\\ntype: categorical\\n', start_line_number=36, end_line_number=37)))], mutability=Mutability(type= MutabilityType.IMMUTABLE: 'IMMUTABLE'>, type_params=None), origin= DataSourceOrigin.SOURCE: 'source'>, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: salesforce_oppportunities\\nowners:\\n- support@transformdata.io\\nsql_table: salesforce.opportunity\\nmutability:\\n  type: immutable\\nidentifiers:\\n- name: opportunity\\n  type: primary\\n  expr: id\\n- name: owner\\n  type: foreign\\n  expr: owner\\n- name: account\\n  type: foreign\\ndimensions:\\n- name: ds\\n  type: time\\n  type_params:\\n    is_primary: True\\n    time_granularity: day\\n  expr: CAST(created_date as DATETIME)\\n- name: close_date\\n  type: time\\n  type_params:\\n    time_granularity: day\\n- name: lead_source\\n  type: categorical\\n- name: campaign_name\\n  type: categorical\\n- name: name\\n  type: categorical\\n- name: stage_name\\n  type: categorical\\n- name: is_closed\\n  type: categorical\\nmeasures:\\n- name: opps\\n  agg: count_distinct\\n  expr: id\\n  create_metric: true\\n- name: closed_opps\\n  agg: count_distinct\\n  expr: case when is_closed = true then id else null end\\n  description: Counts distinct opportunities that have been closed.\\n  create_metric: True\\n- name: won_opps\\n  agg: count_distinct\\n  expr: case when is_won = true then id else null end\\n  create_metric: True\\n- name: lost_opps\\n  agg: count_distinct\\n  expr: case when is_won = false and is_closed = true then id else null end\\n  create_metric: True\\n- name: amount\\n  expr: amount_usd\\n  agg: sum\\n', start_line_number=2, end_line_number=60)))], metrics=[Metric(name='closed_won_opps', description=None, type= MetricType.MEASURE_PROXY: 'measure_proxy'>, type_params=MetricTypeParams(measure=None, measures=[MetricInputMeasure(name='opps', constraint=None, alias=None)], numerator=None, denominator=None, expr=None, window=None, grain_to_date=None), constraint=WhereClauseConstraint(where=stage_name = '6 - Closed Won' , linkable_names=['stage_name']), metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: closed_won_opps\\nowners:\\n- support@transformdata.io\\ntype: measure_proxy\\ntype_params:\\n  measures:\\n  - opps\\nconstraint: "stage_name = \\'6 - Closed Won\\' \\\\n"\\n', start_line_number=63, end_line_number=72))), Metric(name='closed_won_amount', description=None, type= MetricType.MEASURE_PROXY: 'measure_proxy'>, type_params=MetricTypeParams(measure=None, measures=[MetricInputMeasure(name='amount', constraint=None, alias=None)], numerator=None, denominator=None, expr=None, window=None, grain_to_date=None), constraint=WhereClauseConstraint(where=stage_name = '6 - Closed Won', linkable_names=['stage_name']), metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content="name: closed_won_amount\\nowners:\\n- support@transformdata.io\\ntype: measure_proxy\\ntype_params:\\n  measures:\\n  - amount\\nconstraint: |\\n  stage_name = '6 - Closed Won'\\n", start_line_number=75, end_line_number=83))), Metric(name='win_rate', description=None, type= MetricType.RATIO: 'ratio'>, type_params=MetricTypeParams(measure=None, measures=None, numerator=MetricInputMeasure(name='won_opps', constraint=None, alias=None), denominator=MetricInputMeasure(name='closed_opps', constraint=None, alias=None), expr=None, window=None, grain_to_date=None), constraint=None, metadata=Metadata(repo_file_path='/Users/tqm/Developer/transform-data/metricflow/config-templates/salesforce/opportunities.yaml', file_slice=FileSlice(filename='opportunities.yaml', content='name: win_rate\\ntype: ratio\\ntype_params:\\n  numerator: won_opps\\n  denominator: closed_opps\\n', start_line_number=86, end_line_number=90))), Metric(name='leads', description=None, type= MetricType.MEASURE_PROXY: 'measure_proxy'>, type_params=MetricTypeParams(measure=None, measures=[MetricInputMeasure(name='leads', constraint=None, alias=None)], numerator=None, denominator=None, expr='leads', window=None, grain_to_date=None), constraint=None, metadata=None), Metric(name='converted_leads', description=None, type= MetricType.MEASURE_PROXY: 'measure_proxy'>, type_params=MetricTypeParams(measure=None, measures=[MetricInputMeasure(name='converted_leads', constraint=None, alias=None)], numerator=None, denominator=None, expr='converted_leads', window=None, grain_to_date=None), constraint=None, metadata=None), Metric(name='opps', description=None, type= MetricType.MEASURE_PROXY: 'measure_proxy'>, type_params=MetricTypeParams(measure=None, measures=[MetricInputMeasure(name='opps', constraint=None, alias=None)], numerator=None, denominator=None, expr='opps', window=None, grain_to_date=None), constraint=None, metadata=None), Metric(name='closed_opps', description=None, type= MetricType.MEASURE_PROXY: 'measure_proxy'>, type_params=MetricTypeParams(measure=None, measures=[MetricInputMeasure(name='closed_opps', constraint=None, alias=None)], numerator=None, denominator=None, expr='closed_opps', window=None, grain_to_date=None), constraint=None, metadata=None), Metric(name='won_opps', description=None, type= MetricType.MEASURE_PROXY: 'measure_proxy'>, type_params=MetricTypeParams(measure=None, measures=[MetricInputMeasure(name='won_opps', constraint=None, alias=None)], numerator=None, denominator=None, expr='won_opps', window=None, grain_to_date=None), constraint=None, metadata=None), Metric(name='lost_opps', description=None, type= MetricType.MEASURE_PROXY: 'measure_proxy'>, type_params=MetricTypeParams(measure=None, measures=[MetricInputMeasure(name='lost_opps', constraint=None, alias=None)], numerator=None, denominator=None, expr='lost_opps', window=None, grain_to_date=None), constraint=None, metadata=None)], materializations=[]),), key word args: {}  stacktrace:   File "/Users/tqm/Developer/transform-data/metricflow/metricflow/model/validations/validator_helpers.py", line 328, in wrapper      issues = func(*args, **kwargs)    File "/Users/tqm/Developer/transform-data/metricflow/metricflow/model/validations/unique_valid_name.py", line 233, in validate_model      raise RuntimeError("Oh no a bad thing happened!")  ```
https://github.com/developmentseed/fastapi-authorization-gateway/pull/3	1	legibility	2024-02-15 18:41:59	Attempt to improve legibility in permissions logic	
https://github.com/FlexMeasures/flexmeasures/pull/413	2	legibility	2022-04-05 14:26:25	Default chart legibility	I saw some people having trouble reading our chart axes in meetings, so I increased the default font size a bit. Also for our calendar widget.    Some of this code should be useful for chart specs defined in plugins, too.
https://github.com/google/capirca/pull/214	2	legibility	2021-08-04 23:37:11	chg: refactored aclgen for legibility	* Used pathlib instead of manipulating path strings with the os module (compatibility: python3.4+)  * Removed SkipLines function and implemented the same functionality through the more concise `filter` function  * Changed named lambdas into function declarations (pep8 E731)  * Added type hints (compatibility: python3.5+)  
https://github.com/matplotlib/matplotlib/pull/16423	1	legibility	2020-02-06 21:03:48	Slightly improve streamplot code legibility.	`__getitem__` is never called with more than a single arg, and we can  just use normal indexing on _mask both for getting and for setting.    ## PR Summary    ## PR Checklist    - [ ] Has Pytest style unit tests  - [ ] Code is [Flake 8](http://flake8.pycqa.org/en/latest/) compliant  - [ ] New features are documented, with examples if plot related  - [ ] Documentation is sphinx and numpydoc compliant  - [ ] Added an entry to doc/users/next_whats_new/ if major new feature (follow instructions in README.rst there)  - [ ] Documented in doc/api/api_changes.rst if API changed in a backward-incompatible way        Thank you so much for your PR!  To help us review your contribution, please  consider the following points:    - A development guide is available at https://matplotlib.org/devdocs/devel/index.html.    - Help with git and github is available at    https://matplotlib.org/devel/gitwash/development_workflow.html.    - Do not create the PR out of master, but out of a separate branch.    - The PR title should summarize the changes, for example "Raise ValueError on    non-numeric input to set_xlim".  Avoid non-descriptive titles such as    "Addresses issue #8576".    - The summary should provide at least 1-2 sentences describing the pull request    in detail (Why is this change required?  What problem does it solve?) and    link to any relevant issues.    - If you are contributing fixes to docstrings, please pay attention to    http://matplotlib.org/devel/documenting_mpl.html#formatting.  In particular,    note the difference between using single backquotes, double backquotes, and    asterisks in the markup.    We understand that PRs can sometimes be overwhelming, especially as the  reviews start coming in.  Please let us know if the reviews are unclear or  the recommended next step seems overly demanding, if you would like help in  addressing a reviewer's comments, or if you have been waiting too long to hear  back on your PR.     
https://github.com/metoppv/improver/pull/1509	1	legibility	2021-06-08 02:34:43	Checksum comparison output legibility	Generate a full list of files/checksums in the acceptance test directory and compare against the expected checksum list file.  If differences are found, a unified diff is printed to stdout so that a developers can identify the differing files.    This is a follow up from #1443.  The sorting of filenames will also pick up problems like that fixed in #1467. There are some other remaining non-sorted checksum file entries fixed as part of this PR.
https://github.com/spack/spack/pull/33482	2	legibility	2022-10-25 10:21:34	Improve legibility of Gitlab CI	Make Gitlab CI logs more legible by dropping debug messages, in favor of  showing backtraces on error. Also use color output.    (Basically just the output improvements from #33248, without the parallel install of deps)
https://github.com/ssrando/ssrando/pull/611	3	legibility	2024-11-21 23:25:24	Improve element layout for better counter legibility	## What does this PR do?  This moves all the QSpinBox elements below their respective QLabel so they can take the whole width of their column to properly display their value.    ## How do you test this changes?  Only by launching the rando app, given this is only UI changes.     ## Notes  This has already been tested by someone who had issues before.
https://github.com/stan-dev/httpstan/pull/607	1	legibility	2022-07-05 14:21:06	refactor: Improve code readability, init failed fix	A recent commit, `feat: Add context to initialization failed error`  included code that was not as clear as it could have been. This  commit improves code legibility.
https://github.com/usdoj-crt/crt-portal/pull/961	3	legibility	2021-08-31 22:34:43	Improve consistency and legibility of search filters	[Link to issue.](https://github.com/usdoj-crt/crt-portal-management/issues/1037)    ## What does this change?    This pull request contains a smattering of changes that makes the filter labels more consistent and legible. Here's a full rundown:    - Labels "ID" and "Complaint ID" are now "Complaint ID"  - "create date start" and "create date end" are now "Submission date start/end" to match label in "Date" dropdown  - "Service member" now uses the proper "Servicemember" label  - "correctional facility type" and "Prison Type" are now "Prison type"  - "Summary" and "CRT Summary" are now "CRT summary"  - "Location name" and "Incident location" are now "Incident location name"  - Labels that used first-word uppercase are now in sentence case  - Very long active search filters are now truncated to one line, with ellipsis indicating the point of clipping  - Bonus: fix a small visual issue where filter dropdowns flash "open" on page load.    ## Screenshots (for front-end PR):    ![Screenshot 2021-08-27 at 17-06-52 Contact the Civil Rights Division Department of Justice](https://user-images.githubusercontent.com/2553268/131355670-f6cce116-c5c7-4744-aba2-7b41cb5b7b13.png)     img width="1347" alt="Screen Shot 2021-08-30 at 10 33 23 AM" src="https://user-images.githubusercontent.com/2553268/131356126-91a0d940-c0ca-467b-ba3b-bd06eb75a7d6.png">    ## Checklist:    ### Author    + [x] If this is a story, run locally and check to make sure all Acceptance Criteria are met. (If any criteria are unclear, ask about them.).  + [x] Check for, document, and establish a testing plan for any behavior that may vary across environments or is otherwise difficult to test.  + [x] Check for [accessibility](/docs/a11y_plan.md).  + [x] [Tests pass](https://github.com/USDOJ/crt-portal/#tests).    ### Reviewer    + [x] If this is a story, run locally and check to make sure all Acceptance Criteria are met. (If any criteria are unclear, ask about them.).  + [x] Check for any behavior that may vary across environments or is difficult to test, and ensure that it is well-understood, documented, and that there is a testing plan in place.  + [x] Re-check for [accessibility](/docs/a11y_plan.md).  + [x] [Tests pass](https://github.com/USDOJ/crt-portal/#tests).    ## Notes for reviewer:    See [PR instructions doc](https://github.com/usdoj/crt-portal/blob/master/docs/pull_requests.md) for full pull request review instructions.  
https://github.com/run-ai/genv/pull/14	1	readability	2022-12-11 08:49:57	Some code readability improvments	
https://github.com/run-llama/llama_index/pull/12520	1	readability	2024-04-03 20:26:45	Readability web page reader fix playwright async api bug	# Description    Playwright not working as it detects the asyncio loop in jupyter notebook.    Updated playwright and added nested asyncio loop as well as running loop sync so that it will work in scripts as well    Fixes # [(issue)](https://github.com/run-llama/llama_index/issues/12525)    ## New Package?    Did I fill in the `tool.llamahub` section in the `pyproject.toml` and provide a detailed README.md for my new integration or package?    - [ ] Yes  - [X] No    ## Version Bump?    Did I bump the version in the `pyproject.toml` file of the package I am updating? (Except for the `llama-index-core` package)    - [X] Yes  - [ ] No    ## Type of Change    Please delete options that are not relevant.    - [X] Bug fix (non-breaking change which fixes an issue)  - [ ] New feature (non-breaking change which adds functionality)  - [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)  - [ ] This change requires a documentation update    ## How Has This Been Tested?  Locally in jupyter notebook as well as python interpreter    - [ ] Added new unit/integration tests  - [ ] Added new notebook (that tests end-to-end)  - [ ] I stared at the code and made sure it makes sense    ## Suggested Checklist:    - [X] I have performed a self-review of my own code  - [ ] I have commented my code, particularly in hard-to-understand areas  - [ ] I have made corresponding changes to the documentation  - [ ] I have added Google Colab support for the newly added notebooks.  - [X] My changes generate no new warnings  - [ ] I have added tests that prove my fix is effective or that my feature works  - [ ] New and existing unit tests pass locally with my changes  - [X] I ran `make format; make lint` to appease the lint gods  
https://github.com/runtimeverification/kontrol/pull/720	5	readability	2024-07-25 18:27:42	KCFG Readability improvements	- By default, ` program>` and ` code>` cells are printed instead of the literal byte string as the name of the contract to which they correspond, if the lookup is successful, and the ` jumpDests>` cell is abbreviated.  - Adds `--expand-config` option to show the real configuration without these simplifications.  - Displays currently executing function, based on matching first 4 bytes of calldata to function ID and matching code to known contract, for each node in the KCFG.
https://github.com/Samsung/Universum/pull/758	1	readability	2023-02-03 07:27:42	fix(checks): ignore Pylint warnings for better readability	
https://github.com/SBFRF/pyDIWASP/pull/9	5	readability	2024-03-07 00:12:35	Code readability improvements	This PR changes the lines with multiple operations separated by semicolons into one operation per line, improving readability. There are also a bunch of automatic editor whitespace removal changes.
https://github.com/scikit-hep/awkward/pull/2359	1	readability	2023-04-06 05:44:08	refactor: improve broadcasting logic readability	This PR splits the continuation in broadcasting into separate closures that we can more easily refactor.
https://github.com/scikit-image/scikit-image/pull/4110	11	readability	2019-08-24 16:17:34	Gallery: use fstrings for better readability	
https://github.com/scikit-learn/scikit-learn/pull/9973	1	readability	2017-10-24 07:41:15	[MRG] Improve readability of outlier detection example.	#### What does this implement/fix? Explain your changes.  Improves readability of the [outlier detection](http://scikit-learn.org/stable/auto_examples/covariance/plot_outlier_detection.html) example.    #### Any other comments?  PEP8 checks passed successfully.  
https://github.com/scikit-learn/scikit-learn/pull/11077	1	readability	2018-05-08 12:36:32	replacing period with comma to improve readability	Number One thousand is written as 1.000 which can misinterpreted with one point zero zero zero.  To improve the readability period is replaced with comma        Thanks for contributing a pull request! Please ensure you have taken a look at  the contribution guidelines: https://github.com/scikit-learn/scikit-learn/blob/master/CONTRIBUTING.md#pull-request-checklist       #### Reference Issues/PRs      Example: Fixes #1234. See also #3456.  Please use keywords (e.g., Fixes) to create link to the issues or pull requests  you resolved, so that they will automatically be closed when your pull request  is merged. See https://github.com/blog/1506-closing-issues-via-pull-requests         #### What does this implement/fix? Explain your changes.      #### Any other comments?          Please be aware that we are a loose team of volunteers so patience is  necessary; assistance handling other issues is very welcome. We value  all user contributions, no matter how minor they are. If we are slow to  review, either the pull request needs some benchmarking, tinkering,  convincing, etc. or more likely the reviewers are simply busy. In either  case, we ask for your understanding during the review process.  For more information, see our FAQ on this topic:  http://scikit-learn.org/dev/faq.html#why-is-my-pull-request-not-getting-any-attention.    Thanks for contributing!     
https://github.com/scikit-learn/scikit-learn/pull/13832	2	readability	2019-05-16 09:19:20	[MRG] RidgeCV minor refactor to improve readability	    Thanks for contributing a pull request! Please ensure you have taken a look at  the contribution guidelines: https://github.com/scikit-learn/scikit-learn/blob/master/CONTRIBUTING.md#pull-request-checklist       #### Reference Issues/PRs      Example: Fixes #1234. See also #3456.  Please use keywords (e.g., Fixes) to create link to the issues or pull requests  you resolved, so that they will automatically be closed when your pull request  is merged. See https://github.com/blog/1506-closing-issues-via-pull-requests     Minor refactors to #13350     #### What does this implement/fix? Explain your changes.  1. Renames variables trying to use the same variables shown in the reference.   2. Uses `lam` and `Q` when dealing with eigen decomposition, and `U` and `v` are used when using SVD.   3. Always use `n_samples` first when comparing to `n_features` in comments.    #### Any other comments?  The goal of this PR is to make this code easier to read/maintain in the future.        Please be aware that we are a loose team of volunteers so patience is  necessary; assistance handling other issues is very welcome. We value  all user contributions, no matter how minor they are. If we are slow to  review, either the pull request needs some benchmarking, tinkering,  convincing, etc. or more likely the reviewers are simply busy. In either  case, we ask for your understanding during the review process.  For more information, see our FAQ on this topic:  http://scikit-learn.org/dev/faq.html#why-is-my-pull-request-not-getting-any-attention.    Thanks for contributing!     CC @ogrisel 
https://github.com/scikit-learn/scikit-learn/pull/14154	1	readability	2019-06-22 20:03:30	EXA Readability of plot_isotonic_regression.py for color blind persons	    Thanks for contributing a pull request! Please ensure you have taken a look at  the contribution guidelines: https://github.com/scikit-learn/scikit-learn/blob/master/CONTRIBUTING.md#pull-request-checklist       #### Reference Issues/PRs:       Fix:  #5435  Convert the output image contrasting options for different color-blind readability.     #### What does this implement/fix? Explain your changes.  It enables readability of the image by both normal as well as different color-blind groups including the red-blind, green-blind, blue-blind.      #### Collaborators  @martinoywa, mcecily, @felexkemboi, @toopurity          Please be aware that we are a loose team of volunteers so patience is  necessary; assistance handling other issues is very welcome. We value  all user contributions, no matter how minor they are. If we are slow to  review, either the pull request needs some benchmarking, tinkering,  convincing, etc. or more likely the reviewers are simply busy. In either  case, we ask for your understanding during the review process.  For more information, see our FAQ on this topic:  http://scikit-learn.org/dev/faq.html#why-is-my-pull-request-not-getting-any-attention.    Thanks for contributing!     
https://github.com/scikit-learn/scikit-learn/pull/24311	1	readability	2022-09-01 16:04:58	DOC improved readability of instructions	    Thanks for contributing a pull request! Please ensure you have taken a look at  the contribution guidelines: https://github.com/scikit-learn/scikit-learn/blob/main/CONTRIBUTING.md       #### Reference Issues/PRs      Example: Fixes #1234. See also #3456.  Please use keywords (e.g., Fixes) to create link to the issues or pull requests  you resolved, so that they will automatically be closed when your pull request  is merged. See https://github.com/blog/1506-closing-issues-via-pull-requests         #### What does this implement/fix? Explain your changes.    Added several commas to improve readability of instructions.    #### Any other comments?          Please be aware that we are a loose team of volunteers so patience is  necessary; assistance handling other issues is very welcome. We value  all user contributions, no matter how minor they are. If we are slow to  review, either the pull request needs some benchmarking, tinkering,  convincing, etc. or more likely the reviewers are simply busy. In either  case, we ask for your understanding during the review process.  For more information, see our FAQ on this topic:  http://scikit-learn.org/dev/faq.html#why-is-my-pull-request-not-getting-any-attention.    Thanks for contributing!     
https://github.com/scikit-learn/scikit-learn/pull/25644	1	readability	2023-02-20 20:23:21	DOC modified the graph for better readability	    Thanks for contributing a pull request! Please ensure you have taken a look at  the contribution guidelines: https://github.com/scikit-learn/scikit-learn/blob/main/CONTRIBUTING.md       #### Reference Issues/PRs      Example: Fixes #1234. See also #3456.  Please use keywords (e.g., Fixes) to create link to the issues or pull requests  you resolved, so that they will automatically be closed when your pull request  is merged. See https://github.com/blog/1506-closing-issues-via-pull-requests         #### What does this implement/fix? Explain your changes.    1. Changed the line orders to Linear Discriminant Analysis, with Ledoit Wolf, with OAS.  2. Moved the legend to the center right, so it does not block the lines.  3. Shortened the labels in the legend for better readability.    #### Any other comments?          Please be aware that we are a loose team of volunteers so patience is  necessary; assistance handling other issues is very welcome. We value  all user contributions, no matter how minor they are. If we are slow to  review, either the pull request needs some benchmarking, tinkering,  convincing, etc. or more likely the reviewers are simply busy. In either  case, we ask for your understanding during the review process.  For more information, see our FAQ on this topic:  http://scikit-learn.org/dev/faq.html#why-is-my-pull-request-not-getting-any-attention.    Thanks for contributing!     
https://github.com/scikit-learn/scikit-learn/pull/26169	1	readability	2023-04-13 11:59:08	DOC corrected letter case for better readability in sklearn/metrics/_classification.py /	    #### Reference Issues/PRs    Updated the letter case for consistency and readability.    #### What does this implement/fix? Explain your changes.      #### Any other comments?        
https://github.com/scikit-learn/scikit-learn/pull/30351	3	readability	2025-01-13 20:19:47	DOC readability and clarity on `permutation_test_score` in userguide and example	Here, I suggest some improvements in clarity in the documentation for `permutation_test_score`.    changes include:  - clarify in Userguide that `permutation_test_score` can be used on more than on classifiers  - mentioning `n_jobs` after sentence on brute force procedure  - readability on some difficult to understand sentences  - in example, clear distinguishing between original data and data without permutations (as the term "original data" was used in two different contexts for different things)  - add conclusions on results from `permutation_test_score` in example: what does the result infer for the null hypothesis?  - call p_value a proportion instead of a percentage    @lucyleeow, since you have worked on these docs before, would you like to have a look?
https://github.com/scikit-rf/scikit-rf/pull/1114	2	readability	2024-07-25 07:38:12	Enhance IEEEP370 deembedding documentation, plots, code readability and verbose output 	Currently, if single-ended deembedding `IEEEP370_SE_ZC_2xThru` or its mixed-modes counter-part IEEEP370_MM_ZC_2xThru are called with `verbose = True`, the resulting plots showing the peeling effects are interesting but difficult to read.  ![image](https://github.com/scikit-rf/scikit-rf/assets/8080934/7e6f59ed-004c-488b-b23f-fa76cbec9bb0)    With this PR, a plot showing the determination of gamma with alpha and beta is added as a sanity check. It can also help to tune the bandwidth in case it is required to fit alpha with a 2nd-order polynomial. The plot showing the superposed peeling state shows instead the start with FIX-DUT-FIX superposed with the end with deembeded DUT and modeled fixture, which are visually more simple to check.  ![image](https://github.com/scikit-rf/scikit-rf/assets/8080934/758a0937-e99d-4045-9e51-27d5f8556577)    ![image](https://github.com/scikit-rf/scikit-rf/assets/8080934/c0ebb521-c598-4601-bb30-54b07e1faefc)    This PR add the following assets:    - Update notebook to use a more realistic asymmetric fixture with connector (and explain the discrepency with aicc deembedding tool)  - Introduce helpers plots methods for fixture electrical requirements and consistency tests  - Use static methods and an abstract class `IEEEP370` to avoid code duplication between `IEEEP370_SE_NZC_2xThru` and `IEEEP370_SE_ZC_2xThru`  - Add `IEEEP370.extrapolate_to_dc()` method to be able to plot fixtures, deembedded dut and inputs networks with the same DC point used by the deembedding algorithm.  - Add more information to verbose plots and add debug variables to make internal intermediate results such as the length of the fixture available to advanced users  - Fix extrapolation to DC to match network's `z0` in case it is not 50 ohm.  - Add docstrings
https://github.com/scipy/scipy/pull/20254	1	readability	2024-03-15 15:23:54	MAINT: linalg: readability refactor Riccati equation solver tests	Pure MAINT:  - minimally change the looping logic into test parametrization  - refactor long strings of A.dot(B.dot(C)) into matmuls.    No behavior changes, readability improvements only.      The motivation is I was trying to figure out *which* test case gh-16926 is about.
https://github.com/scrapinghub/article-extraction-benchmark/pull/9	1	readability	2021-02-26 08:45:28	Add go-readability	
https://github.com/scrapinghub/article-extraction-benchmark/pull/10	1	readability	2021-02-26 07:30:29	Add Readability.js (Mozilla Firefox extractor)	
https://github.com/scrapy/scrapy/pull/5715	1	readability	2022-11-16 08:47:54	minor fix for readability	
https://github.com/scylladb/scylla-ccm/pull/588	1	readability	2024-07-10 03:32:45	ccmlib/scylla_repository: add parenthesis for better readability	- group the conditions with parenthesis for better readability.  - and move the related comment closer to the corresponding match statement.    this change trades the conciseness for better readability.
https://github.com/scylladb/scylla-cluster-tests/pull/7502	3	readability	2024-05-29 18:02:40	fix(logging): add __str__ to some class for readability	those were printing like that:  ```   sdcm.cluster_azure.ScyllaAzureCluster object at 0x7f7faee61930>  ```    and now would be like that:  ```  ScyllaAzureCluster:cluster-36ea8d10  ```    Fixes: #4805    ### Testing     Add links to Argus/Jenkins of test test done with this PR       This would help the reviewer to cross check what was tested, and and review the results as needed    - [x] provision tests    ### PR pre-checks (self review)    - PR should be created as Draft, when CI finished and relevant checkboxes selected, add reviewers and then click on "Ready for review" button.     - Put an `x` in all the boxes that apply or create PR and then click on all relevant checkboxes:    - [x] I added the relevant `backport` labels  - [x] I didn't leave commented-out/debugging code    ### Reminders    - Add New configuration option and document them (in `sdcm/sct_config.py`)  - Add unit tests to cover my changes (under `unit-test/` folder)  - Update the Readme/doc folder relevant to this change (if needed)  
https://github.com/seanthegeek/yaramail/pull/1	1	readability	2022-07-19 16:43:58	Readability Improvements	Improves code readability
https://github.com/Security-Tools-Alliance/rengine-ng/pull/95	2	readability	2024-06-28 08:16:45	build(install/uninstall/update): improve usability, readability and overall user experience of output	The following has changed in this PR related to the title:    - [build(installation): make users aware of installation time](https://github.com/Security-Tools-Alliance/rengine-ng/commit/ad3ad4cc81177119d81dafb94fa1c1befb0c77ec)  - [build(installation): remove redundant exclamation marks and use new reNgine name](https://github.com/Security-Tools-Alliance/rengine-ng/commit/b5846f0eb54601d27708987aceb55bc94bcaedf3)  - [build(docker): use Docker Compose V2 commands](https://github.com/Security-Tools-Alliance/rengine-ng/pull/95/commits/4a410d789e2d0971834fec23b54b28f326c6aff9)  - [build(docker): fix leftover Docker Compose V1 commands](https://github.com/Security-Tools-Alliance/rengine-ng/pull/95/commits/927774abf9e3294fcd0e677ace069ab587eadcae)  - [build(docker): update Docker Compose to 2.27.1](https://github.com/Security-Tools-Alliance/rengine-ng/pull/95/commits/d9ea8ac6b21cae672a15829445339a54b53c7923)  - [build(install): change colours for better readability](https://github.com/Security-Tools-Alliance/rengine-ng/pull/95/commits/1dc77d84f3b49ec939c70eb591ec7e1b60b523be)  - [build(uninstall): replace echo by log](https://github.com/Security-Tools-Alliance/rengine-ng/pull/95/commits/2fd59aa6de00b5b77fcc8791fc9007cf18997493)  - [build(uninstall): use variables for setting colour](https://github.com/Security-Tools-Alliance/rengine-ng/pull/95/commits/61390c24baf94045b4fbb533a7d79f7b24940324)  - [build(install): use variables for setting colour](https://github.com/Security-Tools-Alliance/rengine-ng/pull/95/commits/45fc8961d3f8ac1f977af192caaf61662e87bdc1)  - [build(install): remove hashtags and equal signs](https://github.com/Security-Tools-Alliance/rengine-ng/pull/95/commits/51b18a55cdcfe9e537eca9ec9da9712f791f5f0c)  - [build(uninstall): don't show uninstalling string when not sudo](https://github.com/Security-Tools-Alliance/rengine-ng/pull/95/commits/4558ae2f925fbc6f85f540c7bd18fa549c388014)  - [build(docker-compose): always use latest release](https://github.com/Security-Tools-Alliance/rengine-ng/pull/95/commits/97700ec8841fa8a98f3a221b7695744966f80106)  - [build(update): add colours for output](https://github.com/Security-Tools-Alliance/rengine-ng/pull/95/commits/b4dd35d2b2f4000b26a813f907758207b92874dc)  - [build(install): install dependencies dynamically based on used repository](https://github.com/Security-Tools-Alliance/rengine-ng/pull/95/commits/57babf5cc46b9d65ec8a529c05d0c04a4e6bf155)   - [build(install): print URL of reNgine-ng after successful installation](https://github.com/Security-Tools-Alliance/rengine-ng/pull/95/commits/eb5f45f9b3f62eaa8e210ac2a117bcbce0151df8)  - [fix(update-check): use reNgine-ng repo](https://github.com/Security-Tools-Alliance/rengine-ng/pull/95/commits/65eadcfcac67916dfd84cf074eb4129cbd166bc7)  - [fix(banner): use reNgine-ng repo for issues](https://github.com/Security-Tools-Alliance/rengine-ng/pull/95/commits/ef162c62bbb28eef63574ade537aaef1c04703e1)  - [build(version): bump to 2.0.6](https://github.com/Security-Tools-Alliance/rengine-ng/pull/95/commits/c81f78ca4a2868588171e51f9fcae190c6c50e55)
https://github.com/shadow/tornettools/pull/66	1	readability	2022-02-15 21:32:29	Group tuples for readability	
https://github.com/Sheekovic/1XBetCrash-Prediction/pull/12	2	readability	2024-09-06 15:19:16	 Update Dockerfile, Improve Code Readability, and Update Dependencies	###  Update Dockerfile, Improve Code Readability, and Update Dependencies    ###  Description    This pull request includes several important updates and improvements to the project. Below is a detailed summary of the changes:    ####  1. Fixed Chrome WebDriver Installation Issue in Dockerfile    - **Problem**: The previous Dockerfile configuration had issues with the installation of the Chrome WebDriver, which caused the Docker build process to fail.  - **Solution**: Updated the Dockerfile to correctly install Chrome and ChromeDriver, ensuring that the build process completes successfully.    ####  2. Enhanced Code Readability    - **Problem**: Some parts of the codebase were difficult to read and understand due to inconsistent formatting and lack of comments.  - **Solution**: Improved the readability of the code by:    - Refactoring code for clarity and consistency.    - Adding comments to explain complex logic.    - Using descriptive variable and function names.    ####  3. Updated Package Dependencies    - **Problem**: The project was using outdated package dependencies, which could lead to potential security vulnerabilities and compatibility issues.  - **Solution**: Updated the package dependencies to their latest versions to ensure better security, performance, and compatibility.    ###  Detailed Changes    - **Dockerfile**    - Fixed issues with Chrome WebDriver installation.    - Added necessary packages and dependencies for Chrome, ChromeDriver, and Xvfb.        ```dockerfile    FROM python:3.12.1      WORKDIR /app    COPY . /app      # Install Python dependencies    RUN pip install -r requirements.txt      # Install necessary packages and dependencies for Chrome, ChromeDriver, and Xvfb    RUN apt-get update && \\        apt-get install -y wget unzip xvfb libxi6 libgconf-2-4 libnss3 libxss1 libasound2 libgbm-dev && \\        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list && \\        apt-get update && \\        apt-get install -y google-chrome-stable && \\        rm -rf /var/lib/apt/lists/* && \\        apt-get clean && \\        wget https://chromedriver.storage.googleapis.com/LATEST_RELEASE -O /tmp/chromedriver_latest && \\        CHROMEDRIVER_VERSION=$(cat /tmp/chromedriver_latest) && \\        wget https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip -P /tmp && \\        unzip /tmp/chromedriver_linux64.zip -d /usr/local/bin && \\        rm /tmp/chromedriver_linux64.zip /tmp/chromedriver_latest      # Start Xvfb and run the script    CMD ["bash", "-c", "Xvfb :99 -screen 0 1024x768x16 & export DISPLAY=:99 && python 1XBetCrashUpdater.py"]    ###   Code Readability Enhancements    - Refactored code for better readability and maintainability.    - Added comments and documentation for complex sections of the code.      ##  Package Updates   - Updated the requirements.txt file to include the latest versions of dependencies.       ```requirements.txt    pandas==1.2.3    scikit-learn==0.24.1    telebot==0.0.4 ```    This pull request aims to improve the overall stability and maintainability of the project.  
https://github.com/ShishirPatil/gorilla/pull/746	9	readability	2024-11-11 08:46:21	[BFCL] Chore: Improve Inference Log Readability	This PR improves the readability of the inference log; makes it read more like a conversation-style. The instruction on how to interpret/understand the log is also included. The inference log is included as part of the result file.    The score file is also improved in structure for better readability.    This will not change the leaderboard score.             Here is an example inference log.  ```  "inference_log": [      {          "begin_of_turn_query": [              {                  "role": "user",                  "content": "First cd within the 'ResearchDocs' directory and then locate any files titled 'report.csv'."              }          ],          "step_0": [              {                  "role": "assistant",                  "content": [                      {                          "cd": "{\\"folder\\":\\"ResearchDocs\\"}"                      }                  ]              },              {                  "role": "handler_log",                  "content": "Successfully decoded model response.",                  "model_response_decoded": [                      "cd(folder='ResearchDocs')"                  ]              },              {                  "role": "tool",                  "content": "{\\"current_working_directory\\": \\"ResearchDocs\\"}"              }          ],          "step_1": [              {                  "role": "assistant",                  "content": [                      {                          "find": "{\\"path\\":\\"ResearchDocs\\",\\"name\\":\\"report.csv\\"}"                      }                  ]              },              {                  "role": "handler_log",                  "content": "Successfully decoded model response.",                  "model_response_decoded": [                      "find(path='ResearchDocs',name='report.csv')"                  ]              },              {                  "role": "tool",                  "content": "{\\"matches\\": [\\"ResearchDocs/report.csv\\"]}"              }          ],          "step_2": [              {                  "role": "assistant",                  "content": "The file titled `report.csv` has been located in the `ResearchDocs` directory."              },              {                  "role": "handler_log",                  "content": "Error decoding the model response. Proceed to next turn.",                  "error": "'str' object has no attribute 'items'"              }          ]      },      {          "begin_of_turn_query": [              {                  "role": "user",                  "content": "Once you locate 'report.csv' in the 'ResearchDocs' directory, delve into it to find lines that reference the 'Quarterly Financial Overview'."              }          ],          "step_0": [              {                  "role": "assistant",                  "content": [                      {                          "grep": "{\\"file_name\\":\\"report.csv\\",\\"pattern\\":\\"Quarterly Financial Overview\\"}"                      }                  ]              },              {                  "role": "handler_log",                  "content": "Successfully decoded model response.",                  "model_response_decoded": [                      "grep(file_name='report.csv',pattern='Quarterly Financial Overview')"                  ]              },              {                  "role": "tool",                  "content": "{\\"matching_lines\\": [\\"Line 1: Introduction Line 2: Quarterly Financial Overview Line 3: Details Line 4: More Details Line 5: Quarterly Financial Overview Line 6: Conclusion Line 7: Quarterly Financial Overview Line 8: Quarter has been successful. Line 9: Quarterly Financial Overview Line 10: Final Thoughts\\"]}"              }          ],          "step_1": [              {                  "role": "assistant",                  "content": "The following lines in `report.csv` reference the \\"Quarterly Financial Overview\\":\\n\\n- Line 2: Quarterly Financial Overview\\n- Line 5: Quarterly Financial Overview\\n- Line 7: Quarterly Financial Overview\\n- Line 9: Quarterly Financial Overview"              },              {                  "role": "handler_log",                  "content": "Error decoding the model response. Proceed to next turn.",                  "error": "'str' object has no attribute 'items'"              }          ]      },      {          "begin_of_turn_query": [              {                  "role": "user",                  "content": "Extract and display the last five lines from the 'report.csv' file in the 'ResearchDocs' directory, as these need to be emphasized for recent updates."              }          ],          "step_0": [              {                  "role": "assistant",                  "content": [                      {                          "tail": "{\\"file_name\\":\\"report.csv\\",\\"lines\\":5}"                      }                  ]              },              {                  "role": "handler_log",                  "content": "Successfully decoded model response.",                  "model_response_decoded": [                      "tail(file_name='report.csv',lines=5)"                  ]              },              {                  "role": "tool",                  "content": "{\\"last_lines\\": \\"Line 1: Introduction Line 2: Quarterly Financial Overview Line 3: Details Line 4: More Details Line 5: Quarterly Financial Overview Line 6: Conclusion Line 7: Quarterly Financial Overview Line 8: Quarter has been successful. Line 9: Quarterly Financial Overview Line 10: Final Thoughts\\"}"              }          ],          "step_1": [              {                  "role": "assistant",                  "content": "The last five lines from the `report.csv` file are as follows:\\n\\n- Line 6: Conclusion\\n- Line 7: Quarterly Financial Overview\\n- Line 8: Quarter has been successful.\\n- Line 9: Quarterly Financial Overview\\n- Line 10: Final Thoughts"              },              {                  "role": "handler_log",                  "content": "Error decoding the model response. Proceed to next turn.",                  "error": "'str' object has no attribute 'items'"              }          ]      },      {          "begin_of_turn_query": [              {                  "role": "user",                  "content": "Logging in as USR001. Lastly, upon completion of our file review, kindly message my colleague, John Levy, add him as new contact, that 'Latest Quarter Performance has been well.'"              }          ],          "step_0": [              {                  "role": "assistant",                  "content": [                      {                          "message_login": "{\\"user_id\\": \\"USR001\\"}"                      },                      {                          "add_contact": "{\\"user_name\\": \\"John Levy\\"}"                      }                  ]              },              {                  "role": "handler_log",                  "content": "Successfully decoded model response.",                  "model_response_decoded": [                      "message_login(user_id='USR001')",                      "add_contact(user_name='John Levy')"                  ]              },              {                  "role": "tool",                  "content": "{\\"login_status\\": true, \\"message\\": \\"User 'USR001' logged in successfully.\\"}"              },              {                  "role": "tool",                  "content": "{\\"added_status\\": true, \\"user_id\\": \\"USR005\\", \\"message\\": \\"Contact 'John Levy' added successfully.\\"}"              }          ],          "step_1": [              {                  "role": "assistant",                  "content": [                      {                          "get_user_id": "{\\"user\\":\\"John Levy\\"}"                      }                  ]              },              {                  "role": "handler_log",                  "content": "Successfully decoded model response.",                  "model_response_decoded": [                      "get_user_id(user='John Levy')"                  ]              },              {                  "role": "tool",                  "content": "{\\"user_id\\": \\"USR005\\"}"              }          ],          "step_2": [              {                  "role": "assistant",                  "content": [                      {                          "send_message": "{\\"receiver_id\\":\\"USR005\\",\\"message\\":\\"Latest Quarter Performance has been well.\\"}"                      }                  ]              },              {                  "role": "handler_log",                  "content": "Successfully decoded model response.",                  "model_response_decoded": [                      "send_message(receiver_id='USR005',message='Latest Quarter Performance has been well.')"                  ]              },              {                  "role": "tool",                  "content": "{\\"sent_status\\": true, \\"message_id\\": {\\"new_id\\": 67410}, \\"message\\": \\"Message sent to 'USR005' successfully.\\"}"              }          ],          "step_3": [              {                  "role": "assistant",                  "content": "You have been successfully logged in as **USR001**, and your colleague **John Levy** has been added as a new contact. The message \\"Latest Quarter Performance has been well.\\" has been sent to him successfully."              },              {                  "role": "handler_log",                  "content": "Error decoding the model response. Proceed to next turn.",                  "error": "'str' object has no attribute 'items'"              }          ]      }  ]  ```
https://github.com/siliconcompiler/siliconcompiler/pull/1389	1	readability	2023-03-20 16:23:37	Restructure Documentation for Readability	I think there might be several phases to documentation updates. For this first phase, I'm hoping to just settle on a reordering of the pages for overall readability and to make clear what user vs developer is and provide information on how they should approach the documentation, without being too focused on content of specific pages.      html>   body>    StartFragment     Change | Reason  -- | --  (1) Move intro into index.html | Helps make the default entrance page more meaningful  (2) Shorten User Guide | - Pulling out all pages which require developer mindset br>- Want to keep clean information for users (who don t plan to contribute)  (3) Add new FLOW BASICS section for flow | Group together "data model," "programming model" and "execution model" since these three main sections are the next step to understanding the flow that the user ran   strike>(4) Reverse order of FLOW BASICS files /strike> |  strike>Reverse order Execution   Programming   Data because  br>&nbsp;- While referenced in others, execution describes for the first time...  br>&nbsp;&nbsp;&nbsp;- flowgraph br>&nbsp;&nbsp;&nbsp;- step/index br>&nbsp;&nbsp;&nbsp;- node/edge br>&nbsp;&nbsp;&nbsp;- get/set br>&nbsp;- Pictures are always easier to absorb and the flowgraphs will help br>&nbsp;- Data model is the most detailed one and concerned this will lose people early br>&nbsp;It helps to see big picture then get into details /strike>  (5) Add a Developer Manual section | - Move everything else in User Guide here br>- Move contributing modules here since it s a bit different than other tutorials  (6) Group frontend tutorials together | Cleans up tutorial section for easier reading  (7) Adjusted some links in tutorials  | Now that merged together in one page these were added to address conflicting label warnings        EndFragment    /body>   /html>    Look through documentation created for this PR here: https://siliconcompiler--1389.org.readthedocs.build/en/1389/    **Note**: If these changes are approved, it would make sense for some files to move, but I didn't want to do that right away so you could see the file diffs.
https://github.com/skuschel/postpic/pull/123	1	readability	2017-11-17 10:27:31	order postpic.particle_scalars to increase readability	
https://github.com/skyportal/kowalski/pull/50	1	readability	2020-12-10 18:11:11	Improve code readability in kowalski.py	
https://github.com/skyzh/canvas_grab/pull/94	1	readability	2020-05-23 00:15:09	enhance checkpoint json for readability	
https://github.com/snaptec/openWB/pull/2417	13	readability	2022-10-05 12:21:46	refactor simcount for better readability	Der n chste Schritt nach #2349:    Ich habe mir das SimCount-Modul genauer angesehen und mir ist aufgefallen, dass die Klassen `SimCountLegacy` und `SimCount` viel gemeinsame Code haben. Mein Hauptziel war es das ganze so zu  berarbeiten, dass der Code de-dupliziert wird. Dazu habe ich:  - Eine Funktion `sim_count` erzeugt, die beide Klassen abdeckt.  - Der Teil der nicht gemeinsam ist, ist der Teil, der sich damit besch ftigt Daten aus Ramdisk und/oder Broker zu laden. Den Teil habe ich in die Klassen `SimCounterStoreRamdisk` und `SimCounterStoreBroker` extrahiert.    Der alter Parameter `data` der Funktion `sim_count` war vom Typ `dict`. Das fand ich ung nstig, da nicht direkt ersichtlich ist, mit welchen Eigenschaften man in diesem Objekt rechnen kann. Ich habe daher eine Klasse `SimCounterState` extrahiert und stattdessen verwendet.    Was mich im Rahmen des Parameters `data` noch irrtiert, ist dass die Daten nie aus dem Broker wieder geladen werden. Bei einem Neustart der openWB w rde die Simulation damit immer wieder von vorn beginnen. Da das vorher schon so war, habe ich das auch so gelassen. Ich vermute jedoch, dass das keine Absicht ist und da ein follow-up zu kommen sollte...    Die Klasse `Restore` fand ich unn tig komplex. Es hat eine ganze Weile gebraucht bis ich die verstanden habe. Das hat auch damit zu tun, dass sie zwei Dinge tut: Sie redet mit dem MQTT-broker und f hrt Werte zusammen. Ich habe das ganze getrennt in eine Funktion `read_mqtt_topic` die mit dem Broker redet und eine Funktion `restore_value`, die Werte zusammenf hrt. In dem Zusammenhang frage ich mich: Steht hinter der Funktion `get_serial` ein tieferer Sinn?    Bei meiner Installation habe ich kein SimCount im Einsatz. Das ganze ist daher im wesentlich in der "echten Welt" ungetestet. Freiwillige gesucht ;-).
https://github.com/Sneezedip/Tiktok-Booster/pull/6	5	readability	2024-08-31 01:44:46	Added retry mechanism, refactor code for improved error handling and readability	1. Implemented a retry mechanism in the GetViews method to handle TypeError exceptions. The program will now attempt to retry the operation up to 3 times if an issue occurs.  2. Updated the _gather_info function in the Program class to align with changes made in the TikTokVideoInfo class.  3. Refined exception handling throughout the code by narrowing overly broad except clauses to better handle specific types of exceptions.  4. Added comments to major functions in main.py to improve code readability and understanding.  5. Updated the requirements.txt file to include fake_useragent as a new dependency.  6. Refactored code to follow Pythonic conventions, including changing variable names to snake_case and ensuring consistency with PEP 8 guidelines.  7. Add browser reset logic after max retries in method    These changes aim to enhance the reliability, readability, and maintainability of the code, as well as improve error handling."
https://github.com/snowflakedb/snowflake-cli/pull/785	1	readability	2024-02-15 16:16:37	SNOW-1054145-improve-cli-console-output-readability: use system colors for printed messaged	# SNOW-1054145    ### Pre-review checklist     * [x] I've confirmed that instructions included in README.md are still correct after my changes in the codebase.     * [ ] I've added or updated automated unit tests to verify correctness of my new code.     * [ ] I've added or updated integration tests to verify correctness of my new code.     * [x] I've confirmed that my changes are working by executing CLI's commands manually.     * [x] I've confirmed that my changes are up-to-date with the target branch.     * [ ] I've described my changes in the release notes.     * [x] I've described my changes in the section below.    ### Changes description  Styles used for formatting CliConsole text use system colours.    ## Dark background    ### before   img width="1292" alt="dark_bg_before" src="https://github.com/Snowflake-Labs/snowflake-cli/assets/152898938/cd5392fd-39ac-4509-8cac-929164b07120">    ### after   img width="1318" alt="dark_bg_after" src="https://github.com/Snowflake-Labs/snowflake-cli/assets/152898938/203c777c-32ab-4926-b11b-c2139a8bfb91">     ## Light background  ### before   img width="1146" alt="light_bg_before" src="https://github.com/Snowflake-Labs/snowflake-cli/assets/152898938/30dc1766-9176-4114-8f3a-d116b67674a3">    ### after   img width="1156" alt="light_bg_after" src="https://github.com/Snowflake-Labs/snowflake-cli/assets/152898938/f1a84434-d088-463f-aefd-7d4eded8ed7d">      
https://github.com/snowflakedb/snowpark-python/pull/1970	3	readability	2024-07-24 17:03:57	(Readability) Replace all instances of suppress_ast with emit_ast to avoid negated logic	  -  Please answer these questions before creating your pull request. Thanks!  -     1. Which Jira issue is this PR addressing? Make sure that there is an accompanying issue to your PR.         -     In this section, please add a Snowflake Jira issue number.          Note that if a corresponding GitHub issue exists, you should still include     the Snowflake Jira issue number. For example, for GitHub issue     https://github.com/snowflakedb/snowpark-python/issues/1400, you should     add "SNOW-1335071" here.      -        Fixes SNOW-0000000    2. Fill out the following pre-review checklist:       - [ ] I am adding a new automated test(s) to verify correctness of my new code        - [ ] If this test skips Local Testing mode, I'm requesting review from @snowflakedb/local-testing     - [ ] I am adding new logging messages     - [ ] I am adding a new telemetry message     - [ ] I am adding new credentials     - [ ] I am adding a new dependency     - [ ] If this is a new feature/behavior, I'm adding the Local Testing parity changes.    3. Please describe how your code solves the related issue.    Stylistic change - prefer direct logic instead of inverted logic.    Use `emit_ast` (default = `True`) everywhere instead of `suppress_ast` (default = `False`).    To get ASTs out of public APIs, do nothing. To prevent public APIs from emitting ASTs, provide `emit_ast = False`.    Name the argument `_emit_ast` on public APIs and `emit_ast` on internal APIs.
https://github.com/snowflakedb/snowpark-python/pull/2257	2	readability	2024-09-11 20:20:48	SNOW-1641472 Refactor binary ops utility to improve readability	  -  Please answer these questions before creating your pull request. Thanks!  -     1. Which Jira issue is this PR addressing? Make sure that there is an accompanying issue to your PR.         -     In this section, please add a Snowflake Jira issue number.          Note that if a corresponding GitHub issue exists, you should still include     the Snowflake Jira issue number. For example, for GitHub issue     https://github.com/snowflakedb/snowpark-python/issues/1400, you should     add "SNOW-1335071" here.      -        Fixes SNOW-1641472    2. Fill out the following pre-review checklist:       - [ ] I am adding a new automated test(s) to verify correctness of my new code        - [ ] If this test skips Local Testing mode, I'm requesting review from @snowflakedb/local-testing     - [ ] I am adding new logging messages     - [ ] I am adding a new telemetry message     - [ ] I am adding new credentials     - [ ] I am adding a new dependency     - [ ] If this is a new feature/behavior, I'm adding the Local Testing parity changes.    3. Please describe how your code solves the related issue.       Please write a short description of how your code change solves the related issue.    Try to improve readability of binary ops by reorganize it as a `BinaryOp` class.  This pull request focuses on improving the readability and maintainability of the binary operation utility code within the Snowflake query compiler. The changes primarily involve refactoring the binary operation functions into a new `BinaryOp` class and updating the relevant method calls throughout the codebase.    ### Refactoring binary operations:    * [`src/snowflake/snowpark/modin/plugin/compiler/snowflake_query_compiler.py`](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L187-R187): Replaced multiple function calls (`compute_binary_op_between_scalar_and_snowpark_column`, `compute_binary_op_between_snowpark_column_and_scalar`, `compute_binary_op_between_snowpark_columns`, `compute_binary_op_with_fill_value`, `is_binary_op_supported`) with the new `BinaryOp` class methods (`create`, `create_with_fill_value`, `create_with_lhs_scalar`, `create_with_rhs_scalar`, `is_binary_op_supported`). [[1]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L187-R187) [[2]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L1857-R1853) [[3]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L1866-R1862) [[4]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L1917-R1913) [[5]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L1926-R1922) [[6]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L1989-R1985) [[7]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L1998-R1994) [[8]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L2059-R2055) [[9]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L2124-R2120) [[10]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L2135-R2131) [[11]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L10551-R10547) [[12]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L10563-R10559) [[13]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L10612-R10614) [[14]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L14216-R14212) [[15]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L14246-R14244) [[16]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L14510-R14510) [[17]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L14784-R14789) [[18]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L17249-R17246) [[19]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L17779-R17774) [[20]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L17789-R17784) [[21]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L17900-R17896) [[22]](diffhunk://#diff-834ee069919510e7e410c503a8afa455154c40e65389769c08d35b0ec3f8ec03L17912-R17911)    ### Documentation updates:    * [`CHANGELOG.md`](diffhunk://#diff-06572a96a58dc510037d5efa622f9bec8519bc1beab13c9f251e97e657a9d4edR120): Added an entry to reflect the improved readability of the binary operation utility code.
https://github.com/snowflakedb/snowpark-python/pull/2464	4	readability	2024-10-23 18:11:49	SNOW-1738538 Update test expectations to textproto ast for better stability and readability	   Fixes SNOW-1738538 Update test expectations to textproto ast for better stability and readability  
https://github.com/soda-inria/sklearn-numba-dpex/pull/72	11	readability	2022-12-07 16:20:06	MNT Overall cleaning and readability	A minor PR with several leftover small tasks I had on a list:    - [x] add -v tag to pytest run  - [x] remove dependency to pytest (bugfix)      - main public classes don't work if pytest is not installed because they import `override_attr_context` which is defined in a module that imports pytest, without it being necessary  - [x] add OUT inline comments in kernel calls  - [x] sums should return summands rather than result ?     Closes https://github.com/soda-inria/sklearn-numba-dpex/issues/54  
https://github.com/softwaremill/FoXAI/pull/92	2	readability	2023-08-07 15:06:23	Improving readability of charts for insertion and deletion	## Description    This PR introduces improved Docker setup via docker-compose with 1 GPU enabled. Additionally, the readability fo charts for insertion and deletion metrics is improved.      ## How Has This Been Tested?    Please describe the tests that you ran to verify your changes.    - [ ] Test A  - [ ] Test B    ## Checklist:    - [x] I have updated all related `pyproject.toml` files.  - [x] I have updated lock files.  - [x] I have set an Assignee and Reviewers.  - [x] I have labeled the PR correctly.  - [x] I have performed a self-review of my own code.  - [x] I have covered my code and changes with unit tests.  - [x] I have annotated types as extensively as possible.  - [x] I have commented my code, particularly in hard-to-understand areas.  - [x] I have made corresponding changes to the documentation.  - [x] My changes generate no new warnings.  - [x] All code references and dependencies will work.  
https://github.com/sonic-net/sonic-mgmt/pull/2429	1	readability	2020-10-30 18:47:13	[sensors]: Improve test verbosity/readability	Signed-off-by: Nazarii Hnydyn  nazariig@nvidia.com>        Please make sure you've read and understood our contributing guidelines;  https://github.com/Azure/SONiC/blob/gh-pages/CONTRIBUTING.md    Please provide following information to help code review process a bit easier:     ### Description of PR      - Please include a summary of the change and which issue is fixed.  - Please also include relevant motivation and context. Where should reviewer start? background context?  - List any dependencies that are required for this change.       **Summary:**  Improve sensors test verbosity/readability    **Sample:**  ```  ================================================================================================== FAILURES ===================================================================================================  ________________________________________________________________________________________________ test_sensors _________________________________________________________________________________________________    duthost =  tests.common.devices.SonicHost object at 0x7fb2011e9910>  creds = {'ansible_become_pass': 'YourPaSsWoRd', 'ansible_ssh_pass': 'password', 'ansible_ssh_user': 'user', 'bgp_slb_passive_range': '10.255.0.0/25', ...}        def test_sensors(duthost, creds):          # Get platform name          platform = duthost.facts['platform']            # Prepare check list          sensors_checks = creds['sensors_checks']            if platform not in sensors_checks.keys():              pytest.skip("Skip test due to not support check sensors for current platform({})".format(platform))            logging.info("Sensor checks:\\n{}".format(to_json(sensors_checks[platform])))            # Gather sensor facts          sensors_facts = duthost.sensors_facts(checks=sensors_checks[platform])['ansible_facts']            logging.info("Sensor facts:\\n{}".format(to_json(sensors_facts)))            # Analyze sensor alarms          is_sensor_alarm = sensors_facts['sensors']['alarm']          sensor_alarms = sensors_facts['sensors']['alarms']    >       pytest_assert(not is_sensor_alarm, "Sensor alarms:\\n{}".format(to_json(sensor_alarms)))  E       Failed: Sensor alarms:  E       {  E           "temp_reasons": [  E               "Path tmp102-i2c-7-49/Ambient Fan Side Temp (air intake)/temp1_input is not exist",  E               "Path tmp102-i2c-7-4a/Ambient Port Side Temp (air exhaust)/temp1_input is not exist"  E           ],  E           "fan_reasons": [],  E           "fan": false,  E           "temp": true,  E           "power": true,  E           "power_reasons": [  E               "Path tps53679-i2c-5-70/PMIC-1 ASIC 0.8V VCORE Rail Curr (out)/curr1_crit_alarm is not exist",  E               "Path tps53679-i2c-5-70/PMIC-1 ASIC 0.8V VCORE Rail Curr (out)/curr1_max_alarm is not exist",  E               "Path tps53679-i2c-5-70/PMIC-1 ASIC 1.2V Rail Curr (out)/curr2_crit_alarm is not exist",  E               "Path tps53679-i2c-5-70/PMIC-1 ASIC 1.2V Rail Curr (out)/curr2_max_alarm is not exist",  E               "Path tps53679-i2c-5-70/PMIC-1 PSU 12V Rail (in1)/in1_alarm is not exist",  E               "Path tps53679-i2c-5-70/PMIC-1 PSU 12V Rail (in2)/in2_alarm is not exist",  E               "Path tps53679-i2c-5-70/PMIC-1 ASIC 0.8V VCORE Rail (out)/in3_crit_alarm is not exist",  E               "Path tps53679-i2c-5-70/PMIC-1 ASIC 0.8V VCORE Rail (out)/in3_lcrit_alarm is not exist",  E               "Path tps53679-i2c-5-70/PMIC-1 ASIC 1.2V Rail (out)/in4_crit_alarm is not exist",  E               "Path tps53679-i2c-5-70/PMIC-1 ASIC 1.2V Rail (out)/in4_lcrit_alarm is not exist",  E               "Path tps53679-i2c-5-71/PMIC-2 ASIC 3.3V Rail Curr (out)/curr1_crit_alarm is not exist",  E               "Path tps53679-i2c-5-71/PMIC-2 ASIC 3.3V Rail Curr (out)/curr1_max_alarm is not exist",  E               "Path tps53679-i2c-5-71/PMIC-2 ASIC 1.8V Rail Curr (out)/curr2_crit_alarm is not exist",  E               "Path tps53679-i2c-5-71/PMIC-2 ASIC 1.8V Rail Curr (out)/curr2_max_alarm is not exist",  E               "Path tps53679-i2c-5-71/PMIC-2 PSU 12V Rail (in1)/in1_alarm is not exist",  E               "Path tps53679-i2c-5-71/PMIC-2 PSU 12V Rail (in2)/in2_alarm is not exist",  E               "Path tps53679-i2c-5-71/PMIC-2 ASIC 3.3V Rail (out)/in3_crit_alarm is not exist",  E               "Path tps53679-i2c-5-71/PMIC-2 ASIC 3.3V Rail (out)/in3_lcrit_alarm is not exist",  E               "Path tps53679-i2c-5-71/PMIC-2 ASIC 1.8V Rail (out)/in4_crit_alarm is not exist",  E               "Path tps53679-i2c-5-71/PMIC-2 ASIC 1.8V Rail (out)/in4_lcrit_alarm is not exist",  E               "Path tps53679-i2c-15-58/PMIC-3 COMEX 1.8V Rail Curr (out)/curr1_crit_alarm is not exist",  E               "Path tps53679-i2c-15-58/PMIC-3 COMEX 1.8V Rail Curr (out)/curr1_max_alarm is not exist",  E               "Path tps53679-i2c-15-58/PMIC-3 COMEX 1.05V Rail Curr (out)/curr2_crit_alarm is not exist",  E               "Path tps53679-i2c-15-58/PMIC-3 COMEX 1.05V Rail Curr (out)/curr2_max_alarm is not exist",  E               "Path tps53679-i2c-15-58/PMIC-3 PSU 12V Rail (in1)/in1_alarm is not exist",  E               "Path tps53679-i2c-15-58/PMIC-3 PSU 12V Rail (in2)/in2_alarm is not exist",  E               "Path tps53679-i2c-15-58/PMIC-3 COMEX 1.8V Rail (out)/in3_crit_alarm is not exist",  E               "Path tps53679-i2c-15-58/PMIC-3 COMEX 1.8V Rail (out)/in3_lcrit_alarm is not exist",  E               "Path tps53679-i2c-15-58/PMIC-3 COMEX 1.05V Rail (out)/in4_crit_alarm is not exist",  E               "Path tps53679-i2c-15-58/PMIC-3 COMEX 1.05V Rail (out)/in4_lcrit_alarm is not exist",  E               "Path tps53679-i2c-15-61/PMIC-4 COMEX 1.2V Rail Curr (out)/curr1_crit_alarm is not exist",  E               "Path tps53679-i2c-15-61/PMIC-4 COMEX 1.2V Rail Curr (out)/curr1_max_alarm is not exist",  E               "Path tps53679-i2c-15-61/PMIC-4 PSU 12V Rail (in1)/in1_alarm is not exist",  E               "Path tps53679-i2c-15-61/PMIC-4 PSU 12V Rail (in2)/in2_alarm is not exist",  E               "Path tps53679-i2c-15-61/PMIC-4 COMEX 1.2V Rail (out)/in3_crit_alarm is not exist",  E               "Path tps53679-i2c-15-61/PMIC-4 COMEX 1.2V Rail (out)/in3_lcrit_alarm is not exist"  E           ]  E       }  ```    ### Type of change        - Fill x for your type of change.  - e.g.  - [x] Bug fix       - [ ] Bug fix  - [ ] Testbed and Framework(new/improvement)  - [x] Test case(new/improvement)    ### Approach  #### What is the motivation for this PR?  Improve sensors test verbosity/readability    #### How did you do it?  * N/A    #### How did you verify/test it?  1. py.test platform_tests/test_sensors.py    #### Any platform specific information?  * N/A    #### Supported testbed topology if it's a new test case?  * N/A    ### Documentation       (If it's a new feature, new test case)  Did you update documentation/Wiki relevant to your implementation?  Link to the wiki page?     * N/A
https://github.com/sonic-net/sonic-mgmt/pull/5618	3	readability	2022-06-17 13:28:04	[macsec]: Change SCI in appdb for better readability	Signed-off-by: Ze Gan  ganze718@gmail.com>        Please make sure you've read and understood our contributing guidelines;  https://github.com/Azure/SONiC/blob/gh-pages/CONTRIBUTING.md    Please provide following information to help code review process a bit easier:     ### Description of PR      - Please include a summary of the change and which issue is fixed.  - Please also include relevant motivation and context. Where should reviewer start? background context?  - List any dependencies that are required for this change.       Summary:    Change SCI in appdb, the original SCI was like `Ethernet0:72068799825728594`, The new SCI is like `Ethernet0:5254000D310A0001`.  Need wait for PR:  https://github.com/Azure/sonic-swss/pull/2258  https://github.com/Azure/sonic-wpa-supplicant/pull/48    ### Type of change        - Fill x for your type of change.  - e.g.  - [x] Bug fix       - [ ] Bug fix  - [ ] Testbed and Framework(new/improvement)  - [x] Test case(new/improvement)      ### Back port request  - [ ] 201911  - [ ] 202012    ### Approach    #### What is the motivation for this PR?  Change SCI in appdb, the original SCI was like `Ethernet0:72068799825728594`, The new SCI is like `Ethernet0:5254000D310A0001`    #### How did you do it?  Modify `get_sci` to the readable string instead of int64.    #### How did you verify/test it?  Check Azp    #### Any platform specific information?    #### Supported testbed topology if it's a new test case?    ### Documentation      (If it's a new feature, new test case)  Did you update documentation/Wiki relevant to your implementation?  Link to the wiki page?     
https://github.com/sony/model_optimization/pull/1283	13	readability	2024-12-03 14:46:52	improve readability	## Pull Request Description:  Small cosmetic updates in keras mixed precision to improve readability     ## Checklist before requesting a review:  - [ ] I set the appropriate labels on the pull request.  - [ ] I have added/updated the release note draft (if necessary).  - [ ] I have updated the documentation to reflect my changes (if necessary).  - [ ] All function and files are well documented.   - [ ] All function and classes have type hints.  - [ ] There is a licenses in all file.  - [ ] The function and variable names are informative.   - [ ] I have checked for code duplications.  - [ ] I have added new unittest (if necessary).
https://github.com/sopel-irc/sopel/pull/1661	1	readability	2019-09-28 06:52:28	seen: Improve readability of information	Now that #1560 has been merged, let's use it.    This changes the reply to "seen" commands:  before  `nickname: I last saw other_nickname at 2019-05-29 - 23:04:13UTC in here, saying gotta go`  after  `nickname: I last saw other_nickname in here 45 days, 4 hours ago, saying: gotta go`      I don't know if the timestamp should be included in the reply or not.
https://github.com/sosreport/sos/pull/2578	1	readability	2021-06-16 07:15:23	[report] Increase readability and reliability of top-level ThreadPool	In the "top-level" `ThreadPoolExecutor` used for threading plugin  execution, increase readability and reliability by wrapping it in a  `with` context manager, so that the pool's cleanup is run in all  situations explicitly.    This is a continuation of #2294, bringing it up to date with the current  state of the project and iterating over the plugin list as a discreet  unit rather than individual plugins.    Closes: #2294  Resolves: #2578    Co-authored-by: Erik Bernoth  ebernoth@redhat.com>  Signed-off-by: Jake Hunsaker  jhunsake@redhat.com>    ---  Please place an 'X' inside each '[]' to confirm you adhere to our [Contributor Guidelines](https://github.com/sosreport/sos/wiki/Contribution-Guidelines)    - [x] Is the commit message split over multiple lines and hard-wrapped at 72 characters?  - [x] Is the subject and message clear and concise?  - [x] Does the subject start with **[plugin_name]** if submitting a plugin patch or a **[section_name]** if part of the core sosreport code?  - [x] Does the commit contain a **Signed-off-by: First Lastname  email@example.com>**?  - [x] If this commit closes an existing issue, is the line `Closes: #ISSUENUMBER` included in an independent line?  - [x] If this commit resolves an existing pull request, is the line `Resolves: #PRNUMBER` included in an independent line?  
https://github.com/spack/spack/pull/31936	1	readability	2022-08-05 10:36:33	Refactor `cmd/install.py` for better readability	Modifications:  - [x] Split long functions into multiple logical units  - [x] Renamed a few variables to better convey their properties (e.g. `specs` -> `concrete_specs`)  - [x] Removed dead code 
https://github.com/spack/spack/pull/44980	1	readability	2024-07-01 19:14:00	cmd/develop.py: fix readability	stage[0] is assumed to be for sources, 1: and onwards is  patches/resources, make that a bit more clear.    the implementation isn't very satisfactory cause it fetches  some (unconditional) patches too, but does not apply them, because  that requires a concrete spec.    patches are only applied upon install, at which point even  more may be fetched...
https://github.com/spesmilo/electrum/pull/7427	3	readability	2021-07-28 13:26:30	Fixed issue with thousands separator for better readability	Note: this is a continuation of https://github.com/spesmilo/electrum/pull/7416
https://github.com/sphinx-doc/sphinx/pull/7900	1	readability	2020-07-05 02:36:26	Closes #7887: Updated the sphinx.js locale files to improve readability	Subject: Improving format of sphinx.js locale files for readability          Before posting a pull request, please choose a appropriate branch:      - Breaking changes: master    - Critical or severe bugs: X.Y.Z    - Others: X.Y      For more details, see https://www.sphinx-doc.org/en/master/devguide.html#branch-model       ### Feature or Bugfix     please choose    - Refactoring    ### Purpose  - Modify the formatting of the locale files to improve readability.  - No environment needed for PR    ### Detail  - Added indentation to the `json.dump` call in setup.py    ### Relates  - None    
https://github.com/sphinx-doc/sphinx/pull/9470	31	readability	2021-07-24 02:07:20	Reviewed all docstrings to improve readability and correctness	Subject: While reading the source code for Sphinx I began to edit the docstrings and thought I may as well review the entire library's docstrings. Also fixed a typo in one log message (deprecation warning).    No breaking changes, one single warning message with a typo was changed (in a deprecation message)      - No breaking changes or critical/severe bugfixes so branch: 4.x    ### Feature or Bugfix  - Refactoring    ### Purpose  - Improved readability of code (many minor improvements) and ease of understanding what modules are doing    ### Detail  - Improved wording in docstrings (grammar, spelling, better explanations for certain unclear terms)  ### Relates  - No previous issue, expect this to be an uncontroversial PR  
https://github.com/spinalcordtoolbox/spinalcordtoolbox/pull/3092	1	readability	2020-12-28 20:51:49	Readability of parameters. Fixed -ldisc-input and -ldisc-dest typos	   Hi, and thank you for submitting a Pull Request! The checklist below is a brief summary of steps found in the NeuroPoly Contributing Guidelines, which can be found here: https://www.neuro.polymtl.ca/software/contributing.        ## Checklist    #### GitHub    - [x] I've given this PR a concise, self-descriptive, and meaningful title  - [x] I've linked relevant issues in the PR body  - [x] I've applied [the relevant labels](https://www.neuro.polymtl.ca/software/contributing#pr_labels) to this PR  - [ ] I've assigned a reviewer       For the title, please observe the following rules:   - Provide a concise and self-descriptive title   - Do not include the applicable issue number in the title, do it in the PR body   - If the PR is not ready for review, convert it to a draft.       #### PR contents    ~~- [x] I've consulted [SCT's internal developer documentation](https://github.com/neuropoly/spinalcordtoolbox/wiki) to ensure my contribution is in line with any relevant design decisions~~  ~~- [x] I've added [relevant tests](https://github.com/neuropoly/spinalcordtoolbox/wiki/Programming%3A-Tests) for my contribution~~  ~~- [x] I've updated the [relevant documentation](https://github.com/neuropoly/spinalcordtoolbox/wiki/Programming%3A-Documentation) for my changes, including argparse descriptions, docstrings, and ReadTheDocs tutorial pages~~    ## Description     describe what the PR is about. Explain the approach and possible drawbacks.It's ok to repeat some text from the related issue.    Made sct_straighten_spinalcord .add_argument parameters more readable.  Fixed -ldisc_input and -ldisc_dest to -ldisc-input and -ldisc-dest throughout script to be consistent.    ## Linked issues     If the PR fixes any issues, indicate it here with issue-closing keywords: e.g. Resolves #XX, Fixes #XX, Addresses #XX. Note that if you want multiple issues to be autoclosed on PR merge, you must use the issue-closing verb before each relevant issue: e.g. Resolves #1, Resolves #2    Resolves #3089   
https://github.com/spinalcordtoolbox/spinalcordtoolbox/pull/3889	1	readability	2022-09-28 16:44:13	Add readability fixes for QC reports (sagittal view scaling, label text, label colormaps)	   Hi, and thank you for submitting a Pull Request! The checklist below is a brief summary of steps found in the NeuroPoly Contributing Guidelines, which can be found here: https://intranet.neuro.polymtl.ca/geek-tips/contributing.        ## Checklist    #### GitHub    - [x] I've given this PR a concise, self-descriptive, and meaningful title  - [x] I've linked relevant issues in the PR body  - [x] I've applied [the relevant labels](https://intranet.neuro.polymtl.ca/geek-tips/contributing#pr-labels-a-href-pr-labels-id-pr-labels-a) to this PR  - [ ] I've applied a [release milestone](https://github.com/spinalcordtoolbox/spinalcordtoolbox/milestones) (major, minor, patch) in line with [Semantic Versioning guidelines](https://github.com/spinalcordtoolbox/spinalcordtoolbox/wiki/Misc%3A-Creating-a-new-release#convention-for-naming-releases)   - [x] I've assigned a reviewer       For the title, please observe the following rules:   - Provide a concise and self-descriptive title   - Do not include the applicable issue number in the title, do it in the PR body   - If the PR is not ready for review, convert it to a draft.       #### PR contents    - [ ] I've consulted [SCT's internal developer documentation](https://github.com/spinalcordtoolbox/spinalcordtoolbox/wiki) to ensure my contribution is in line with any relevant design decisions  - [ ] I've added [relevant tests](https://github.com/spinalcordtoolbox/spinalcordtoolbox/wiki/Programming%3A-Tests) for my contribution  - [ ] I've updated the [relevant documentation](https://github.com/spinalcordtoolbox/spinalcordtoolbox/wiki/Programming%3A-Documentation) for my changes, including argparse descriptions, docstrings, and ReadTheDocs tutorial pages    ## Description    This PR fixes small QC visualisation of the `sct_label_vertebrae` for axially acquired images.   As described in https://github.com/spinalcordtoolbox/spinalcordtoolbox/issues/3055#issuecomment-1256114262, it looks that `sct_qc -p sct_label_vertebrae` was designed primarily for sagittally acquired images. This PR introduces a fix to avoid scaling based on incorrect dimensions, by instead using a constant size for the matplotlib figure.    This PR also includes a number of other tweaks to improve the readability of text and labels in QC reports:    * Replaces SCT's custom text drop-shadow code with the built-in `matplotlib.patheffects` module for all drawn text in `qc.py`. ([Comment](https://github.com/spinalcordtoolbox/spinalcordtoolbox/pull/3889#discussion_r980259250).)  * Changes the method used to determine the offset for `sct_label_vertebrae` text. ([Comment](https://github.com/spinalcordtoolbox/spinalcordtoolbox/pull/3889#discussion_r981618126).)  * Replaces existing `sct_label_vertebrae` label color palette with a high-contrast, colorblind-tested palette. ([Comment](https://github.com/spinalcordtoolbox/spinalcordtoolbox/pull/3889#discussion_r981693179).)    ## Linked issues    Fixes #3055.   
https://github.com/spinalcordtoolbox/spinalcordtoolbox/pull/3986	29	readability	2023-01-14 17:02:09	Improve the readability of temporary directory names throughout SCT	## Description     describe what the PR is about. Explain the approach and possible drawbacks.It's ok to repeat some text from the related issue.      This PR originated in issue #3978, when @valosekj noticed that `sct_propseg`'s centerline folder name was erroneously called "label_vertebrae".    Separately, however, I've held the opinion that tempdir names in SCT [aren't as clear as they could be](https://github.com/spinalcordtoolbox/spinalcordtoolbox/issues/3978#issuecomment-1342822951). I've been wanting to update _every_ tempdir name; issue #3978 is just the straw that broke the camel's back.    So, this PR aims to improve the quality of tempdir names in SCT. This PR contains two main parts:    1. Updating the `tmp_create` function in `fs.py`, to improve the general structure of tmpdir names.  2. Updating the `basename` parameters in each _call_ to `tmp_create`, so that they all follow a standard.    The "naming standardization" is explained in commit 0c3abd0310b51d21682342ea77d041033d6a9654:    1. Only lowercase names  2. Words are delimited with `-`, not `_` (due to the fact that `_` is already in use to delimit other parts of the temporary directory name e.g. date, time, etc.)  3. Basenames should roughly match the name of the CLI script or API function that the temporary directory belongs to     (minus `sct_` for CLI scripts).  4. If the function name itself doesn't provide enough context, then another identifier can be added (e.g. adding `propseg-` to the propseg-specific `rescale-header` function.)    Lastly, #3978 itself is fixed by 80b62205c698eb10cca74afac5130a07023a217a.    ## Linked issues     If the PR fixes any issues, indicate it here with issue-closing keywords: e.g. Resolves #XX, Fixes #XX, Addresses #XX. Note that if you want multiple issues to be autoclosed on PR merge, you must use the issue-closing verb before each relevant issue: e.g. Resolves #1, Resolves #2      Fixes #3978.  
https://github.com/sql-machine-learning/elasticdl/pull/1163	1	readability	2019-09-12 00:39:15	Enhance code readability and docstring for Worker	Signed-off-by: terrytangyuan  terrytangyuan@gmail.com>
https://github.com/sql-machine-learning/elasticdl/pull/1405	1	readability	2019-11-01 09:42:18	Rename variable to enhance readability	
https://github.com/sqlfluff/sqlfluff/pull/2733	1	readability	2022-02-28 12:17:43	L052: Refactor `_eval()` into individual functions to improve readability	  Thanks for adding this feature!       Please give the Pull Request a meaningful title for the release notes     ### Brief summary of the change made  This PR is a straightforward but thorough reorganization of L052, splitting the long, complex `_eval()` function into several smaller, easier to understand functions. Benefits:  * Makes future work on L052 easier  * Future potential for reusing some of this code in other rules. Other rules sometimes need to move a segment to a different line. L018 is one example. (See issue #2713.) Currently, L018 is less sophisticated than L052 -- it basically just adds a newline, splitting one line into two. L052 is more sophisticated: If there is a trailing comment on the line, it leaves the comment on the same line, moving **only** the semicolon to the next line. This is tricky enough that we probably wouldn't want to write this code twice.      Please include `fixes #XXXX` to automatically close any corresponding issue when the pull request is merged. Alternatively if not fully closed you can say `makes progress on #XXXX`.       ### Are there any other side effects of this change that we should be aware of?      ### Pull Request checklist  - [x] Please confirm you have completed any of the necessary steps below.    - Included test cases to demonstrate any code changes, which may be one or more of the following:    - `.yml` rule test cases in `test/fixtures/rules/std_rule_cases`.    - `.sql`/`.yml` parser test cases in `test/fixtures/dialects` (note YML files can be auto generated with `tox -e generate-fixture-yml`).    - Full autofix test cases in `test/fixtures/linter/autofix`.    - Other.  - Added appropriate documentation for the change.  - Created GitHub issues for any relevant followup/future enhancements if appropriate.  
https://github.com/StampyAI/stampy/pull/62	1	readability	2021-10-12 16:14:24	Refactored Semanticwiki to improve readability	See the first commit (cb0d05fa75b8b7f05fe77bd7b5224f873eae6f7d) for functional changes that add functionality. (plus two typing errors that are fixed in the following commit)    Second commit contains only moves of fuctions. Plus the fix for the typing errors    The third commit contains the addition of documentation.    The last commit is a one line hotfix
https://github.com/StanfordVL/OmniGibson/pull/364	9	readability	2024-01-18 22:18:13	Replace timestep parameters with frequency to improve readability and robustness	
https://github.com/streamlit/streamlit/pull/4169	4	readability	2021-12-13 21:50:41	st.echo: improved readability	Some drive-by cleanup on st.echo as I was investigating a related issue    - Pulls `st.echo` out of `__init__.py` and into `echo.py`  - `st.echo()` gets more inline comments explaining what the code is doing  - `EchoTest.test_echo` is parameterized
https://github.com/SuffolkLITLab/docassemble-ALWeaver/pull/370	1	readability	2021-05-12 00:45:18	Limit interview_label length for readability and to make sure package name is usable later	Fixes #352.    Because 50 characters is still extraordinarily long and will render a lot of lines unreadable in the YAML, limiting to 35 characters instead.    `interview.file_name` was never used. Made clearer which label is being used where by using `interview_label` directly, and basing new `package_title` off of the `interview_label` to reduce chance of errors in the 2-3 places we were previously using the same regex to get the package title.    Ran through with the attached documents, including installing and running through until the end. Experimented with long and short names, and with changing the interview label from the default.    [single_field.docx](https://github.com/SuffolkLITLab/docassemble-assemblylinewizard/files/6460093/single_field.docx)  [Fax_cover_sheet.pdf](https://github.com/SuffolkLITLab/docassemble-assemblylinewizard/files/6460094/Fax_cover_sheet.pdf)  
https://github.com/suitenumerique/people/pull/598	6	readability	2024-12-17 13:12:31	(backend) split users test file to improve readability	## Purpose    "test_api_users" was a single test file of 900+ lines.  We used gitfilesplit to split it into several shorter files  for readability.      ## Proposal    Description...    - [x] used https://pypi.org/project/gitfilesplit/ to split test_api_users into several shorter files  - [x] added __init__.py file  - [x] checked 472 tests before and 472 tests after   - [x] checked history is untouched :   ![image](https://github.com/user-attachments/assets/58a0a7ed-360d-4223-8320-9bb77d3a5c53)  ![image](https://github.com/user-attachments/assets/236ccc24-faab-4bd8-85f9-f70c19df6fa9)    
https://github.com/sunpy/sunpy/pull/2976	1	readability	2019-03-11 20:11:32	Fixed docstring and improved readability of hec.py	   This comments are hidden when you submit the pull request, so you do not need to remove them!  Please be sure to check out our contributing guidelines, https://github.com/sunpy/sunpy/blob/master/CONTRIBUTING.rst.  Please be sure to check out our code of conduct, https://github.com/sunpy/sunpy/blob/master/CODE_OF_CONDUCT.rst.         Please just have a quick search on GitHub to see if a similar pull request has already been posted.  We have old closed pull requests that might provide useful code or ideas that directly tie in with your pull request.         We have several automatic features that run when a pull request is open.  They can appear daunting but do not worry about them!  We have a brief explanation of them in the documentation, http://docs.sunpy.org/en/latest/dev_guide/pr_review_procedure.html#continuous-integration.      ### Description     Provide a general description of what your pull request does.         If the pull request closes any open issues you can add this.  If you replace  Issue Number> with a number GitHub will automatically link it.  If it doesn't, please remove the following line.      While working on an open issue I encountered some problems in [hec.py](https://github.com/sunpy/sunpy/blob/master/sunpy/net/helio/hec.py). To fix those problem I am opening this PR.  - Fixed incorrect return type in the docstring:  In `make_table_list` method return type was incorrectly mentioned as `str`, it should be `bytes`    - Handled edge cases:  Existing code will throwing `IndexError` if user input is '0' and other invalid strings.    - Improved code readability    
https://github.com/SuperSupermoon/MedViLL/pull/1	1	readability	2022-01-22 07:22:36	Code optimization for better readability, after image encoder selection	Hi    For better readability, I placed common loop of if-else, outside.
https://github.com/syne-tune/syne-tune/pull/256	2	readability	2022-06-02 06:59:41	Improve Plot Readability	Small change to fix order of columns in result table and plot layout.  Changing `methods_to_show` will allow for creating the plots for transfer and non-transfer methods.    By submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.  
https://github.com/systemd/mkosi/pull/1216	1	readability	2022-10-04 15:39:14	Refactor mount_cache for better readability	
https://github.com/systemd/mkosi/pull/2722	3	readability	2024-05-22 17:06:25	Add dashes to temporary directories for readability	Lately I've been looking at worktrees a bit and that the random part comes right after the readable prefix irked me, so let's add a dash and make debugging a little friendlier. 
https://github.com/target/strelka/pull/295	45	readability	2023-01-24 13:52:08	Refactor Backend Class for Readability, Testing, Coordinator-less Functionality	**Describe the change**    Makes `coordinator` an optional parameter for `distribute()`, falls back to using `File()` objects to pass data.    Updates all scanners to use `emit_file()` for extracted files, in support of running Strelka without a Redis coordinator    Adds a test for `distribute()`    Adds a main function for the Strelka python module that permits rudimentary python-only "local" scanning (with embedded config files), for #182     Imports internal fork code for processing Redis tasks as JSON objects, with filename attribute, Closes #294    Adds a ScannerException class that scanners can throw to provide verbose exception messages    Adds `split_words` option to ScanOcr (default: True), true: return list of words, false: return whole text string (without newlines)    Clears the `flags` field of cached scanners to prevent persistence    Improves error handling in ScanOcr, ScanNf, ScanLsb    Removes "application/msword" from ScanEncryptedZip in backend.yaml, erroneously added in a previous PR    **Describe testing procedures**    ```  src/python$ python setup.py install  src/python$ pip install -r requirements.txt  src/python$ strelka strelka/tests/fixtures/test.html  starting local analysis...  {"file": {"depth": 0, "flavors": {"mime": ["text/html"], "yara": ["html_file"]}, "name": "strelka/tests/fixtures/test.html", "scanners": ["ScanEntropy", "ScanFooter", "ScanHash", "ScanHeader", "ScanHtml", "ScanYara"], "size": 5875, "tree": {"node": "d6fd90b3-ba36-44fc-a45b-e7ca40c58fe2", "root": "d6fd90b3-ba36-44fc-a45b-e7ca40c58fe2"}}, "scan": {"entropy": {"elapsed": 3.6e-05, "entropy": 4.847574566795829}, "footer": {"elapsed": 2e-05, "footer": "pan> /span>\\n /p>\\n\\n\\n p>&nbsp; /p>\\n\\n\\n /body>\\n /html>", "backslash": "pan> /span>\\\\n /p>\\\\n\\\\n\\\\n p>&nbsp; /p>\\\\n\\\\n\\\\n /body>\\\\n /html>"}, "hash": {"elapsed": 0.004696, "md5": "ba4ffdba7f62b2333a23a97d3ba5f1f6", "sha1": "a1f900c64ed49bc111462c6fd91546640b5ac20c", "sha256": "38e2d4d56acf228fcebbbf5a60a16bb36ffcee490299ea52c9b1ffbcbeb62db8", "ssdeep": "96:qWJQC5siJJ+tH6STSTSTSTkvsAw2gF3BgwQWhhSTSTSTSTS/sItklIy7STSTSTSh:qOQGsiJJO3eeeIvspjJPyeeeefklCeew", "tlsh": "T14AC16713EF67021152BDA0E9E0BF4A64D494560CA3465BF4B2AE477ABFCD93136122CC"}, "header": {"elapsed": 3e-05, "header": " !DOCTYPE html>\\n html lang=\\"en\\">\\n head>\\n     title", "backslash": " !DOCTYPE html>\\\\n html lang=\\"en\\">\\\\n head>\\\\n     title"}, "html": {"elapsed": 0.005584, "total": {"scripts": 2, "forms": 0, "inputs": 0, "frames": 0, "extracted": 1, "spans": 35}, "title": "Lorem Ipsum", "scripts": [{"src": "https://example.com/example.js", "type": "text/javascript"}], "spans": [{"style": "font-size:11pt"}, {"style": "background-color:white"}, {"style": "font-family:Calibri,sans-serif"}, {"style": "font-size:52.5pt"}, {"style": "color:black"}, {"style": "font-size:12pt"}, {"style": "font-family:\\"Times New Roman\\",serif"}, {"style": "font-size:10.5pt"}, {"style": "font-family:\\"Arial\\",sans-serif"}]}, "yara": {"elapsed": 0.002338, "matches": ["test"]}}}  {"file": {"depth": 1, "flavors": {"mime": ["text/plain"], "yara": ["javascript_file"]}, "name": "script_1", "scanners": ["ScanEntropy", "ScanFooter", "ScanHash", "ScanHeader", "ScanJavascript", "ScanYara"], "size": 221, "source": "ScanHtml", "tree": {"node": "b13705b5-ee6b-4d02-b6bc-b17bd81b7744", "parent": "d6fd90b3-ba36-44fc-a45b-e7ca40c58fe2", "root": "d6fd90b3-ba36-44fc-a45b-e7ca40c58fe2"}}, "scan": {"entropy": {"elapsed": 3.1e-05, "entropy": 4.620200029985679}, "footer": {"elapsed": 1.7e-05, "footer": "   document.body.appendChild(newParagraphElement)\\n", "backslash": "   document.body.appendChild(newParagraphElement)\\\\n"}, "hash": {"elapsed": 7e-05, "md5": "ed2a6dffc68bcbe361f4539b5f423d66", "sha1": "172771134de76ede1df66cfa95a839237e485c40", "sha256": "8c3e97cc7103eec2f8959b0f27e2011f09f26386131b075a59f2423c791917ff", "ssdeep": "6:8/tuR78mgO9lV3K0Ji8mOFf0/tuRhBeJY1lLB/etuRMv:8/tuRYu80J17F8/tuRhBein2tuRu", "tlsh": "T159D0A715143A07E4A34AB04F24344394F870045A30173115545F4CCF6F20E922485494"}, "header": {"elapsed": 1.3e-05, "header": "\\n    newParagraphElement = document.createElement(", "backslash": "\\\\n    newParagraphElement = document.createElement("}, "javascript": {"elapsed": 0.031265, "tokens": ["Identifier", "Punctuator", "String"], "strings": ["span", "Lorem Ipsum"], "identifiers": ["newParagraphElement", "document", "createElement", "textLoremIpsum", "createTextNode", "appendChild", "body"], "beautified": true}, "yara": {"elapsed": 7e-05, "matches": ["test"]}}}  ```    ```  ============================= test session starts ==============================  platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0  rootdir: /strelka  plugins: mock-3.10.0, unordered-0.5.2  collected 98 items    tests/test_distribute.py .  tests/test_required_for_scanner.py .  tests/test_scan_base64.py .  tests/test_scan_base64_pe.py .  tests/test_scan_batch.py .  tests/test_scan_bmp_eof.py .  tests/test_scan_bzip2.py .  tests/test_scan_capa.py ...  tests/test_scan_ccn.py .  tests/test_scan_delay.py .  tests/test_scan_dmg.py ...  tests/test_scan_docx.py .  tests/test_scan_elf.py .  tests/test_scan_email.py .  tests/test_scan_encrypted_doc.py ....  tests/test_scan_encrypted_zip.py ..  tests/test_scan_entropy.py .  tests/test_scan_exception.py .  tests/test_scan_exiftool.py ..  tests/test_scan_footer.py ..  tests/test_scan_gif.py .  tests/test_scan_gzip.py .  tests/test_scan_hash.py .  tests/test_scan_header.py ..  tests/test_scan_html.py .  tests/test_scan_ini.py .  tests/test_scan_iso.py .  tests/test_scan_javascript.py .  tests/test_scan_jpeg.py ..  tests/test_scan_json.py .  tests/test_scan_libarchive.py ......  tests/test_scan_lnk.py .  tests/test_scan_lzma.py .  tests/test_scan_macho.py .  tests/test_scan_manifest.py .  tests/test_scan_msi.py .  tests/test_scan_nf.py ....  tests/test_scan_ocr.py ...  tests/test_scan_ole.py ....  tests/test_scan_pcap.py ..  tests/test_scan_pdf.py .  tests/test_scan_pe.py .  tests/test_scan_pgp.py ....  tests/test_scan_plist.py .  tests/test_scan_png_eof.py ...  tests/test_scan_qr.py ...  tests/test_scan_rar.py .  tests/test_scan_seven_zip.py .....  tests/test_scan_strings.py .  tests/test_scan_tar.py .  tests/test_scan_upx.py .  tests/test_scan_url.py ..  tests/test_scan_vhd.py ..  tests/test_scan_x509.py ..  tests/test_scan_xml.py .  tests/test_scan_yara.py .  tests/test_scan_zip.py ..    ======================= 98 passed, 29 warnings in 38.63s =======================    ============================= test session starts ==============================  platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0  rootdir: /strelka  plugins: mock-3.10.0, unordered-0.5.2  collected 161 items    tests_configuration/test_scanner_assignment.py ................................................................................  tests_configuration/test_taste.py .................................................................................  ======================= 161 passed, 4 warnings in 7.88s ========================    ```    **Sample output**    `split_words` option in ScanOcr permits a configurable change in the output events:    `split_words: false`    ```  "ocr": {    "elapsed": 0.671064,    "text": "Lorem Ipsum Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras lobortis sem dui. Morbi at magna quis ligula faucibusconsectetur feugiat at purus. Sed nec lorem nibh. Nam vel libero odio. Vivamus tempus non enim egestas pretium.Vestibulum turpis arcu, maximus nec libero quis, imperdiet suscipit purus. Vestibulum blandit quis lacus nonsollicitudin. Nullam non convallis dui, et aliquet risus. Sed accumsan ullamcorper vehicula. Proin non urna facilisis,condimentum eros quis, suscipit purus. Morbi euismod imperdiet neque fermentum dictum. Integer aliquam, erat sitamet fringilla tempus, mauris ligula blandit sapien, et varius sem mauris eu diam. Sed fringilla neque est, in laoreetfelis tristique in. Donec luctus velit a posuere posuere. Suspendisse sodales pellentesque quam."  },  ```    `split_words: true` (default)    ```  "ocr": {    "elapsed": 0.645343,    "text": [      "Lorem",      "Ipsum",      "Lorem",      "ipsum",      "dolor",      "sit",      "amet,",      "consectetur",      "adipiscing",      "elit.",      "Cras",      "lobortis",      "sem",      "dui.",      "Morbi",      "at",      "magna",      "quis",      "ligula",      "faucibus",      "consectetur",      "feugiat",      "at",      "purus.",      "Sed",      "nec",      "lorem",      "nibh.",      "Nam",      "vel",      "libero",      "odio.",      "Vivamus",      "tempus",      "non",      "enim",      "egestas",      "pretium.",      "Vestibulum",      "turpis",      "arcu,",      "maximus",      "nec",      "libero",      "quis,",      "imperdiet",      "suscipit",      "purus.",      "Vestibulum",      "blandit",      "quis",      "lacus",      "non",      "sollicitudin.",      "Nullam",      "non",      "convallis",      "dui,",      "et",      "aliquet",      "risus.",      "Sed",      "accumsan",      "ullamcorper",      "vehicula.",      "Proin",      "non",      "urna",      "facilisis,",      "condimentum",      "eros",      "quis,",      "suscipit",      "purus.",      "Morbi",      "euismod",      "imperdiet",      "neque",      "fermentum",      "dictum.",      "Integer",      "aliquam,",      "erat",      "sit",      "amet",      "fringilla",      "tempus,",      "mauris",      "ligula",      "blandit",      "sapien,",      "et",      "varius",      "sem",      "mauris",      "eu",      "diam.",      "Sed",      "fringilla",      "neque",      "est,",      "in",      "laoreet",      "felis",      "tristique",      "in.",      "Donec",      "luctus",      "velit",      "a",      "posuere",      "posuere.",      "Suspendisse",      "sodales",      "pellentesque",      "quam."    ]  },  ```    **Checklist**  - [x] My code follows the style guidelines of this project  - [x] I have performed a self-review of and tested my code  - [x] I have commented my code, particularly in hard-to-understand areas  - [x] I have made corresponding changes to the documentation  - [x] My changes generate no new warnings  
https://github.com/tenable/pyTenable/pull/460	40	readability	2021-11-08 21:26:32	Re-theming pyTenable's docsite for readability	# Description    The existing pyTenable theme (alabaster) has issues with how the code is documented and this leads to some undesirable issues as a result of this.  This PR aims to resolve all of those issues by switching to a different theme that has a better layout.  Further this new docsite aims to break up the large, scrolling package doc into more manageable, smaller pages.    Fixes # (issue)    ## Type of change    Please delete options that are not relevant.    - [X] Bug fix (non-breaking change which fixes an issue)  - [X] New feature (non-breaking change which adds functionality)  - [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)  - [X] This change requires a documentation update    # Checklist:    - [X] My code follows the style guidelines of this project  - [X] I have performed a self-review of my own code  - [X] I have commented my code, particularly in hard-to-understand areas  - [X] I have made corresponding changes to the documentation  - [X] My changes generate no new warnings  - [] I have added tests that prove my fix is effective or that my feature works  - [ ] New and existing unit tests pass locally with my changes  - [ ] Any dependent changes have been merged and published in downstream modules (Dependent on CS PR)  
https://github.com/tensorlayer/seq2seq-chatbot/pull/14	1	readability	2018-08-29 11:24:53	Fixes TL global variables initializer deprecated issue and Code readability	Fixed TensorLayer initialize global vars deprecated issue #13, changed learning rate to 0.001 for faster convergence, improved code readability and removed redundant comments and code
https://github.com/terraform-aws-modules/terraform-aws-notify-slack/pull/222	2	readability	2024-04-24 12:13:33	feat: Improved AWS backup notification readability	## Description    When using this module with AWS backup events the resulting message is poorly formatted due to the unstructured nature of the message sent by AWS backup. This PR does a best effort parsing of the message in order to improve readability for the user.    ## Motivation and Context    ### Before  ![Screenshot from 2024-04-03 08-08-24](https://github.com/terraform-aws-modules/terraform-aws-notify-slack/assets/2277465/be5f5590-5be5-464e-8ef7-c4a4f9a5e219)    ### After  ![Screenshot from 2024-04-03 08-07-47](https://github.com/terraform-aws-modules/terraform-aws-notify-slack/assets/2277465/6c39f34b-c4b9-4078-b639-ed1973fe77ac)    ## Breaking Changes    This should not cause any breaking changes and only affects AWS backup messages    ## How Has This Been Tested?    We have been running on our test environment for a couple of weeks now.  
https://github.com/textstat/textstat/pull/87	2	readability	2019-04-09 07:03:59	Issue #75: SPACHE readability	#75   Added function for SPACHE readability for young adults.  Tested this sample text on this [SPACHE Calculator](http://www.readabilityformulas.com/free-readability-formula-tests.php) as well.    ![image](https://user-images.githubusercontent.com/15629249/55654628-eee70b80-57bf-11e9-86c4-9373946ccb4d.png)    Here are the unit test case results, 3 other functions fails test.    ```======================================================================  FAIL: test_gunning_fog (test.Test_TextStat)  ----------------------------------------------------------------------  Traceback (most recent call last):    File "/Users/agupta/MyProjects/textstat/test.py", line 192, in test_gunning_fog      self.assertEqual(14.59, score)  AssertionError: 14.59 != 11.26    ======================================================================  FAIL: test_lexicon_count (test.Test_TextStat)  ----------------------------------------------------------------------  Traceback (most recent call last):    File "/Users/agupta/MyProjects/textstat/test.py", line 96, in test_lexicon_count      self.assertEqual(375, count_punc)  AssertionError: 375 != 376    ======================================================================  FAIL: test_text_standard (test.Test_TextStat)  ----------------------------------------------------------------------  Traceback (most recent call last):    File "/Users/agupta/MyProjects/textstat/test.py", line 210, in test_text_standard      self.assertEqual("14th and 15th grade", standard)  AssertionError: '14th and 15th grade' != '9th and 10th grade'  - 14th and 15th grade  ? ^^        ^  + 9th and 10th grade  ? ^        ^      ----------------------------------------------------------------------  Ran 25 tests in 0.091s    FAILED (failures=3)  
https://github.com/textstat/textstat/pull/141	2	readability	2021-06-24 10:20:26	Adding German readability support	- adds Wienersachtext Formula as described in https://de.wikipedia.org/wiki/Lesbarkeitsindex#Wiener_Sachtextformel    fixes #113 
https://github.com/textstat/textstat/pull/143	1	readability	2021-06-10 09:10:59	Updates function call in Dale-Chall Readability Function	fixes #127 
https://github.com/textstat/textstat/pull/174	2	readability	2021-08-29 22:43:14	Add McAlpine EFLAW readability score	Adds McAlpine EFLAW readability score from #131 to help with assessing readability of English texts for foreign learners of English
https://github.com/TheAlgorithms/Python/pull/784	14	readability	2019-05-25 13:41:25	Adding unit tests for sorting functions, and improving readability on some sorting algorithms	### Content of the Pull Request:  * Improving readability on some existing sorting algorithms (insertion sort and merge sort)  * Renaming some sorting algorithms to have a name standard (as `sortname_sort`, `bubble_sort` instead of `bubblesort` or `bubbleSort` for example)  * Moving some algorithms examples inside the condition `if __name__ == '__main__'` to avoid their execution in case of import  * Adding unit tests to (nearly) all the existing sorting algorithms.
https://github.com/TheAlgorithms/Python/pull/1403	1	readability	2019-10-19 18:14:38	Readability improvements to singly_linked_list.py	Fixes #1397    I have changed the "Head" to "head"(making it more Pythonic) and also "tamp" to "temp"(Better readability) in singly linked list(under data structures)    PS: I'm a newbie at opensource , so if I have done something wrong please do tell. I wish to learn as much as possible  Thanks
https://github.com/TheAlgorithms/Python/pull/1615	21	readability	2019-12-07 05:40:00	Improved readability	
https://github.com/TheAlgorithms/Python/pull/4510	1	readability	2021-07-12 06:16:31	Improves readability and processing time	This removes lambdas, improves readability and processing time when it finds bitstring to print out.    * [x] Enhancement    ### **Checklist:**  * [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).  * [x] This pull request is all my own work -- I have not plagiarized.  * [x] I know that pull requests will not be merged if they fail the automated tests.  * [x] This PR only changes one algorithm file.  To ease review, please open separate PRs for separate algorithms.  * [x] All functions and variable names follow Python naming conventions.  
https://github.com/TheAlgorithms/Python/pull/4855	1	readability	2021-10-16 01:32:34	Improved readability of web_programming/get_imdbtop.py and added documentations with doctests	Updated an existing script `web_programming/get_imdbtop.py ` to crawl top n movies from the imdb databse based on ratings. It includes `documentations` and `doctests`. Modularized the script and made it more customizable. Fixed formatting using  `black` and `flake8`.     * [] Add an algorithm?  * [x] Fix a bug or typo in an existing algorithm?  * [x] Documentation change?    ### **Checklist:**  * [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).  * [x] This pull request is all my own work -- I have not plagiarized.  * [x] I know that pull requests will not be merged if they fail the automated tests.  * [x] This PR only changes one algorithm file.  To ease review, please open separate PRs for separate algorithms.  * [x] All new Python files are placed inside an existing directory.  * [x] All filenames are in all lowercase characters with no spaces or dashes.  * [x] All functions and variable names follow Python naming conventions.  * [x] All function parameters and return values are annotated with Python [type hints](https://docs.python.org/3/library/typing.html).  * [x] All functions have [doctests](https://docs.python.org/3/library/doctest.html) that pass the automated testing.  * [ ] All new algorithms have a URL in their comments that points to Wikipedia or other similar explanations.  * [] If this pull request resolves one or more open issues then the commit message contains `Fixes: #{$ISSUE_NO}`.  
https://github.com/TheAlgorithms/Python/pull/6400	1	readability	2022-10-30 07:11:18	Increased Readability Of Variables	### Describe your change:  Increased Readability Of Variables    ### Checklist:  * [ Yes] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).  * [ Yes] This pull request is all my own work -- I have not plagiarized.  * [ Yes] I know that pull requests will not be merged if they fail the automated tests.  * [ Yes] This PR only changes one algorithm file.  To ease review, please open separate PRs for separate algorithms.  * [ Yes] All new Python files are placed inside an existing directory.  * [ Yes] All filenames are in all lowercase characters with no spaces or dashes.  * [ Yes] All functions and variable names follow Python naming conventions.  * [ Yes] All function parameters and return values are annotated with Python [type hints](https://docs.python.org/3/library/typing.html).  * [ Yes] All functions have [doctests](https://docs.python.org/3/library/doctest.html) that pass the automated testing.  * [ Yes] All new algorithms have a URL in its comments that points to Wikipedia or other similar explanation.  * [ Yes] If this pull request resolves one or more open issues then the commit message contains `Fixes: #{$ISSUE_NO}`.  
https://github.com/TheAlgorithms/Python/pull/8626	1	readability	2023-06-09 09:06:39	Improve readability of ciphers/mixed_keyword_cypher.py	fixes: #8622   ### Describe your change:  I've tried my best with refactoring the code - it still might be too little but that's how much I've managed to do with the time I had.        * [ ] Add an algorithm?  * [x] Fix a bug or typo in an existing algorithm?  * [ ] Documentation change?    ### Checklist:  * [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).  * [x] This pull request is all my own work -- I have not plagiarized.  * [x] I know that pull requests will not be merged if they fail the automated tests.  * [x] This PR only changes one algorithm file.  To ease review, please open separate PRs for separate algorithms.  * [x] All new Python files are placed inside an existing directory.  * [x] All filenames are in all lowercase characters with no spaces or dashes.  * [x] All functions and variable names follow Python naming conventions.  * [x] All function parameters and return values are annotated with Python [type hints](https://docs.python.org/3/library/typing.html).  * [ ] All functions have [doctests](https://docs.python.org/3/library/doctest.html) that pass the automated testing.  * [ ] All new algorithms include at least one URL that points to Wikipedia or another similar explanation.  * [x] If this pull request resolves one or more open issues then the commit message contains `Fixes: #{$ISSUE_NO}`.  
https://github.com/TheAlgorithms/Python/pull/9265	1	readability	2023-10-22 18:51:57	Enhance readability of N Queens	Enhanced readability and added comments to the `n_queens.py` code. Replaced repeated `len(board)` with a single variable `n` for efficiency in the `is_safe` function.    * [x] Fix a bug or typo in an existing algorithm?  * [ ] Add an algorithm?  * [ ] Documentation change?    ### Checklist:  * [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).  * [x] This pull request is all my own work -- I have not plagiarized.  * [x] I know that pull requests will not be merged if they fail the automated tests.  * [x] This PR only changes one algorithm file. To ease review, please open separate PRs for separate algorithms.  * [x] All new Python files are placed inside an existing directory.  * [x] All filenames are in all lowercase characters with no spaces or dashes.  * [x] All functions and variable names follow Python naming conventions.  * [x] All function parameters and return values are annotated with Python [type hints](https://docs.python.org/3/library/typing.html).  * [x] All functions have [doctests](https://docs.python.org/3/library/doctest.html) that pass the automated testing.  * [x] All new algorithms include at least one URL that points to Wikipedia or another similar explanation.  * [ ] If this pull request resolves one or more open issues then the description above includes the issue number(s) with a [closing keyword](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue): "Fixes #ISSUE-NUMBER".    #### Additional Information:  This pull request improves the readability of the `n_queens.py` code and optimizes the `is_safe` function by replacing repeated calls to `len(board)` with a single variable `n`. These changes make the code more understandable and efficient.
https://github.com/TheAlgorithms/Python/pull/10838	1	readability	2023-10-23 17:42:03	Enhance readability of Minimax	Added function docstring and comments explaining the base case, maximizer and minimizer turns.    * [ ] Add an algorithm?  * [x] Fix a bug or typo in an existing algorithm?  * [ ] Add or change doctests? -- Note: Please avoid changing both code and tests in a single pull request.  * [ ] Documentation change?    ### Checklist:  * [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).  * [x] This pull request is all my own work -- I have not plagiarized.  * [x] I know that pull requests will not be merged if they fail the automated tests.  * [x] This PR only changes one algorithm file.  To ease review, please open separate PRs for separate algorithms.  * [x] All new Python files are placed inside an existing directory.  * [x] All filenames are in all lowercase characters with no spaces or dashes.  * [x] All functions and variable names follow Python naming conventions.  * [x] All function parameters and return values are annotated with Python [type hints](https://docs.python.org/3/library/typing.html).  * [x] All functions have [doctests](https://docs.python.org/3/library/doctest.html) that pass the automated testing.  * [x] All new algorithms include at least one URL that points to Wikipedia or another similar explanation.  * [ ] If this pull request resolves one or more open issues then the description above includes the issue number(s) with a [closing keyword](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue): "Fixes #ISSUE-NUMBER".  
https://github.com/thumbor/thumbor/pull/1554	5	readability	2023-06-20 15:46:46	Refactor code blocks for increased readability	Refactor code blocks for increased readability    Cues from pylint. Issues solved are as follows:    ```  ************* Module thumbor.config  thumbor/config.py:914:12: R1713: Consider using str.join(sequence) for concatenating strings from an iterable (consider-using-join)  ************* Module thumbor.utils  thumbor/utils.py:92:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)  ************* Module tests.fixtures.transformer_test_data  tests/fixtures/transformer_test_data.py:79:8: W0719: Raising too general exception: Exception (broad-exception-raised)  ```    This CL also fixes a code duplication issue in thumbor/utils.py
https://github.com/timschumi/tumbot/pull/47	17	readability	2020-05-26 19:42:30	[documentation + code readability]	I noticed that the documentation quality is kind of all over the place, so I unified it    uncritical changes:  - [x] autoformatting everything, to make PEP happy (line length, blank lines,..)  - [x] updated requirements.txt  - [x] added Documentation where commands had none  - [x] refactored the Documentation comments to an unified standard ("normal englisch sentences")  - [x] removed unuses imports  - [x] moved every string concatinatin of @Kroko-fant to an f-String    changes potetionaly worth discussing:  - [x] moved every string.format to an f-String, due to vastly improved readability.  - [x] added two aliasses to userinfo: `userinfos` and `whois`
https://github.com/tournesol-app/tournesol/pull/1459	2	readability	2023-03-22 16:01:44	Improve Distribution Histogram readability	**related to** #932     ---    This PR has for goal to make the chart on the video analysis page more readable.    - [x] Change the number of criteria_scores bins requested from the backend (Thanks to  @GresilleSiffle)  - [x] Fix the tests  - [x] Edit the tick label    With old granularity     ![oldGranularity](https://user-images.githubusercontent.com/50485333/226958181-dbbc2345-b6bb-4464-8dc1-eda9636a43d5.PNG)      With new granularity    ![newGranularity](https://user-images.githubusercontent.com/50485333/226958235-bef3b029-b246-477b-81bc-a437e4974cf1.PNG)  
https://github.com/tox-dev/tox/pull/1015	1	readability	2018-09-23 22:01:40	improve readability: avoid double negative	Just something I stumbled over while debugging something in detox.
https://github.com/trieschlab/PymoNNto/pull/2	3	readability	2020-04-08 10:48:36	Improves readability & upgrades for python 3.8	1. Improves readability of Readme  2. Adds requirements.txt  3. prepares code to run with python 3.8
https://github.com/triton-inference-server/server/pull/5990	1	readability	2023-06-26 22:22:45	Refactor build.py CPU-only Linux libs for readability	- Split CPU-only Linux libs into own function to make if-else statement clearer
https://github.com/twopirllc/pandas-ta/pull/536	18	readability	2022-06-02 21:26:40	DOCS Improve readability across indicators	
https://github.com/ubicomplab/rPPG-Toolbox/pull/117	7	readability	2023-01-22 06:29:15	code clean up: added comments, doc strings, and output spacing (for improved readability)	Tested preprocessing, train, validation, and test on PURE_PURE_UBFC_TSCAN
https://github.com/uio-bmi/immuneML/pull/63	5	readability	2021-01-31 19:27:48	Improve readability of ExploratoryAnalysis HTML	- List downloadable tables  - Put encoding params in a table instead of printing the dict    Also removes output_text and other_output lists from ReportResult since they are not being used in any report so far
https://github.com/ultralytics/yolov3/pull/417	1	readability	2019-08-02 12:49:09	Cleanup- edit for Readability	Cleanup- edit for Readability    To increase readability, I modified the code order of inference process in YOLO layer.  ##   PR Summary   sub>Made with    by [Ultralytics Actions](https://github.com/ultralytics/actions) sub>  ###  Summary Enhanced bounding box calculation in YOLOv3 model inference.  ###  Key Changes - Bounding box scaling by stride is now applied after the `xy` and `wh` calculations. - Removed outdated stride scaling position and consolidated it within the bounding box calculations.  ###  Purpose & Impact - Ensures more accurate scaling of the bounding box coordinates during inference, resulting in more precise object localization. - Streamlines the code for readability and efficiency. - Could potentially impact the users by providing better object detection performance in the YOLOv3 model.
https://github.com/unitaryfund/mitiq/pull/180	2	readability	2020-05-27 08:47:51	Improve API-doc readability	Partly address #127, removing tests from api doc. 
https://github.com/uwblueprint/childrens-aid-society/pull/100	3	readability	2022-11-09 06:12:17	[kai/dto-readability] Improve DTO readability	## Notion ticket link     Please replace with your ticket's URL    no ticket         Give a quick summary of the implementation details, provide design justifications if necessary    ## Implementation description  * improve readability of some of our DTO files         What should the reviewer do to verify your changes? Describe expected results and include screenshots when appropriate    ## Steps to test  1. Visual inspection  2. CI/Pytest are currently passing         Draw attention to the substantial parts of your PR or anything you'd like a second opinion on    ## What should reviewers focus on?  * N/A      ## Checklist  - [x] My PR name is descriptive and in imperative tense  - [x] My commit messages are descriptive and in imperative tense. My commits are atomic and trivial commits are squashed or fixup'd into non-trivial commits  - [x] I have run the appropriate linter(s)  - [x] I have requested a review from the PL, as well as other devs who have background knowledge on this PR or who will be building on top of this PR  
https://github.com/uxlfoundation/scikit-learn-intelex/pull/330	2	readability	2020-10-09 10:32:16	Improve readability of len(sequence) in conditions	# Description  This pull request resolves the remaining "Use of len(sequence) as condition value in Python" code quality issues found in codefactor.io, with the intention of making progress towards issue #316.    Changes proposed in this pull request:  - Replace `len(jparams)` with `jparams` in condition in `generator/wrapper_gen.py`  - Replace `len(ifcs)` with `ifcs` in condition in `generator/gen_daal4py.py`  - Replace `len(ns)` with `len(ns) != 0` for readability in `generator/gen_daal4py.py`
https://github.com/valohai/valohai-cli/pull/91	19	readability	2019-07-26 08:01:08	Machine-readability fixes	Refs #74
https://github.com/vanvalenlab/deepcell-tracking/pull/54	6	readability	2021-04-13 00:51:14	Refactor tracking.py to remove unused code and improve readability.	* Remove backwards compatibility patches  * Save `centroids` and `embeddings` in a dictionary with their "feature_name" as the key. This cleans up some code in `_get_cost_matrix` as well.  * Refactor `_check_feature` to `_validate_feature_name` for clarity.  * `_calc_embeddings` is passed the input data instead of relying on class attributes. This function could be moved out of the class itself.  * Various whitespace changes for better readability.  * Update `_get_parent` to use track_ids NOT indices of the predictions. Tests are failing rarely because it is possible that a track is not included in the prediction output, so the indices and track_ids would be off.
https://github.com/vegaprotocol/sample-api-scripts/pull/131	1	readability	2022-04-08 13:18:08	More readability updates	Updating after another runthrough.    Closes #130   
https://github.com/vincent-laizer/NECTA-API/pull/1	5	readability	2023-09-13 11:53:11	Fixed typo and improved readability	- Fixed typo in comparison function  - Improved readability of the core functions and 
https://github.com/vllm-project/vllm/pull/2499	6	readability	2024-01-19 00:45:14	refactor completion api for readability	This PR adds no new functionality, it just makes completion api a lot easier to read and maintain. before it has one spaghetti function spanning few hundred lines, after this PR, the situation should be greatly improved. chat completion api doesn't have this problem because it is fairly modularized.     I'm doing this in preparation for batch completions support. 
https://github.com/vllm-project/vllm/pull/5571	2	readability	2024-06-17 18:41:08	[CI] Improve the readability of performance benchmarking results and prepare for upcoming performance dashboard	## Why this PR    Current benchmarking results contain too many information for people to digest. This PR aims to:    - [x] Add workload explanations inside the markdown file  - [x] Align the performance metrics and time units for different benchmarking results  - [x] Only expose the key performance metrics in the markdown file  - [x] Append the json version of the benchmarking tables --- for those who wants to check more performance numbers or wants to compare performance between two commits, and also for the upcoming performance dashboard.  - [x] Adjust the documentation    ---     details>     inside this  details> section, markdown rendering does not work, so we use raw html here.     summary> b> PR Checklist (Click to Expand)  /b> /summary>     p>Thank you for your contribution to vLLM! Before submitting the pull request, please ensure the PR meets the following criteria. This helps vLLM maintain the code quality and improve the efficiency of the review process. /p>     h3>PR Title and Classification /h3>   p>Only specific types of PRs will be reviewed. The PR title is prefixed appropriately to indicate the type of change. Please use one of the following: /p>   ul>       li> code>[Bugfix] /code> for bug fixes. /li>       li> code>[CI/Build] /code> for build or continuous integration improvements. /li>       li> code>[Doc] /code> for documentation fixes and improvements. /li>       li> code>[Model] /code> for adding a new model or improving an existing model. Model name should appear in the title. /li>       li> code>[Frontend] /code> For changes on the vLLM frontend (e.g., OpenAI API server,  code>LLM /code> class, etc.)  /li>       li> code>[Kernel] /code> for changes affecting CUDA kernels or other compute kernels. /li>       li> code>[Core] /code> for changes in the core vLLM logic (e.g.,  code>LLMEngine /code>,  code>AsyncLLMEngine /code>,  code>Scheduler /code>, etc.) /li>       li> code>[Hardware][Vendor] /code> for hardware-specific changes. Vendor name should appear in the prefix (e.g.,  code>[Hardware][AMD] /code>). /li>       li> code>[Misc] /code> for PRs that do not fit the above categories. Please use this sparingly. /li>   /ul>   p> strong>Note: /strong> If the PR spans more than one category, please include all relevant prefixes. /p>     h3>Code Quality /h3>     p>The PR need to meet the following code quality standards: /p>     ul>       li>We adhere to  a href="https://google.github.io/styleguide/pyguide.html">Google Python style guide /a> and  a href="https://google.github.io/styleguide/cppguide.html">Google C++ style guide /a>. /li>       li>Pass all linter checks. Please use  a href="https://github.com/vllm-project/vllm/blob/main/format.sh"> code>format.sh /code> /a> to format your code. /li>       li>The code need to be well-documented to ensure future contributors can easily understand the code. /li>       li>Include sufficient tests to ensure the project to stay correct and robust. This includes both unit tests and integration tests. /li>       li>Please add documentation to  code>docs/source/ /code> if the PR modifies the user-facing behaviors of vLLM. It helps vLLM user understand and utilize the new features or changes. /li>   /ul>     h3>Notes for Large Changes /h3>   p>Please keep the changes as concise as possible. For major architectural changes (>500 LOC excluding kernel/data/config/test), we would expect a GitHub issue (RFC) discussing the technical design and justification. Otherwise, we will tag it with  code>rfc-required /code> and might not go through the PR. /p>     h3>What to Expect for the Reviews /h3>     p>The goal of the vLLM team is to be a  i>transparent reviewing machine /i>. We would like to make the review process transparent and efficient and make sure no contributor feel confused or frustrated. However, the vLLM team is small, so we need to prioritize some PRs over others. Here is what you can expect from the review process:  /p>     ul>       li> After the PR is submitted, the PR will be assigned to a reviewer. Every reviewer will pick up the PRs based on their expertise and availability. /li>       li> After the PR is assigned, the reviewer will provide status update every 2-3 days. If the PR is not reviewed within 7 days, please feel free to ping the reviewer or the vLLM team. /li>       li> After the review, the reviewer will put an  code> action-required /code> label on the PR if there are changes required. The contributor should address the comments and ping the reviewer to re-review the PR. /li>       li> Please respond to all comments within a reasonable time frame. If a comment isn't clear or you disagree with a suggestion, feel free to ask for clarification or discuss the suggestion.    /li>   /ul>     h3>Thank You /h3>     p> Finally, thank you for taking the time to read these guidelines and for your interest in contributing to vLLM. Your contributions make vLLM a great tool for everyone!  /p>       /details>      
https://github.com/vllm-project/vllm/pull/10017	1	readability	2024-11-05 10:59:56	[Misc] vllm CLI flags should be ordered for better user readability	FIX #10016    vllm CLI flags should be ordered for better user readability      
https://github.com/vllm-project/vllm/pull/10362	1	readability	2024-11-15 12:40:31	[Misc] Fix some help info of arg_utils to improve readability	I have noticed some formatting issues in the help info of `arg_utils`. Specifically, some cases exist where words are connected without spaces when the text wraps to a new line.     For example,  ```  parser.add_argument(              '--num-gpu-blocks-override',              type=int,              default=None,              help='If specified, ignore GPU profiling result and use this number'              'of GPU blocks. Used for testing preemption.')  ```   img width="899" alt="image" src="https://github.com/user-attachments/assets/4083ee27-e408-4e2c-bd01-129d954b7f84">  So I fix all I can find.    cc @DarkLight1337 
https://github.com/vllm-project/vllm/pull/11200	3	readability	2024-12-14 16:38:27	[Misc] Minor improvements to the readability of PunicaWrapperBase	The previous PR didn't notice this minor issue, now fixing it
https://github.com/volatilityfoundation/volatility3/pull/1494	1	readability	2024-12-30 00:27:27	Use enumerate for readability	
https://github.com/VRSEN/agency-swarm/pull/155	1	readability	2024-11-13 00:47:11	simplified add_tool for improved readability	
https://github.com/Wakoma/nimble/pull/94	4	readability	2024-10-24 09:54:18	Move to keyword only arguments to improve readability	New pylint allows you to seperately set a maximum number of total aguments and a maximum number of positional arguments. This gave us lots of warnings on the number of functions that had a confusingly high number of arguments.    Rather than just up the limit in pylintrc it seems like good practice to make many of these arguments keyword only. This make code more clear, and more robust as we go forward.
https://github.com/wandb/wandb/pull/5021	5	readability	2023-02-23 18:23:38	refactor(sweeps): cosmetic changes for readability	
https://github.com/wandb/wandb/pull/8823	1	readability	2024-11-08 16:01:05	chore: improve code readability in tools/inspect_tool.py	Description  -----------      Include reference to internal ticket "Fixes WB-NNNNN" and/or GitHub issue "Fixes #NNNN" (if applicable)     Clean up `tools/inspect_tool.py`.        NEW: We're using a new changelog format that's more useful for users. Please  see CHANGELOG.md for details and update on relevant changes such as feature  additions, bug fixes, or removals/deprecations.     - [x] I updated CHANGELOG.md, or it's not applicable      Testing  -------  How was this PR tested?        Ensure PR title compliance with the [conventional commits standards](https://github.com/wandb/wandb/blob/main/CONTRIBUTING.md#conventional-commits)     
https://github.com/wandb/wandb/pull/8984	6	readability	2024-12-05 19:08:23	chore: generalize sar log processing and improve readability	Description  -----------      Include reference to internal ticket "Fixes WB-NNNNN" and/or GitHub issue "Fixes #NNNN" (if applicable)     Improved the performance test readability, added functions to remove some dup codes.     Changed files:  1. Added a package in Dockerfile  2. Generalized the process_sar_helper.py to make it compute average and max values more accurately if the tests are very short  3. Improved readability in test_case_helper.py           NEW: We're using a new changelog format that's more useful for users. Please  see CHANGELOG.md for details and update on relevant changes such as feature  additions, bug fixes, or removals/deprecations.     - [X] I updated CHANGELOG.md, or it's not applicable      Testing  -------  Locally        Ensure PR title compliance with the [conventional commits standards](https://github.com/wandb/wandb/blob/main/CONTRIBUTING.md#conventional-commits)     
https://github.com/warpnet/salt-lint/pull/55	31	readability	2019-10-15 19:47:45	Refactor code for readability	Refactor code to improve readability for new developer. This remove most of the logic from `__init__.py` and `__main.py`.
https://github.com/warpnet/salt-lint/pull/199	2	readability	2020-11-27 12:21:29	Improve readability	**WIP:** Fix readability of code.
https://github.com/warpnet/salt-lint/pull/203	44	readability	2020-11-28 18:46:07	Improve readability of code	Improved readability by:  - Splitting the `linter.py` and formatters in separate files.  - Renamed `matches` to `problems`.  - Updated some variable names.    Also updated the copyright notices to 2020.
https://github.com/wazo-platform/wazo-confd/pull/270	1	readability	2022-06-20 14:07:02	refactor meeting tests to improve readability	
https://github.com/Wordcab/wordcab-transcribe/pull/52	1	readability	2023-05-15 11:48:44	improve config and .env readability	Add comments for each config argument and improve general readability.
https://github.com/yaml2sbml-dev/yaml2sbml/pull/45	1	readability	2021-01-11 17:59:33	improve readability of exported yaml closes #44	
https://github.com/ydb-platform/ydb-python-sdk/pull/213	82	readability	2023-03-23 10:36:22	use line-length=120 for better code readability	I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en    Set line-length = 120    ## Pull request type       Please try to limit your pull request to one types, submit multiple pull requests if needed.      Please check the type of change your PR introduces:    - [ ] Bugfix  - [ ] Feature  - [ ] Code style update (formatting, renaming)  - [x] Refactoring (no functional changes, no api changes)  - [ ] Build related changes  - [ ] Documentation content changes  - [ ] Other (please describe):    ## What is the current behavior?    Too many lines breaks into two and more lines  
https://github.com/ZedThree/clang-tidy-review/pull/106	1	readability	2024-01-17 09:49:08	Get username from PR to use in `google-readability-todo`	Improves the recommendation for `google-readability-todo` by providing a proper name which would previously be `TODO(docker)` or `TODO(unknown)`.    If for whatever reason, the name cannot be found, it will default to `TODO(your name here)`.    Closes #102 without the need for a new parameter.    Note that I think using `env` in subprocess also kill all env leaking into the call for `subprocess.run`. Hopefully no one relies on that.
https://github.com/zertox23/Munge/pull/2	2	readability	2023-05-10 02:40:33	Refactored for maintainability and readability. 	I fixed the argparse function, and standardized the arguments.   I moved the main code into functions and added documentation and comments.   I moved the leet_dict and the list of suffixes to dicts.py for readability.  I also fixed a bug where range(1970,2015,5000) had a step of 5000, so only output 1970. Assuming this appends a year, I changed it to range(1970,2030) for future-proofing.  And I added a line to the readme documenting this.     Cheers! 
https://github.com/2Fake/devolo_plc_api/pull/119	3	readability	2023-03-22 10:46:04	Shorten imports for better readability	## Proposed change          Please give us the big picture of your change.     Shorten imports for better readability.    ## Checklist          In case your pull request goes to master, please have a look at the following checklist. Otherwise feel free to remove this chapter.    Put an 'x' in the boxes that apply.       - [ ] Changelog is updated.  
https://github.com/567-labs/fastllm/pull/43	2	readability	2024-02-09 12:54:48	refactor(embed.py, models.py), docs(Readme.md): Improve code readability and update documentation	     ELLIPSIS_HIDDEN       |  a href="https://ellipsis.dev" target="_blank"> img src="https://avatars.githubusercontent.com/u/80834858?s=400&u=31e596315b0d8f7465b3ee670f25cea677299c96&v=4" alt="Ellipsis" width="30px" height="30px"/> /a> | :rocket: This PR description was created by [Ellipsis](https://www.ellipsis.dev) for commit 7229348cab37799c034d5a135cd738cc5a53975c.  |  |--------|--------|  ### Summary: This PR refactors the `embed.py` and `models.py` files in the `finetune-quora-embeddings` application for better readability and maintainability, and updates the `Readme.md` file to improve the formatting of the benchmarking results table.  **Key points**: - Introduced a new `Provider` enum in `models.py` to replace the `model_types` literal. - Refactored `embed.py` to use the new `Provider` enum. - Updated `embed.py` to improve code readability and maintainability. - Modified the `Readme.md` file to improve the formatting of the benchmarking results table. ---- Generated with :heart: by [ellipsis.dev](https://www.ellipsis.dev)      ELLIPSIS_HIDDEN   
https://github.com/acl-org/acl-anthology/pull/3053	1	readability	2024-01-29 15:59:13	Restore human readability and add header	This restores human readability to the anthology.bib file while keeping the file size under 50 MB (#3016). It also adds a comment containing the bib file URL and the date it was generated.
https://github.com/AdaCore/e3-core/pull/658	2	readability	2023-11-24 16:59:39	Use ivar rather than field documentation for readability	Use `:ivar:` to document class fields.        Using class fields documentation renders the code less readable. In my last commit, I introduced such documentation type.        This commit is to use the `:ivar:` tag to document a class field.    The last SPDX package objects added (`PackageComment` and `PackaheHomePage`) had an invalid JSON representation.    The tag for `PackageComment` is `"comment"`, not `"comments"`.  The tag for `PackageHomePage` is `"homepage"`, not `"homePage"`.  
https://github.com/adafruit/Adafruit_CircuitPython_PyBadger/pull/19	1	readability	2020-02-14 17:20:08	Refactor to improve readability and reduce code duplication	I'm not sure if these types of contributions are welcome, but I introduced a new `_create_label_group` method to the `PyBadger` class to help improve code readability and reduce code duplication.     Tested on a PyBadge LC.
https://github.com/adswerve/GA4-Measurement-Protocol-Python/pull/35	2	readability	2022-08-12 21:43:26	Fix/readability and grammar and branding	Minor changes throughout utils.py and ga4mp.py that shouldn't affect functionality. This includes rearranging the dictionary, changing branding to Adswerve, and fixing some comment typos.
https://github.com/aesara-devs/aehmc/pull/99	15	readability	2023-06-22 17:54:52	Improve readability by packing frequently used variables into namedtuples.	closes #67     Here are a few important guidelines and requirements to check before your PR can be merged:  + [ ] There is an informative high-level description of the changes.  + [x] The description and/or commit message(s) references the relevant GitHub issue(s).  + [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).  + [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).  + [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with "Fix...", then you're probably making this mistake.  + [ ] There are tests covering the changes introduced in the PR.    Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.    If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).  
https://github.com/AI-Hypercomputer/maxtext/pull/251	1	readability	2023-11-08 00:27:25	Readability Nits	
https://github.com/aiidateam/aiida-core/pull/1418	1	readability	2018-04-12 19:24:54	Use an indentation when writing the config.json for better readability	
https://github.com/airbytehq/airbyte/pull/33255	4	readability	2023-12-13 11:23:39	Vector DB CDK: Refactor to improve readability 	Previously, all components of the vector db CDK would pass data around as a `Chunk`, which is:  * the text  * the metadata  * the record that created the chunk  * the embedding    As not all of these are available at all times, checks in a bunch of places were necessary.    This PR refactors this by passing "Documents" to the embedder, which is just the text and the record, because that's what's required for running the embedding.
https://github.com/Aiven-Open/myhoard/pull/41	10	readability	2020-09-28 05:52:25	test: Refactor tests for improved readability	Some miscellaneous work from the last 2 PRs - pull the test objects out to be actual objects rather then dictionaries to allow typed passing of test configuration data. Adds the ability to use the BackupStream as a context manager for limiting the duration of the runs. This was critical in diagnosing the cause of test failures, which can otherwise be buried under temporary file cleanup issues.
https://github.com/alex-petrenko/sample-factory/pull/83	1	readability	2021-01-23 00:22:44	Readability Changes	
https://github.com/alexhernandezgarcia/gflownet/pull/169	3	readability	2023-08-21 20:34:57	Tree: cosmetic changes for readability	I got crazy changing things because I thought something was wrong and in the end things are back (I believe) to what we had before. However, at least, the code should be more readable.    The policy output and mask passed to the discrete `sample_actions()" does contain an element corresponding to the "continuous action", but that is ok because it will always be masked out as invalid if a discrete action is to be sampled.
https://github.com/alkaline-ml/pmdarima/pull/504	2	readability	2022-06-01 18:23:45	[MRG+1] Improve Readability	Signed-off-by: Ryan Russell  git@ryanrussell.org>    # Description    Improve readability and correct function references.    ## Type of change    Please delete options that are not relevant.    - [x] Documentation change    # Checklist:    - [x] I have performed a self-review of my own code  - [x] I have made corresponding changes to the documentation  - [x] My changes generate no new warnings  - [x] New and existing unit tests pass locally with my changes  
https://github.com/All-Hands-AI/OpenHands/pull/1051	1	readability	2024-04-22 03:32:31	style: Refactor get_prompt function for readability and maintainability	Optimize the get_prompt function by using a dictionary to map ActionType to hints, thus avoiding repetitions and making the code more readable and maintainable.
https://github.com/All-Hands-AI/OpenHands/pull/3873	2	readability	2024-09-16 18:13:52	refactor the logic in agent_controller to imporve readability	**Short description of the problem this fixes or functionality that this introduces. This may be used for the CHANGELOG**    mainly on refactor the logic in agent_controller to imporve readability.     ---  **Give a summary of what the PR does, explaining any non-trivial design decisions**    - on_event: Refactored event processing by splitting it into two distinct functions: _handle_action and _handle_observation  - set_agent_state_to: Consolidated new_state checks into a single if..elif structure, replacing multiple parallel if statements  - _step: Isolated delegate step functionality and integrated traffic limit handling logic    ---  **Link of any specific issues this addresses**  
https://github.com/allure-framework/allure-python/pull/501	1	readability	2020-08-19 10:05:05	Improve codes readability -- avoid to use overly complex "filter" and "lambda".	Avoid to use overly complex "filter" and "lambda".    [//]: # (  . Thank you so much for sending us a pull request!   .  . Make sure you have a clear name for your pull request.   . The name should start with a capital letter and no dot is required in the end of the sentence.  . To link the request with isses use the following notation: (fixes #123, fixes #321\\)  .  . An example of good pull request names:  . - Add Russian translation (fixes #123\\)  . - Add an ability to disable default plugins  . - Support emoji in test descriptions  )    ### Context  [//]: # (  Describe the problem or feature in addition to a link to the issues  )    #### Checklist  - [x] [Sign Allure CLA][cla]  - [ ] Provide unit tests    [cla]: https://cla-assistant.io/accept/allure-framework/allure2  
https://github.com/alpacahq/pymarketstore/pull/29	3	readability	2020-05-09 23:53:50	improve readability of JsonRpcClient, internalize private logic	
https://github.com/amolchanov86/gym_art/pull/42	2	readability	2021-01-26 23:41:13	New Scenario, param tuning, and readability changes 	- increased rotations to 20*pi and increased episode duration to 16 for all scenarios in mixed  - new scenario that changes formation size during the episode  - Pythonic changes to how formation_size, lowest, highest, etc are get and set, remove functions that produced unwanted side effects, combined functions that could be simplified
https://github.com/ansible-collections/community.general/pull/1648	1	readability	2021-01-19 07:24:26	Improve readability of example.	##### SUMMARY  Now that it's multiline, it's not exactly easy to read.    ##### ISSUE TYPE  - Docs Pull Request    ##### COMPONENT NAME  plugins/lookup/tss.py  
https://github.com/ansible-collections/community.postgresql/pull/221	1	readability	2022-03-29 13:35:54	postgresql_set: 1) Make DictCursor working 2) Refactoring to improve readability.	##### SUMMARY  postgresql_set: 1) Make DictCursor working 2) Refactoring to improve readability.    I don't think a changelog fragment is needed here as it doesn't touch the public interface.
https://github.com/ansible-collections/community.postgresql/pull/627	22	readability	2023-11-27 13:38:23	function imports: Return readability	##### SUMMARY  Partly revert https://github.com/ansible-collections/community.postgresql/pull/581 to put readability back
https://github.com/ansible-collections/community.rabbitmq/pull/89	8	readability	2021-07-27 12:00:26	Refactor `_exec` parameter `run_in_check_mode` for a name that improves readability	This PR has been triggered by [this comment](https://github.com/ansible-collections/community.rabbitmq/pull/65#discussion_r672111654) in PR #65 (thanks to @Andersson007).  Hopefully it improves the code readability by renaming `run_in_check_mode` parameter to `force_exec_in_check_mode` in the `_exec` function used in multiple modules. 
https://github.com/ansible/galaxy_ng/pull/2221	5	readability	2024-09-12 16:17:51	Fix SonarCloud readability issues	
https://github.com/ansys/pyaedt/pull/2655	12	readability	2023-03-21 13:27:57	Improved dostrings and replaced arg_with_dim method with number_with_units for better readability and clarity.	
https://github.com/ansys/pyaedt/pull/4773	1	readability	2024-06-07 07:37:45	REFACTOR: improve readability of error messages	
https://github.com/ansys/pyaedt/pull/5579	10	readability	2025-01-08 11:04:20	REFACTOR: Improve readability vulnerability handling	## Description  Improve readability and vulnerability handling.    ## Issue linked  Contributes to #5504 and #4666  
https://github.com/apache/airflow/pull/18523	2	readability	2021-09-26 08:55:34	Inherit `AirflowNotFound` from `connextion.NotFound` for better readability	    Thank you for contributing! Please make sure that your code changes  are covered with tests. And in case of new features or big changes  remember to adjust the documentation.    Feel free to ping committers for the review!    In case of existing issue, reference it using one of the following:    closes: #ISSUE  related: #ISSUE    How to write a good git commit message:  http://chris.beams.io/posts/git-commit/       [These lines in `post_set_task_instances_state()`](https://github.com/apache/airflow/blob/690e80b82b12ab1d7232d6f02ea6bddd1d71750c/airflow/api_connexion/endpoints/task_instance_endpoint.py#L290-L297) tends to   1. raise `NotFound` if no dag return based on the given `dag_id`  2. catch exception `SerializedDagNotFound` and raise `NotFound`    but raising exception in a try-catch clause lowers the readability.     This PR makes `AirflowNotFoundException` inherited from `connextion.NotFound` and thus the try-catch can be removed and make `post_set_task_instances_state()` simpler.      Fixes: #11851
https://github.com/apache/airflow/pull/20112	3	readability	2021-12-15 00:07:31	Add td_format function and apply to Views duration column for better human readability	    Thank you for contributing! Please make sure that your code changes  are covered with tests. And in case of new features or big changes  remember to adjust the documentation.    Feel free to ping committers for the review!    In case of existing issue, reference it using one of the following:    closes: #ISSUE  related: #ISSUE    How to write a good git commit message:  http://chris.beams.io/posts/git-commit/     This PR came out of the review for: https://github.com/apache/airflow/pull/19921. There was a review for adding an updated view for displaying the duration column in a more readable way.    To be determined if the same application to the TI views are desired as this PR has done so. Otherwise this is just to be a tool to translate some timedelta, or float/int, into the smallest grouped unit of measure to declare how long the duration has been running.    One open question is, is it preferred to make it optionable to apply this change to display the duration as this readable way vs the original timedelta way.    ![image](https://user-images.githubusercontent.com/10408007/145073449-dc50e6f8-795c-4a72-b1ad-aa77f24c3896.png)    ---  **^ Add meaningful description above**    Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/CONTRIBUTING.rst#pull-request-guidelines)** for more information.  In case of fundamental code change, Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvements+Proposals)) is needed.  In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).  In case of backwards incompatible changes please leave a note in [UPDATING.md](https://github.com/apache/airflow/blob/main/UPDATING.md).   img width="1787" alt="Screen Shot 2021-12-09 at 2 30 15 PM" src="https://user-images.githubusercontent.com/10408007/145492277-5c80f994-fd02-48bc-8f1e-872afcb7c04e.png">  
https://github.com/apache/airflow/pull/27810	4	readability	2022-11-21 21:38:28	Improve TriggerRuleDep typing and readability	To implement depth-first execution, a task instance must be able to depend on only selective upstream _task instances_, not the entire upstream _task_. So TriggerRuleDep s helper functions are all changed to take `ti` to make this easier. I also took the chance to add type annotations to all the functions (including those from BaseTIDep).
https://github.com/apache/airflow/pull/28619	1	readability	2023-01-05 21:54:12	Fix code readability, add docstrings to json_client	Code readability improvements in Client class and methods in json_client
https://github.com/apache/airflow/pull/32529	1	readability	2023-07-12 00:02:22	Improve the readability of the conn view tests	     Licensed to the Apache Software Foundation (ASF) under one   or more contributor license agreements.  See the NOTICE file   distributed with this work for additional information   regarding copyright ownership.  The ASF licenses this file   to you under the Apache License, Version 2.0 (the   "License"); you may not use this file except in compliance   with the License.  You may obtain a copy of the License at       http://www.apache.org/licenses/LICENSE-2.0     Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY   KIND, either express or implied.  See the License for the   specific language governing permissions and limitations   under the License.            Thank you for contributing! Please make sure that your code changes  are covered with tests. And in case of new features or big changes  remember to adjust the documentation.    Feel free to ping committers for the review!    In case of an existing issue, reference it using one of the following:    closes: #ISSUE  related: #ISSUE    How to write a good git commit message:  http://chris.beams.io/posts/git-commit/     Make the  conn view tests more readable by renaming some variables and access the row fields by field name instead of index.    ---  **^ Add meaningful description above**    Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/CONTRIBUTING.rst#pull-request-guidelines)** for more information.  In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.  In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).  In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).  
https://github.com/apache/airflow/pull/34259	2	readability	2023-09-11 01:55:51	Change "not all" to "any" for ease of readability	     Licensed to the Apache Software Foundation (ASF) under one   or more contributor license agreements.  See the NOTICE file   distributed with this work for additional information   regarding copyright ownership.  The ASF licenses this file   to you under the Apache License, Version 2.0 (the   "License"); you may not use this file except in compliance   with the License.  You may obtain a copy of the License at       http://www.apache.org/licenses/LICENSE-2.0     Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY   KIND, either express or implied.  See the License for the   specific language governing permissions and limitations   under the License.            Thank you for contributing! Please make sure that your code changes  are covered with tests. And in case of new features or big changes  remember to adjust the documentation.    Feel free to ping committers for the review!    In case of an existing issue, reference it using one of the following:    closes: #ISSUE  related: #ISSUE    How to write a good git commit message:  http://chris.beams.io/posts/git-commit/              Please keep an empty line above the dashes.    ---  **^ Add meaningful description above**  Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/CONTRIBUTING.rst#pull-request-guidelines)** for more information.  In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.  In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).  In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).  
https://github.com/apache/airflow/pull/35453	1	readability	2023-11-05 19:31:45	Refactor DAG_SCRIPT variable in test_trigger_dagrun for readability	No issue.    **Modifications:**  - Refactor the DAG_SCRIPT variable for readability :+1:        Licensed to the Apache Software Foundation (ASF) under one   or more contributor license agreements.  See the NOTICE file   distributed with this work for additional information   regarding copyright ownership.  The ASF licenses this file   to you under the Apache License, Version 2.0 (the   "License"); you may not use this file except in compliance   with the License.  You may obtain a copy of the License at       http://www.apache.org/licenses/LICENSE-2.0     Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY   KIND, either express or implied.  See the License for the   specific language governing permissions and limitations   under the License.            Thank you for contributing! Please make sure that your code changes  are covered with tests. And in case of new features or big changes  remember to adjust the documentation.    Feel free to ping committers for the review!    In case of an existing issue, reference it using one of the following:    closes: #ISSUE  related: #ISSUE    How to write a good git commit message:  http://chris.beams.io/posts/git-commit/              Please keep an empty line above the dashes.    ---  **^ Add meaningful description above**  Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/CONTRIBUTING.rst#pull-request-guidelines)** for more information.  In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.  In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).  In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).  
https://github.com/AppDaemon/appdaemon/pull/705	3	readability	2019-09-22 15:41:44	Enhance variable naming for better readability 	
https://github.com/ArchipelagoMW/Archipelago/pull/1388	3	readability	2023-02-13 02:17:25	Protocol: Improve machine-readability of prints	## The Problem  Various pieces of information are sent only as `PrintJSON` packets. Bots and clients alike may be tempted to parse the human-readable messages to be able to react to specific messages, while becoming reliant on the server not changing the way it formats certain messages.    For example, a bot bridging messages to an external chat room may want to suppress the tutorial message which asks the reader to type `/help` for more information.    ### Detecting echoed chat messages  Another example manifestation of this problem are games with native chat systems, such as Minecraft and Factorio. In-game chat messages sent by players are typically not prevented from entering and being displayed by the native chat system. This means that chat messages that are bridged to the Archipelago server and subsequently echoed back in `PrintJSON` packets will appear twice. The solution currently employed is clients detecting these echoed messages and filtering them out, but this filtering currently has to rely on heuristics and string comparisons. If the server for some reason slightly changed the way it formatted username, alias and content, the filtering would break.    ## What is this fixing or adding?  Much like how some `PrintJSON` packets are already being annotated as being of type `ItemSend`, `Hint` or `Countdown`, this PR aims to add types to all other `PrintJSON` messages. Where applicable the player causing the message is identified by their team and slot IDs. This allows programmatically and reliably identifying which player a chat message originated from, or which player just reached their goal, for example.    ### Compatibility  This change merely adds fields to existing packets. Since the protocol specification already states that `PrintJSON` packets with unknown types are to be tolerated and displayed as normal, no existing clients should break. Updated clients connecting to updated servers can choose to make use of any subset of the newly available information.    ## How was this tested?  Mildly. I ran the updated server, had a few 0.3.7 clients (Subnautica, SM64, Minecraft, SC2WoL) connect, get a check and receive/send chat. Everything seemed to work fine.  I also connected with a custom client that prints the raw received packets to confirm that the new types and fields were in fact being sent.    ## Points of Deliberation    ### Aren't some of those `PrintJSON` types redundant?  * The reason that one might not want to merge ItemCheat into ItemSend is that it would require introducing a breaking change to ItemSend: so far it was assumed that all ItemSends a client receives pertain to that client's team, which isn't always the case with ItemCheat notifications. Hence, old clients would display a wrong recipient. (One obvious but probably undesirable alternative would be to simply not broadcast ItemCheats beyond the affected team.)  * ServerChat could be merged into Chat if we defined a team ID that represents the server. I don't think there is a precedent for this, but one could use team ID `-1`. (_Slot_ ID `0` has already been defined to refer to the server.)    ### Shouldn't each of these `PrintJSON` sub-types be its own packet type?  One could certainly look at it that way, but at their core these packets still share the property that they carry a simple human-readable message that clients can fall back to. Moving these these prints to their own packet types would cause a lot of breaking changes and make implementing a game client capable of displaying all these kinds of messages a lot more work.    I would say that the intention of `PrintJSON` packets is to convey ephemeral informational events. These packets should not dictate a change in protocol or client state and should be completely ignorable.    ### Additional Overhead  These changes roughly double the size of some packets. However, considering that the most common `PrintJSON` type by far, ItemSend, is unaffected (as it is already fully machine-readable), the impact on network traffic should be negligible. Further, even with this additional overhead, all `PrintJSON` packets should easily remain below typical network MTUs.    ### Alternative solution to echoed chat messages  We may want to deploy a different solution to the echo problem described above, namely a dedicated feature allowing clients to opt out of echoes of their own chat messages. This would have the advantage of providing the debatably useful feature of allowing multiple players connecting to the same slot (playing "co-op") to chat to each other and see each other's chat messages.
https://github.com/ArchiveBox/ArchiveBox/pull/446	1	readability	2020-08-18 06:06:33	fix: Issue with timeout in readability	# Summary    `download_url` was outside of the `try/except` block, so timeouts were breaking the whole process.    **Related issues: #445     # Changes these areas    - [X] Bugfixes  - [ ] Feature behavior  - [ ] Command line interface  - [ ] Configuration options  - [ ] Internal architecture  - [ ] Archived data layout on disk  
https://github.com/aristanetworks/anta/pull/455	1	readability	2023-11-16 13:05:50	feat(anta.cli): Show lines between table rows for readability	show_lines set to True to show lines between table rows for readability
https://github.com/ARM-software/devlib/pull/277	1	readability	2018-06-08 16:32:15	Instrument.reset: fix when called with string kind & improve readability	Issue #276 illustrates the risk of having too many nested levels and  execution paths which also impact the readability of the code. We  modify the implementation to solve the bug on top of which we:      - Reduce the maximum order of nested levels from 4 to 3;      - Express more clearly the potential paths of execution      (less nested conditions);      - Replace unnecessary `for`-loops by list comprehensions,      removing the need for an initialisation of `active_channels`      and making clearer what each path of execution ends up with;      - Removed unnecessary `list` copies of `self.channels.values()`;      - Used the fact that the message of a `KeyError` is the unknown      key.    Some comments have also been added pointing out places in the code  where the logger could have been called: these are proposition to  be accepted (and translated into code) or removed in an upcoming  commit.    We feel like an exception is unnecessarily raised in the current implementation and would propose to remove it; this is a tough call as it is possible (although unlikely) that user code relies on this exception in a `try` clause ...
https://github.com/ASFHyP3/hyp3/pull/148	5	readability	2020-06-30 20:26:48	convert time to isoformat 8601 for human readability	
https://github.com/assafelovic/gpt-researcher/pull/867	10	readability	2024-09-29 07:33:40	actions: refactor actions for modularity and readability	
https://github.com/assafelovic/gpt-researcher/pull/868	7	readability	2024-09-29 07:33:59	server: refactor server for modularity and readability	
https://github.com/astropy/astropy/pull/5959	9	readability	2017-05-10 09:43:56	Minor formatting fix to ease readability of the docstring	
https://github.com/astropy/astropy/pull/16369	3	readability	2024-05-02 20:47:56	RFC: improve readability of IPython-specific code blocks	### Description  This has come up in https://github.com/astropy/astropy/pull/16354#discussion_r1586814968 : basically neither @pllim or I knew how these blocks worked off-hand and it caused some confusion, so I'm trying to rewrite the logic in a (hopefully) clearer fashion.     Optional opt-out    - [ ] By checking this box, the PR author has requested that maintainers do **NOT** use the "Squash and Merge" button. Maintainers should respect this when possible; however, the final decision is at the discretion of the maintainer that merges the PR. 
https://github.com/autogluon/autogluon/pull/1370	2	readability	2021-11-22 19:42:22	Tabular: Improved readability and testability of BaggedEnsembleModel._fit_folds	*Issue #, if available:*    *Description of changes:*    - Improved method structure  - Moved initialization and passing of fold configs of fold fitting strategy to after the creation of the configs, rather than during the creation of the configs.  - Added assert statement to ensure expected number of fold models are being trained.  - Fixed minor bug where `is_last_fold` was the opposite value it should have been for all configs.  - Added unit test to sanity check configs are generally correct. (A full unit test would be more complicated as it would require checking every kfold split in the configs.)    By submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.  
https://github.com/autogluon/autogluon/pull/2631	1	readability	2023-01-04 01:44:09	Improve resource error readability	*Issue #, if available:*    *Description of changes:*  - Improve resource error readability  - Additionally added specific messages for errors when system resources are not sufficient.  - Added sanity check that system resources are >= the planned resources to use    By submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.  
https://github.com/Avaiga/taipy/pull/895	1	readability	2024-02-28 12:01:49	Improve error message readability	In case of message like `'types.SimpleNamespace' object has no attribute '_TpLv_tpec_TpExPr_selected_q_question_TPMDL_1'`  we would now show ` A problem occurred while resolving variable 'selected_q_question' in module '__main__'`    resolves #560
https://github.com/avocado-framework/avocado/pull/2064	1	readability	2017-06-12 19:32:35	Plugin listing: improve readability	Let's include an empty line between the plugin categories, so it's  easier to distinguish between different plugin types.    Signed-off-by: Cleber Rosa  crosa@redhat.com>
https://github.com/aws-powertools/powertools-lambda-python/pull/2833	2	readability	2023-07-24 10:58:20	docs(parameters): improve readability on error handling get_parameter 	   markdownlint-disable MD041 MD043    **Issue number:** #2749    ## Summary    Correct `get_parameters` API docstrings example, and improve explanation and readability in Fetching parameters section    ### Changes    > Please provide a summary of what's being changed    ### User experience    > Please share what the user experience looks like before and after this change    **API docs**     img width="1309" alt="image" src="https://github.com/aws-powertools/powertools-lambda-python/assets/3340292/f63091d0-b377-4cdc-bdb8-5d8ce4e08fa1">    **User-guide docs**     img width="1265" alt="image" src="https://github.com/aws-powertools/powertools-lambda-python/assets/3340292/92eeed37-17c9-4345-9bd2-8409e43e17c0">    **Unrelated but obvious readability issue too now fixed**     img width="1246" alt="image" src="https://github.com/aws-powertools/powertools-lambda-python/assets/3340292/4f4743f2-f458-4463-a530-aa01e22f2236">      ## Checklist    If your change doesn't seem to apply, please leave them unchecked.    * [x] [Meet tenets criteria](https://docs.powertools.aws.dev/lambda/python/#tenets)  * [x] I have performed a self-review of this change  * [ ] Changes have been tested  * [x] Changes are documented  * [x] PR title follows [conventional commit semantics](https://github.com/aws-powertools/powertools-lambda-python/blob/develop/.github/semantic.yml)     details>   summary>Is this a breaking change? /summary>    **RFC issue number**:    Checklist:    * [ ] Migration process documented  * [ ] Implement warnings (if it can live side by side)     /details>    ## Acknowledgment    By submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.    **Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.  
https://github.com/aws-samples/fm-leaderboarder/pull/12	2	readability	2024-03-28 16:45:05	improved readability of cost and latency	*Description of changes:*    Tracking averages for cost and latency, using average latency for tests  More clear column naming (total cost, average latency)      By submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.  
https://github.com/aws/aws-encryption-sdk-python/pull/199	67	readability	2019-10-07 23:32:09	Reorganize tests to easy readability and further development	*Issue #, if available:*  fixes #100    *Description of changes:*  This reorganizes the library tests from a single flat directory to a directory tree that matches the module namespaces that they are testing.    By submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.    # Check any applicable:  - [ ] Were any files moved? Moving files changes their URL, which breaks all hyperlinks to the files.    
https://github.com/aws/aws-lambda-builders/pull/433	5	readability	2023-02-02 19:53:15	refactor: esbuild refactor for readability	*Issue #, if available:*    *Description of changes:*  I originally intended to add build-in-source support for the esbuild workflow but I found it hard with the way it was currently set up. I'm hoping my changes make it more readable and easier to work with in general, but let me know if you disagree with my changes or you think there could be further improvements.    Main changes done:  - Changed the bundle action:    - parameter names were kind of coupled to scratch and artifacts directory, so I changed them to accept a working directory and an output directory    - it now performs the esbuild version checking as part of this action (when needed)  - workflow conditionals/IFs cleanup: my main issue with the workflow was the accelerate workflow stuff was a bit complicated, with a bunch of conditions and nested ifs that went a few levels deep. In my proposed changes for the workflow, IFs would only go a single level deep.      By submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.  
https://github.com/awslabs/aws-deployment-framework/pull/557	1	readability	2022-12-07 09:45:11	Fix readability of pipeline generation executions by Step Functions	## Why?    At the moment, when a pipeline definition is created or updated, a Lambda function triggers the pipeline generation state machine.    While triggering this state machine, it does not specify a name for the execution. So Step Function will generate its own unique name instead.    However, when you look at the pipeline generation state machine, it is impossible to tell which generation is running or has failed from the list of executions. As all executions have unique ids.    ## What?    Changed the start execution process when a pipeline is created or updated, such that it will include the pipeline name at the start of the execution.    Followed by the CodePipeline execution id of the `aws-deployment-framework-pipelines` process that created or modified the deployment map that contained this pipeline.    As well as the Lambda execution id, such that rerunning the lambda function will also result in unique execution ids to pass to the Step Function.    ---    By submitting this pull request, I confirm that you can use, modify, copy, and  redistribute this contribution, under the terms of your choice.  
https://github.com/awslabs/aws-deployment-framework/pull/566	1	readability	2022-12-15 21:16:17	Chore: Refactor CodeBuild readability	## Why?    The CodeBuild class had similar issues as the CodePipeline class where the line length requirement was not met. Plus code readability was not terrific either.    ## What?    Fixed the readability by properly breaking the lines. Another pass of refactoring code too.    I don't like the large if / else in the constructor + large code overlap between the two branches. This requires more refactoring later.    ---    By submitting this pull request, I confirm that you can use, modify, copy, and  redistribute this contribution, under the terms of your choice.  
https://github.com/axolotl-ai-cloud/axolotl/pull/707	1	readability	2023-10-19 12:12:17	improve: Enhance code readability of prompt_tokenizers.py	# Description    ## Motivation and Context  As many tokenzer variations are added, its complexity is increasing and it is hard to understand what each code block means. We better clean up duplicated code and enhance code readability.  ## How has this been tested?  I don't have Cuda devices so cannot run tests. It would be great if someone can run tests for me.  ## Changes  1. **Removed Duplication**:     - Removed the redundant `_tokenize` method which was present twice.     - Unified the logic of handling user and assistant roles in tokenization.      2. **Simplified Empty Text Handling**:     - Streamlined the empty text tokenization process.      3. **Code Clarifications**:     - Simplified the checks for adding eos tokens and stripping bos tokens, making it more readable.     - Unified the constant `IGNORE_INDEX` replacing varied constants like `-100`.      4. **Handling Unexpected Cases**:     - Enhanced error handling for unexpected roles.  5. **Clean-up**:     - Removed unnecessary imports.     - Simplified several parts of the code to improve readability.  ## Screenshots (if appropriate)  ## Types of changes  Readability improvement
https://github.com/azukds/tubular/pull/251	2	readability	2024-05-15 15:23:52	refactored DatetimeInfoExtractor to improve readability/condense	Refactored DatetimeInfoExtractor for readability reasons
https://github.com/Azure/azure-cli/pull/26941	1	readability	2023-07-21 02:29:58	{AKS} fix: update short summary for azure monitor metrics for better readability in docs	  **Related command**    - Please provide the related command with az {command} if you can, so that we can quickly route to the related person to review. -     **Description**  Mandatory     Why this PR? What is changed? What is the effect? etc. A high-quality description can accelerate the review process.     Updating text for better readability in [docs](https://learn.microsoft.com/en-us/cli/azure/aks?view=azure-cli-latest#:~:text=Create%20a%20kubernetes%20cluster%20with%20Azure%20Monitor%20Metrics%20enabled.)    **Testing Guide**    Example commands with explanations.     No testing required for this change as its just a document update    ---    This checklist is used to make sure that common guidelines for a pull request are followed.    - [x] The PR title and description has followed the guideline in [Submitting Pull Requests](https://github.com/Azure/azure-cli/tree/dev/doc/authoring_command_modules#submitting-pull-requests).    - [x] I adhere to the [Command Guidelines](https://github.com/Azure/azure-cli/blob/dev/doc/command_guidelines.md).    - [x] I adhere to the [Error Handling Guidelines](https://github.com/Azure/azure-cli/blob/dev/doc/error_handling_guidelines.md).  
https://github.com/Azure/azure-cli-extensions/pull/7231	4	readability	2024-01-31 10:14:30	Refactor azure service mesh update function for better readability	---    This checklist is used to make sure that common guidelines for a pull request are followed.    ### Related command  all `az aks mesh` commands.      ### General Guidelines    - [x] Have you run `azdev style  YOUR_EXT>` locally? (`pip install azdev` required)  - [x] Have you run `python scripts/ci/test_index.py -q` locally? (`pip install wheel==0.30.0` required)  - [x] My extension version conforms to the [Extension version schema](https://github.com/Azure/azure-cli/blob/release/doc/extensions/versioning_guidelines.md)    For new extensions:    - [ ] My extension description/summary conforms to the [Extension Summary Guidelines](https://github.com/Azure/azure-cli/blob/dev/doc/extensions/extension_summary_guidelines.md).      ### About Extension Publish    There is a pipeline to automatically build, upload and publish extension wheels.    Once your pull request is merged into main branch, a new pull request will be created to update `src/index.json` automatically.    You only need to update the version information in file setup.py and historical information in file HISTORY.rst in your PR but do not modify `src/index.json`.   
https://github.com/Azure/azure-iot-sdk-python/pull/380	16	readability	2019-10-31 23:07:26	Rename stages and ops for readability	
https://github.com/Azure/azure-kusto-python/pull/270	6	readability	2021-01-05 15:31:28	Rename KustoIngestClient to QueuedIngestClient for readability	#### Pull Request Description    This is a breaking change requiring upgrading the major version, yet is a minor, cosmetic/readability change. This will therefore wait before being merged until a more necessary breaking change is being merged as well.    ---    #### Future Release Comment  Rename KustoIngestClient to QueuedIngestClient for readability    **Breaking Changes:**  - The KustoIngestClient class is now more accurately named QueuedIngestClient
https://github.com/Azure/azure-kusto-python/pull/476	11	readability	2023-05-17 11:02:03	improved readability	### Added    ### Changed  -changed names of classes in _telemetry  -removed 3 functions in _telemetry    ### Fixed  
https://github.com/BediBot/BediBot-Version-1/pull/41	2	readability	2020-10-18 18:09:12	Help command readability update	@zaydtahir Can you please update the addduedate example?
https://github.com/Benchling-Open-Source/allotropy/pull/199	1	readability	2023-12-15 23:37:53	Improve readability in allotrope_from_io()	Slight improvement inspired by #200
https://github.com/bloomberg/memray/pull/344	1	readability	2023-04-21 17:21:08	Improve text readability in jupyterlab dark theme	This applies to:  - progress bar text status  - jupyter magic %%memray_flamegraph output filename    *Issue number of the reported bug or feature request: #343*    **Describe your changes**  I changed the color blue to cyan for a few text outputs to improve readability in dark themes.  ![color_change](https://user-images.githubusercontent.com/16963011/233504369-0f41b858-d60d-4c06-bec0-ac07b45f9b08.png)    **Testing performed**  The screenshot above shows good readability of the cyan text in both light and dark themes, and uses a color number below 16, so it displays properly in terminals with 16 colors.    **Additional context**  Closes: #343
https://github.com/BMIRDS/deepslide/pull/18	14	readability	2019-12-18 16:27:40	refactor: Rewrote code to increase efficiency and readability.	## Changes in this Release  - Use Python [multiprocessing](https://docs.python.org/3.6/library/multiprocessing.html) to speed up patch creation.  - Replace [os](https://docs.python.org/3.6/library/os.html) with [pathlib](https://docs.python.org/3.6/library/pathlib.html) module.  - Added [argparse](https://docs.python.org/3.6/library/argparse.html) support.  - Rewrote patch processing code using vector operations.  - Fully documented all functions and methods with docstrings and type hints.  - Compute image means and standard deviations for normalization online.  - Increased efficiency of code by rewriting inefficient code.
https://github.com/borgbackup/borg/pull/7233	22	readability	2022-12-30 14:13:18	Docs and comments consistency and readability improvement	   for master branch  
https://github.com/borgbase/vorta/pull/1598	4	readability	2023-02-21 21:01:50	improve size column readability in archives tab	I find hard to read the sizes of the archives at a glance when they are all mixed units: usually the longer numbers represent smaller sizes, making it difficult to find the biggest archives. So I made a basic algorithm to select a good unit that can adequately represent all sizes, that makes it much easier to read. Also I made the column align to the right, which further improves readability.    ### Related Issue  https://github.com/borgbase/vorta/issues/1595    ### Motivation and Context  Readability    ### How Has This Been Tested?  Tested on my archive list, which sizes goes from about 100 MB to 150 GB    ### Screenshots (if appropriate):  ![image](https://user-images.githubusercontent.com/133625/219548584-6abcc35d-6914-47ec-bfec-3d71017fdaeb.png)      ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue)  - [x] New feature (non-breaking change which adds functionality)  - [ ] Breaking change (fix or feature that would cause existing functionality to change)    ### Checklist:  - [x] My code follows the code style of this project.  - [ ] My change requires a change to the documentation.  - [ ] I have updated the documentation accordingly.  - [x] I have read the [CONTRIBUTING](https://vorta.borgbase.com/contributing/) guide.  - [x] I have added tests to cover my changes.  - [x] All new and existing tests passed.      *I provide my contribution under the terms of the [license](./../../LICENSE.txt) of this repository and I affirm the [Developer Certificate of Origin][dco].*    [dco]: https://developercertificate.org/        This template is sourced from the awesome https://github.com/TalAter/open-source-templates     
https://github.com/cal-adapt/climakitae/pull/432	1	readability	2024-09-19 16:34:54	Improve readability of `generate_gwl_tables.py`	# Description of PR    ### Summary of changes and related issue  Reviewed `generate_gwl_tables.py` and made code more readable in certain locations.    ### Relevant motivation and context  We needed to document the GWL year generation process and make it more interpretable by developers.    ### Type of change  - [x] Bug fix (non-breaking change which fixes an issue)  - [ ] New feature (non-breaking change which adds functionality)  - [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)  - [ ] This change requires a documentation update     br>    ## Definition of Done Checklist    #### Practical  - [x] 80% unit test coverage  - [x] Documentation    - [x] All functions/adjusted functions documented in the [readthedocs](https://climakitae.readthedocs.io/en/latest/).    - [x] Documentation is pushed  - [x] Complex code commented  - [x] Naming conventions followed    - [x] Helper functions hidden with `_` before the name  - [x] Context of function is clearly provided    - [x] Intent of function is provided    - [x] How to test, so that it is not siloed on scientists and anyone can review    - [x] Appropriate manual testing was completed  - [x] Any notebooks known to utilize the affected functions are still working  - [x] Linting completed and resolved    #### Conceptual  - [x] Doesn't replicate existing functionality  - [x] Aligns with general coding standard of existing functions  - [x] Matches desired functinonality from users/scientists  
https://github.com/CambioML/uniflow-llm-based-pdf-extraction-text-cleaning-data-clustering/pull/98	15	readability	2024-01-08 08:35:53	Support zero shot prompting by removing hard requirement for few shot and refactoring to improve readability	- Support zero shot prompting by removing hard requirement for few shot  - rename examples field to few_shot_prompt field to be explicit about few shot prompt  - rename GuidedPrompt to PromptTemplate to improve readability  - rename guided_prompt_template to prompt_template to improve readability  - rename prompt_schema.py to prompt.py
https://github.com/CarperAI/trlx/pull/210	4	readability	2023-02-05 16:06:48	Improve PPO readability	Adds mostly comments and renames a few variables to be more descriptive. Also deletes two unused methods.    I've run an example with wandb to check this doesn't change anything unexpectedly - https://wandb.ai/alancooney/trlx/runs/aew4nu69 (same as before the changes)    Co-authored-by: @jezgillen 
https://github.com/castorini/howl/pull/21	50	readability	2020-08-04 23:51:14	Refactor for improved usability and readability	- Streamline data preprocessing pipeline (close #17)  - Improve class structure and code organization  - Remove unnecessary dependency on DeepSpeech
https://github.com/CenterForOpenScience/osf.io/pull/10613	1	readability	2024-05-13 15:34:47	[ENG-5140] #2 Update get_auth for GV and readability 	## Purpose    Fix some signals code that wasn't covered by tests.    ## Changes    - squish some ORM logic to avoid errors      ## QA Notes    Please make verification statements inspired by your code and what your code touches.  - Verify  - Verify    What are the areas of risk?    Any concerns/considerations/questions that development raised?    ## Documentation       Does any internal or external documentation need to be updated?       - If the API was versioned, update the developer.osf.io changelog.       - If changes were made to the API, link the developer.osf.io PR here.       ## Side Effects       Any possible side effects?      ## Ticket       Link to JIRA ticket, if applicable e.g. https://openscience.atlassian.net/browse/OSF-1234    
https://github.com/CERT-Polska/Artemis/pull/627	1	readability	2023-11-07 14:42:07	Improving logging readability	
https://github.com/cfpb/consumerfinance.gov/pull/3589	4	readability	2017-11-24 19:04:55	Refactoring related modules for readability and usage	This PR attempts to clean up some of the code around related modules by  - Moving functions onto the CFGOVPage class when possible, instead of as helper functions  - Rewriting `related_posts` so that it's more readable. Does not change functionality     All tests still pass 
https://github.com/chartbeat-labs/textacy/pull/77	2	readability	2017-04-01 19:40:05	implemented readability index for german texts	I added a new formula to the class _TextStats_ to open up this functionality to other languages.  So far I have not touched the method _readability_stats_, because I'm unsure how you would like to handle multiple languages. Still, I'm open to extend it after further discussions like:    - Would you like to return different structured dictionaries based on language?  - Would you like to split the method into language-dependant (private sub-)methods?    Maybe you already had some design ideas in mind you could share with me.    ## Types of changes    - What types of changes does your code introduce? Put an `x` in all the boxes that apply:    - [ ] Bug fix (non-breaking change which fixes an issue)  - [x] New feature (non-breaking change which adds functionality)  - [ ] Breaking change (fix or feature that would cause existing functionality to change)    ## Checklist:    - Go over all the following points, and put an `x` in all the boxes that apply.      - If you're unsure about any of these, don't hesitate to ask. We're here to help!    - [x] My code follows the code style of this project.  - [ ] My change requires a change to the documentation, and I have updated it accordingly.  
https://github.com/chemprop/chemprop/pull/59	13	readability	2020-07-20 18:28:00	Touchups for grad_clip, improved logging readability	
https://github.com/chipsec/chipsec/pull/1568	1	readability	2022-08-26 16:49:21	Update pack formatting and improve readability	
https://github.com/CityOfZion/neo3-boa/pull/1071	7	readability	2023-06-20 14:14:29	Refactor lower implementation to improve readability	**Summary or solution description**  Refactored `lower` built-in method.  Part of an overall refactoring to unify code generator logic and built-in methods generation.    **How to Reproduce**  https://github.com/CityOfZion/neo3-boa/blob/12aa115d6258a0f4488c7a350b5243362b6422da/boa3_test/test_sc/string_test/LowerStringMethod.py#L4-L6    **Tests**  https://github.com/CityOfZion/neo3-boa/blob/12aa115d6258a0f4488c7a350b5243362b6422da/boa3_test/tests/compiler_tests/test_bytes.py#L1161-L1185  https://github.com/CityOfZion/neo3-boa/blob/12aa115d6258a0f4488c7a350b5243362b6422da/boa3_test/tests/compiler_tests/test_string.py#L912-L941    **Platform:**   - OS: Windows 10 x64   - Python version: Python 3.7+  
https://github.com/CityOfZion/neo3-boa/pull/1073	4	readability	2023-06-26 20:11:04	Refactor count implementation to improve readability	**Summary or solution description**  Refactored `count` built-in method.  Part of an overall refactoring to unify code generator logic and built-in methods generation.    **How to Reproduce**  https://github.com/CityOfZion/neo3-boa/blob/d23e08e2b3daa768aa7f41458b696f3ad4721874/boa3_test/test_sc/built_in_methods_test/CountListAnyType.py#L6-L16    **Tests**  https://github.com/CityOfZion/neo3-boa/blob/d23e08e2b3daa768aa7f41458b696f3ad4721874/boa3_test/tests/compiler_tests/test_builtin_method.py#L1692-L2166    **Platform:**   - OS: Windows 10 x64   - Python version: Python 3.7+  
https://github.com/CityOfZion/neo3-boa/pull/1076	1	readability	2023-06-23 17:36:59	Refactor dict.copy implementation to improve readability	**Summary or solution description**  Refactored `dict.copy` built-in method.  Part of an overall refactoring to unify code generator logic and built-in methods generation.    **How to Reproduce**  https://github.com/CityOfZion/neo3-boa/blob/bf71b7230d6747b99ed071251e5d83aa503497c6/boa3_test/test_sc/dict_test/DictCopy.py#L6-L10    **Tests**  https://github.com/CityOfZion/neo3-boa/blob/bf71b7230d6747b99ed071251e5d83aa503497c6/boa3_test/tests/compiler_tests/test_dict.py#L746-L791    **Platform:**   - OS: Windows 10 x64   - Python version: Python 3.7+  
https://github.com/CityOfZion/neo3-boa/pull/1095	2	readability	2023-07-17 12:35:41	Refactor upper implementation to improve readability	**Summary or solution description**  Refactored `upper` built-in method.  Part of an overall refactoring to unify code generator logic and built-in methods generation.    **How to Reproduce**  https://github.com/CityOfZion/neo3-boa/blob/e2c75a8f9ea084b457d0dd585ade006378c1f78f/boa3_test/test_sc/string_test/UpperStringMethod.py#L4-L6    **Tests**  https://github.com/CityOfZion/neo3-boa/blob/e2c75a8f9ea084b457d0dd585ade006378c1f78f/boa3_test/tests/compiler_tests/test_bytes.py#L1136-L1160  https://github.com/CityOfZion/neo3-boa/blob/e2c75a8f9ea084b457d0dd585ade006378c1f78f/boa3_test/tests/compiler_tests/test_string.py#L867-L897    **Platform:**   - OS: Windows 10 x64   - Python version: Python 3.7+  
https://github.com/CityOfZion/neo3-boa/pull/1098	1	readability	2023-07-18 12:58:14	Refactor remove implementation to improve readability	**Summary or solution description**  Refactored `list` `remove` built-in method.  Part of an overall refactoring to unify code generator logic and built-in methods generation.    **How to Reproduce**  https://github.com/CityOfZion/neo3-boa/blob/57b4554b061890a79bcf55d3a678828a5a353ffc/boa3_test/test_sc/list_test/RemoveIntValue.py#L6-L10    **Tests**  https://github.com/CityOfZion/neo3-boa/blob/57b4554b061890a79bcf55d3a678828a5a353ffc/boa3_test/tests/compiler_tests/test_list.py#L1787-L1843    **Platform:**   - OS: Windows 10 x64   - Python version: Python 3.7+  
https://github.com/CityOfZion/neo3-boa/pull/1102	1	readability	2023-07-19 12:16:36	Refactor insert implementation to improve readability	**Summary or solution description**  Refactored `list` `insert` built-in method.  Part of an overall refactoring to unify code generator logic and built-in methods generation.    **How to Reproduce**  https://github.com/CityOfZion/neo3-boa/blob/816d918e6d51ef37edbe6dc5dc6330f28b4bedd4/boa3_test/test_sc/list_test/InsertAnyValue.py#L6-L9    **Tests**  https://github.com/CityOfZion/neo3-boa/blob/816d918e6d51ef37edbe6dc5dc6330f28b4bedd4/boa3_test/tests/compiler_tests/test_list.py#L1663-L1744    **Platform:**   - OS: Windows 10 x64   - Python version: Python 3.7+  
https://github.com/Cloud-CV/EvalAI/pull/2667	2	readability	2020-06-15 01:25:28	Improving_code_readability	Fix: #2666     Variable have understandable name that clearly describes it's functionality.
https://github.com/cloudify-cosmo/cloudify-cli/pull/750	2	readability	2018-03-12 04:19:50	Added colon for readability	
https://github.com/cms-cat/cmsstyle/pull/54	1	readability	2024-11-29 13:57:57	Adding new improvements and methods to CMSStyle (python code) to improve readability and usability	This includes many changes performed to simplify the maintainability of the package and some improvements to the tool. They should ve transparent to the user, as long as the user is using the tools properly.    However, a remark: A few of the changes may not be totally backward compatible, but the change should be in the right direction.    The modifications are in common human-readable text the following:    - Reorganize (within the file) the global variables to improve maintainability and readability.    - Adding the values of the colors for the limit bands (68% and 95%) for the two sets indicated in https://cms-analysis.docs.cern.ch/guidelines/plotting/colors/#sequential-data-eg-2d-heatmaps-levels (for the "Brazil" and the CMS-logo colour sets.    - Adding compatability to use ROOT-defined names for Petroff color schemes, when they are available (starting in 6.34...) but keeping our color names [recommended!] to be compatible for all ROOT versions.    - Minor changes in syntax (and comments, and method descriptions) for clarity while navegating the file. Also changing names of variables and reroganizing a bit some internally used methods to improve readability.    - Adding new defaults to the cmsStyle, that should match the ROOT defaults, but this may have some impact if people are redifining them. Mostly related to the MArker size and the Legend borders.    - Prevent cmsStyle to be overwritten when produicing a double-plot canvas (same as we did for cmsCanvas).    - Avoid using f-strings to keep compatibility with python 2.7    - Adding method (changeStatsBox) to modify and handle the statistics box in a simple way. Totally orthogonal to the rest of the code but we should encourage its use.    - Adding an utility method (cmsReturnMaxY) to make calculation of the maximum for the Y-axis based on the provided objects. Totally orthogonal as its use is as an assistant, no actually used in the code (should we perhaps move some of these to another python file/module/package?)    (Please: do not create a tag for this version as more pull-request with more revelant changes are coming soon).
https://github.com/cmu-delphi/covidcast-indicators/pull/1331	1	readability	2021-10-26 15:05:17	geo_data_proc refactor: readability and a small bug fix	### Description  `geo_data_proc.py` (producing crosswalk files for geomapper) is a little bloated, so a few refactors to make it easier to read (on a widescreen monitor), a bug fix, and a minor change.    ### Changelog  - Allow long lines. Personal code style preference to not line wrap long pandas chains.  - Fix a minor bug where derived functions could use old crosswalks from a previous build, causing inconsistency.  - Force deterministic sort order for crosswalk tables to make diffs easier to read.
https://github.com/Cog-Creators/Red-DiscordBot/pull/3946	1	readability	2020-06-11 17:31:50	Update `dm` docstring for readability and grammar (+ period in `contact`)	### Type    - [x] Bugfix  - [ ] Enhancement  - [ ] New feature    ### Description of the changes  - Fix incorrect capitalisation  - Put menu navigation in chronological order  - Add a missing full stop on the end    Edit:  - Whilst in this area of the code may as well fix a missing full stop in `contact`
https://github.com/colpal/dataEng-container-tools/pull/156	5	readability	2023-02-14 15:26:33	Secret Reading Stability, Json Readability upgrades	-- adds improved secret parsing control flow to accomodate for env variable vault output.  -- updates gcs file io to accomodate multi-record json files
https://github.com/conan-io/conan/pull/6838	3	readability	2020-04-14 10:36:37	refactor of cmake find for better readability	Changelog: Omit  Docs: Omit    Strictly pure refactor of the cmake_find_xxx generators, while I was studying and trying to understand them better, some minor pep8, the majority are naming variables, homogeneous style (like class variables using textwrap.dedent() instead of module variables), etc.    #tags: slow  
https://github.com/conan-io/conan/pull/16040	4	readability	2024-04-11 12:31:52	Internal refactor for readability of CMakeDeps	Changelog: Omit  Docs: Omit
https://github.com/coveooss/coveo-python-oss/pull/72	2	readability	2021-06-18 12:29:19	New argument parsing behavior for code readability	new "Quoted" argument on check_* calls:    - When False, an argument is automatically quoted if it has a space (Popen's behavior):    ```          Good: 'exec', '--option', '--also', 'this value' -> exec --option --also "this value"          Bad:  'exec', '--option', '--also this value' -> exec --option "--also this value" (quotes are misplaced)  ```    - When True, the arguments will be split on spaces, unless you quoted them beforehand:  ```          Good: 'exec --option', '--also "this value"' -> exec --option --also "this value"          Bad:  'exec', '--option', '--also', 'this value' -> exec --option --also this value (quotes are missing)  ```    With `quoted=True` you can combine arguments together in single strings; this often improves readability.  However, you MUST quote the tokens that may contain a space. Example with black formatting:    without quoted:  ```          check_run(              [                  "executable",                  "--verbose",                  "--target",                  filename,                  "--dry-run",                  "--with-onions"              ]          )  ```  with quoted:    ```          import shlex          check_run(              [                  "executable --verbose",                  f"--target {shlex.quote(filename)}",                  "--dry-run --with-onions"              ],              quoted=True,          )  ```
https://github.com/crewAIInc/crewAI/pull/90	2	readability	2024-01-10 02:29:51	improved readability	
https://github.com/cs50/problems/pull/298	1	readability	2025-01-26 20:31:14	readability checks fixes	cuts a pair of duplicate function named and gets rid of an 'invalid escape sequence' warning
https://github.com/CsqLang/Csq/pull/264	6	readability	2023-11-01 15:34:32	Split Large Code Files for Improved Manageability and Readability	### Split Large Code Files for Improved Manageability and Readability  Optimized codebase for manageability and readability by splitting large files into smaller
https://github.com/CybercentreCanada/assemblyline-v4-service/pull/602	1	readability	2023-04-20 12:01:34	Improving readability of get_network_connection_by_network_http, fixi 	 ng typo in return type
https://github.com/dagster-io/dagster/pull/25163	1	readability	2025-02-07 22:03:23	readability adjustment for deprecated params in OpDefinition	
https://github.com/dandi/dandi-cli/pull/1535	2	readability	2024-11-26 04:11:14	Refactor some download code for readability + ensure that we checksum resumed downloads	- Closes #1528 
https://github.com/databricks/lilac/pull/127	8	readability	2023-05-08 12:51:01	Add `schema()` and `field()` sugar to improve readability of tests	
https://github.com/databricks/lilac/pull/381	20	readability	2023-06-19 20:31:28	Add TTR and readability score in text stats	  https://github.com/lilacai/lilac/assets/2294279/b2676c09-3a79-46b7-a784-6787787d6e52    
https://github.com/DataDog/dd-trace-py/pull/5001	2	readability	2023-02-02 15:58:02	chore(tracing): readability improvements to sampler and propagation tests	A few small readability refactors to tests I came across in my first week working on this repo.    I messed up https://github.com/DataDog/dd-trace-py/pull/4995 trying to sign an old unsigned commit, so this PR replaces it. Same diff, all commits signed.    # Checklist    - [x] make a pull request
https://github.com/DataDog/integrations-core/pull/2785	30	readability	2018-12-24 09:38:07	Improve code readability	### What does this PR do?    No functional changes, only rearranging existing code. Changes live in separate commit, see branch history for details about each change, also useful for review.    ### Motivation    Navigating the code is not very intuitive, import statements are confusing because different modules have the same name.    
https://github.com/DataDog/integrations-core/pull/12435	3	readability	2022-07-07 19:50:41	Properly read `collect_secondary_dr` and improve code readability	### What does this PR do?  Uses is_affirmative for collect_secondary_dr to cover more inputs, and improves code readability by renaming a variable that did not make sense after https://github.com/DataDog/integrations-core/pull/12099    ### Motivation  QA for https://github.com/DataDog/integrations-core/pull/12099  ### Additional Notes     Anything else we should know when reviewing?      ### Review checklist (to be filled by reviewers)    - [ ] Feature or bugfix MUST have appropriate tests (unit, integration, e2e)  - [ ] PR title must be written as a CHANGELOG entry [(see why)](https://github.com/DataDog/integrations-core/blob/master/CONTRIBUTING.md#pull-request-title)  - [ ] Files changes must correspond to the primary purpose of the PR as described in the title (small unrelated changes should have their own PR)  - [ ] PR must have `changelog/` and `integration/` labels attached  
https://github.com/DataDog/integrations-core/pull/13126	2	readability	2022-10-26 13:11:59	Improve readability of env and docker retry tests	### What does this PR do?     A brief description of the change being made with this pull request.      Improve readability of env and docker retry tests    ### Motivation     What inspired you to submit this pull request?      Discussions in https://github.com/DataDog/integrations-core/pull/13106    ### Additional Notes     Anything else we should know when reviewing?      ### Review checklist (to be filled by reviewers)    - [ ] Feature or bugfix MUST have appropriate tests (unit, integration, e2e)  - [ ] PR title must be written as a CHANGELOG entry [(see why)](https://github.com/DataDog/integrations-core/blob/master/CONTRIBUTING.md#pull-request-title)  - [ ] Files changes must correspond to the primary purpose of the PR as described in the title (small unrelated changes should have their own PR)  - [ ] PR must have `changelog/` and `integration/` labels attached  - [ ] If the PR doesn't need to be tested during QA, please add a `qa/skip-qa` label.
https://github.com/datajoint/datajoint-python/pull/1080	1	readability	2023-04-13 16:40:50	Fix readability of tutorials in dark mode	This PR fixes the readability of the Jupyter Notebook outputs in the `Using the json type` tutorials. This resolves [issue 1078](https://github.com/datajoint/datajoint-python/issues/1078).     Below are the screenshots from local testing after applying changes to the code as seen in this PR:   Dark mode - the font in the tables previously appeared white, and was therefore, not readable. See linked issue above for images.    ![image](https://user-images.githubusercontent.com/52367253/220453197-d66cff9a-5480-4434-b677-a83b270ccd6c.png)    Light mode - there was no issue here previously and remains the same as before.    ![image](https://user-images.githubusercontent.com/52367253/220453430-972565ef-b422-43ef-ab75-e0eed51270ab.png)  
https://github.com/dbekaert/RAiDER/pull/599	1	readability	2023-09-26 20:17:46	Improves readability of tests/mocking related to GUNW workflow	See comments in #597     Uses correct HyP3 S3 prefix conventions and filename suffix within test patches to improve readability of what tests are mocking.
https://github.com/dbt-labs/metricflow/pull/1046	5	readability	2024-03-16 22:05:32	 Improve Readability of Rendered SQL Window Functions	### Description    This PR splits the rendering of window functions into multiple lines for better readability.      -     Before requesting review, please make sure you have:    1. read [the contributing guide](https://github.com/dbt-labs/metricflow/blob/main/CONTRIBUTING.md),    2. signed the [CLA](https://docs.getdbt.com/docs/contributor-license-agreements)    3. run `changie new` to [create a changelog entry](https://github.com/dbt-labs/metricflow/blob/main/CONTRIBUTING.md#adding-a-changelog-entry)     
https://github.com/deepchecks/deepchecks/pull/2512	5	readability	2023-05-11 09:55:25	Fixes #2454 Added Readability score and average sentence length text property	Fixes #2454     #### What does this implement/fix? Explain your changes.  I have added two new text properties:  ~~Automated Readability Index:  A score that represents the grade level required to understand the text.~~  - Average Sentence Length: Average number of words per sentence in the text.  - Readability Score: Returns a score as per the Flesch reading-ease test, higher scores indicate material that is easier to read whereas lower numbers mark texts that are more difficult to read.    After discussion, removed ARI based readability score and added the Flesch Reading-Ease score since that would work better for the short and long forms of texts.    Time is taken for the two metrics on the tweet dataset consisting of 4653 samples (in seconds):   - Average Sentence Length: 01.225178 seconds  ~~Automated Readability Index: 00.356193 seconds~~  - Readability Score: 01.428470 seconds    #### Any other comments?  Added the test to calculate these two new properties on the tweet test dataset and asserted with the first 10 results.
https://github.com/deepchecks/deepchecks/pull/2566	15	readability	2023-05-31 16:24:35	Imrpoved run times of Average Sentence Length and Readability Score	1. Massive improvements to properties calculation times:   Added sampling mechanism for some properties (improved times X3)  For all, added caching to sentence tokenizing, word tokenizing, and textblob functionality (improved times X10 for properties that share functionalities)  Change word tokenizing from nltk's word_tokenize to regex('W+'), improving times X10    2. Changed properties for-loop to run per-sample and not per-property  This simplifies the code, and also allowes caching mechanism not to blow-up  Required changing all properties to run on a single sample (further simplifying code)    3. Changed some function names to be more accurate    4. Updated select properties method to raise an error if include_properties or ignore_properties contain properties that are not in the default built-in list.
https://github.com/deepchecks/deepchecks/pull/2639	3	readability	2023-07-20 11:17:19	Rename Readability Score to Reading Ease	
https://github.com/Deepomatic/dmake/pull/395	1	readability	2019-07-19 16:46:11	Trace test commands for better readability	
https://github.com/DeepRegNet/DeepReg/pull/516	16	readability	2020-11-06 12:14:39	Issue #394: Add punctuation and alter linebreaks to improve docstring readability	# Description    Sentences were observed running into each other due to lack of line breaks.  Changes in this PR modify code comments to remove linebreaks and improve readability in RTD.    Fixes #394     ## Type of change    What types of changes does your code introduce to DeepReg? _Put an `x` in the boxes that  apply_    - [x] Documentation Update (fix or improvement on the documentation)    ## Checklist    _Put an `x` in the boxes that apply. You can also fill these out after creating the PR.  If you're unsure about any of them, don't hesitate to ask. We're here to help! This is  simply a reminder of what we are going to look for before merging your code._    - [x] I have        [installed pre-commit](https://deepreg.readthedocs.io/en/latest/contributing/setup.html)        using `pre-commit install` and formatted all changed files. If you are not        certain, run `pre-commit run --all-files`.  - [x] My commits' message styles matches        [our requested structure](https://deepreg.readthedocs.io/en/latest/contributing/commit.html),        e.g. `Issue # issue number>: detailed message`.  - [ ] I have updated the        [change log file](https://github.com/DeepRegNet/DeepReg/blob/main/CHANGELOG.md)        regarding my changes.  - [ ] I have added tests that prove my fix is effective or that my feature works  - [x] I have added necessary documentation (if appropriate)    ![394_RTD](https://user-images.githubusercontent.com/50738607/98275574-af306900-1f8c-11eb-9bbc-0b44671c27a5.jpg)    
https://github.com/deepspeedai/DeepSpeed/pull/895	4	readability	2021-04-07 20:08:59	improved readability + typos	Various readability/typos/cleanup fixes - no functionality change.    I tried to make `_save_checkpoint` a bit more readable, but the auto-formatter still makes things harder to read than it can be. 
https://github.com/deepspeedai/DeepSpeed/pull/1510	1	readability	2021-11-02 13:14:39	[code readability] pipe	This PR suggests a small improvement to code readability.    --------------------------    I was puzzling over this code:    https://github.com/microsoft/DeepSpeed/blob/85ce85dd5f4b18c0019a5121b06900e3a2c3933b/deepspeed/runtime/pipe/module.py#L381-L385    I had no idea this construct existed.     After reading up on it, it appears to be used incorrectly . The only point to using it is with `break`. (but it doesn't lead to a bug, just a harder to understand the code)    It's explained here https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops    So I'm proposing to remove the `else` control and just run the code in its branch normally since it *always* gets executed as there is no `break` statement.    And the objective of this code is to always be run if I understand it correctly. So let's make it loud and clear.    Here is a quick proof:  ```  for i in []:      print(i)  else:      print("loop did not finish via break") # runs!    for i in [0]:      print(i)  else:      print("loop did not finish via break") # runs!      for i in [0]:      print(i)      break  else:      print("loop did not finish via break") # does not run  ```    @tjruwase
https://github.com/delmic/odemis/pull/1381	1	readability	2020-03-23 10:54:57	Small changes to spot.py to improve readability and have consistent numpy behavior	Created a separate pull-request for this as requested.
https://github.com/delmic/odemis/pull/2212	2	readability	2022-09-12 14:38:05	csv export function refactor for readability of code	added test case for missing functionality
https://github.com/DeltaRCM/pyDeltaRCM/pull/12	8	readability	2020-01-28 00:08:18	Adding Mixins to enhance readability	This set of commits adds a few new mixin classes to the pyDeltaRCM project that are inherited by the more general Tools class.     The divisions are as follows:   - `water_tools` contains all the methods required for conducting water routing steps.  - `sed_tools` contains all methods for morphodynamics steps only.   - `shared_tools` contains methods shared across `water_tools` and `sed_tools`  - `init_tools` contains methods for setting up the model domain.  - `Tools` inherits all these classes, and then mixes them into the primary methods that include the main model processes for each time step.    This pull request closes #11 
https://github.com/demisto/demisto-sdk/pull/3866	1	readability	2023-12-18 12:31:11	[Pre-Commit] Improve Readability of Collected Files	## Description  Screenshot before:   img width="1629" alt="Screenshot 2023-12-14 at 10 24 17" src="https://github.com/demisto/demisto-sdk/assets/8832013/20fef195-7445-4e84-b334-90ee8c595e91">    Screenshot after:   img width="1555" alt="Screenshot 2023-12-14 at 10 26 38" src="https://github.com/demisto/demisto-sdk/assets/8832013/09837290-a51a-4b26-8923-330febc2ba3a">    
https://github.com/devchat-ai/devchat/pull/410	1	readability	2024-07-19 11:33:25	Refactor OpenAI response processing for better readability	
https://github.com/dimagi/commcare-cloud/pull/3266	1	readability	2019-09-18 16:34:26	Refactor formplayer ansible tasks logic for readability	##### SUMMARY  Followup PR to https://github.com/dimagi/commcare-cloud/pull/3253. Inspired in large part by this suggestion: https://github.com/dimagi/commcare-cloud/pull/3253#discussion_r325394831, but includes a couple other fix-ups.    ##### ENVIRONMENTS AFFECTED  all    ##### ISSUE TYPE  - Change Pull Request (invisible)    ##### COMPONENT NAME  formplayer (deploy / update-config)  
https://github.com/dimagi/commcare-hq/pull/24949	1	readability	2019-07-26 21:30:56	Tweak fix_corrupt_forms for readability	Space out printing garbled characters.  These sometimes run together, so stick a little spacing in there so you can see what's happening a little better    @kaapstorm @orangejenny 
https://github.com/dimagi/commcare-hq/pull/29450	1	readability	2021-04-01 18:03:30	Format meta file for human readability	## Summary  Format meta file for human readability    ## Feature Flag     If this is specific to a feature flag, which one?      ## Product Description     For non-invisible changes, describe user-facing effects.      ## Safety Assurance    - [x] Risk label is set correctly  - [x] All migrations are backwards compatible and won't block deploy  - [x] The set of people pinged as reviewers is appropriate for the level of risk of the change  - [x] If QA is part of the safety story, the "Awaiting QA" label is used  - [x] I have confidence that this PR will not introduce a regression for the reasons below    ### Automated test coverage       Identify the related test coverage and the tests it would catch      ### QA Plan        - Describe QA plan that along with automated test coverages proves this PR is regression free  - Link to QA Ticket       ### Safety story  Only affects a management command    ### Rollback instructions        If this PR follows standards of revertability, check the box below.  Otherwise replace it with detailed instructions or reasons a rollback is impossible.       - [x] This PR can be reverted after deploy with no further considerations   
https://github.com/dimagi/commcare-hq/pull/29653	1	readability	2021-05-06 13:31:07	Improve readability of import_app	## Summary          Provide a link to the ticket or document which prompted this change,      Describe the rationale and design decisions.     I was trying to understand this and felt overwhelmed by everything going on in this method. I still don't understand every responsibility of this method so hopefully reviewers can help suggest better names/organization to improve readability.     Additionally if this feels like a downgrade I'm curious to hear why.   ## Feature Flag     If this is specific to a feature flag, which one?      ## Product Description     For non-invisible changes, describe user-facing effects.      ## Safety Assurance    - [x] Risk label is set correctly  - [x] All migrations are backwards compatible and won't block deploy  - [x] The set of people pinged as reviewers is appropriate for the level of risk of the change  - [x] If QA is part of the safety story, the "Awaiting QA" label is used  - [x] I have confidence that this PR will not introduce a regression for the reasons below    ### Automated test coverage       Identify the related test coverage and the tests it would catch      ### QA Plan        - Describe QA plan that along with automated test coverages proves this PR is regression free  - Link to QA Ticket     No QA  ### Safety story      Describe any other pieces to the safety story including  local testing, why the change is inherently safe, and/or plans to limit the blast radius of a defect.     App manager automated tests.  ### Rollback instructions        If this PR follows standards of revertability, check the box below.  Otherwise replace it with detailed instructions or reasons a rollback is impossible.       - [x] This PR can be reverted after deploy with no further considerations   
https://github.com/dimagi/commcare-hq/pull/31968	2	readability	2022-08-15 16:05:10	Add some newlines for readability	## Technical Summary    While I was digging into the code around the project performance reports, I  added some newlines to make it easier for me to read.    I figured I might as well PR my changes for the next person.    These changes do not affect functionality at all.      ## Feature Flag  N/A    ## Safety Assurance    ### Safety story    No code changes. I have literally added some newlines, and pulled out the definition of a namedtuple to make a class definition more readable.      ### Automated test coverage    No code changes.      ### QA Plan    No code changes.      ### Rollback instructions        If this PR follows standards of revertability, check the box below.  Otherwise replace it with detailed instructions or reasons a rollback is impossible.       - [x] This PR can be reverted after deploy with no further considerations    ### Labels & Review  - [x] Risk label is set correctly  - [x] The set of people pinged as reviewers is appropriate for the level of risk of the change  
https://github.com/dirac-institute/sorcha/pull/764	2	readability	2024-01-05 14:11:39	Small change to getModuleRNG for readability	A very small change to make getModuleRNG more readable. Breaks the `seed_offset` into two lines. The first does the hashing (and uses the default encoding). The second maps the hashed value to an integer (making the `base` argument explicit).    Also adds a very small change from running `black`.    ## Review Checklist for Source Code Changes    - [ ] Does pip install still work?  - [ ] Have you written a unit test for any new functions?  - [x] Do all the units tests run successfully?  - [ ] Does Sorcha run successfully on a test set of input files/databases?  - [x] Have you used black on the files you have updated to confirm python programming style guide enforcement?  
https://github.com/DIRACGrid/DIRAC/pull/6505	9	readability	2022-11-07 12:32:52	[integration] simplify if-statements for readability and performance	Tried to combine related "issues"  together.  This PR addresses readability and "performance" issues for `if` statements.      BEGINRELEASENOTES  *ConfigurationSystem  FIX: simplifying `if` statements for returning bools    *DataManagementSystem  FIX: simplifying `if` statements for returning bools  FIX: use `not in` instead of `not ... in`  FIX: simplify loop with `any` call    *FrameworkSystem  FIX: simplifying `if` statements for setting bools  FIX: simplified if statement for checking list/string len    *Resources  FIX: simplifying `if` statements for setting bools    *TransformationSystem  FIX: simplifying `if` statements [unneeded `not`]  FIX: simplified if statement for checking list/string len    ENDRELEASENOTES  
https://github.com/django-cms/django-cms/pull/7503	2	readability	2023-02-13 10:19:50	fix: Improved code readability by removing unnecessary else statement.	## Description  Improved code readability by removing unnecessary else statement.      If this is a security issue stop right here and follow our documentation:  http://docs.django-cms.org/en/latest/contributing/development-policies.html#reporting-security-issues       ## Related resources        Add here links to existing issues or conversation from GitHub  or any other resource.       * #...  * #...    ## Checklist        Please check the following items before submitting, otherwise,  your pull request will be closed.    Use 'x' to check each item: [x] I have ...       * [x] I have opened this pull request against ``develop``  * [x] I have added or modified the tests when changing logic  * [x] I have followed [the conventional commits guidelines](https://www.conventionalcommits.org/) to add meaningful information into the changelog  * [x] I have read the [contribution guidelines ](https://github.com/django-cms/django-cms/blob/develop/CONTRIBUTING.rst) and I have joined #workgroup-pr-review on [Slack](https://www.django-cms.org/slack) to find a  pr review buddy  who is going to review my pull request.  
https://github.com/django-commons/django-debug-toolbar/pull/1850	1	readability	2023-10-27 09:34:46	pyproject.toml: Work on the readability of ruff settings	# Description    pyproject.toml: Work on the readability of ruff settings    Please include a summary of the change and which issue is fixed. Please also  include relevant motivation and context. Your commit message should include  this information as well.    Fixes # (issue)    # Checklist:    - [x] I have added the relevant tests for this change.  - [ ] I have added an item to the Pending section of ``docs/changes.rst``.  
https://github.com/django/django/pull/18316	2	readability	2024-06-27 11:08:15	Fixed #35564 -- Improved readability of subclass identification in admin and auth checks	# Trac ticket number    ticket-35564    # Branch description    `_subclass_index` and `_contains_subclass` behave the same, apart from the return value. However, because of the error handling, and the delegation thereof in `_contains_subclass` it's somewhat hard to confirm at first glance.    This rewrite utilises [`contextlib.supress`](https://docs.python.org/3/library/contextlib.html#contextlib.suppress) to make the flow of the code easier to understand.    # Checklist  - [x] This PR targets the `main` branch.    Backports will be evaluated and done by mergers, when necessary.    - [x] The commit message is written in past tense, mentions the ticket number, and ends with a period.  - [x] I have checked the "Has patch" ticket flag in the Trac system.  - [ ] I have added or updated relevant tests.  - [ ] I have added or updated relevant docs, including release notes if applicable.  - [ ] I have attached screenshots in both light and dark modes for any UI changes.  
https://github.com/dmlc/dgl/pull/1025	1	readability	2019-12-01 03:25:52	[Doc] Transformer tutorial, edit for readability	Edit pass for grammar and style
https://github.com/dmlc/dgl/pull/1031	1	readability	2019-12-17 06:14:18	[Doc] Tree-LSTM in DGL, edit pass for readability	Edit for grammar and style.   How about deleting the last line? "Besides, you..." It needs a transition or some context.
https://github.com/dmlc/dgl/pull/4446	2	readability	2022-09-14 05:36:19	[Readability] Auto fix setup.py and update-version.py	## Description  Auto fix update-version.py to conform to the PEP 8 style guide.    ## Checklist  Please feel free to remove inapplicable items for your PR.  - [x] The PR title starts with [$CATEGORY] (such as [NN], [Model], [Doc], [Feature]])  - [x] Changes are complete (i.e. I finished coding on this PR)  - [ ] All changes have test coverage  - [ ] Code is well-documented  - [ ] To the best of my knowledge, examples are either not affected by this change,        or have been fixed to be compatible with this change  - [ ] Related issue is referred in this PR  - [ ] If the PR is for a new model/paper, I've updated the example index [here](../examples/README.md).    ## Changes     You could use following template  - [ ] Feature1, tests, (and when applicable, API doc)  - [ ] Feature2, tests, (and when applicable, API doc)     
https://github.com/dmlc/dgl/pull/4461	1	readability	2022-08-30 10:31:03	[Readability] Auto fix view.py.	## Description  Auto fix view.py to conform to the PEP 8 style guide.       Brief description. Refer to the related issues if existed.  It'll be great if relevant reviewers can be assigned as well.     ## Checklist  Please feel free to remove inapplicable items for your PR.  - [x] The PR title starts with [$CATEGORY] (such as [NN], [Model], [Doc], [Feature]])  - [x] Changes are complete (i.e. I finished coding on this PR)  - [ ] All changes have test coverage  - [ ] Code is well-documented  - [ ] To the best of my knowledge, examples are either not affected by this change,        or have been fixed to be compatible with this change  - [ ] Related issue is referred in this PR  - [ ] If the PR is for a new model/paper, I've updated the example index [here](../examples/README.md).    ## Changes     You could use following template  - [ ] Feature1, tests, (and when applicable, API doc)  - [ ] Feature2, tests, (and when applicable, API doc)     
https://github.com/dmlc/dgl/pull/4534	1	readability	2022-09-26 06:50:35	[Readability] Polish udf.py	## Description     Brief description. Refer to the related issues if existed.  It'll be great if relevant reviewers can be assigned as well.     ## Checklist  Please feel free to remove inapplicable items for your PR.  - [x] The PR title starts with [$CATEGORY] (such as [NN], [Model], [Doc], [Feature]])  - [x] Changes are complete (i.e. I finished coding on this PR)  - [x] All changes have test coverage  - [x] Code is well-documented  - [x] To the best of my knowledge, examples are either not affected by this change,        or have been fixed to be compatible with this change  - [ ] Related issue is referred in this PR  - [ ] If the PR is for a new model/paper, I've updated the example index [here](../examples/README.md).    ## Changes     You could use following template  - [ ] Feature1, tests, (and when applicable, API doc)  - [ ] Feature2, tests, (and when applicable, API doc)     
https://github.com/dmlc/dgl/pull/6451	1	readability	2023-10-16 09:47:45	[Misc] Rename the variables  in NeighborSampler for better readability.	## Description     Brief description. Refer to the related issues if existed.  It'll be great if relevant reviewers can be assigned as well.     ## Checklist  Please feel free to remove inapplicable items for your PR.  - [ ] The PR title starts with [$CATEGORY] (such as [NN], [Model], [Doc], [Feature]])  - [ ] I've leverage the [tools](https://docs.google.com/document/d/1iHyj7zlmygKSk5gBPsqIqL5ASPzJSPREaNT_QdsiYA4/edit) to beautify the python and c++ code.  - [ ] The PR is complete and small, read the [Google eng practice (CL equals to PR)](https://google.github.io/eng-practices/review/developer/small-cls.html) to understand more about small PR. In DGL, we consider PRs with less than 200 lines of core code change are small (example, test and documentation could be exempted).  - [ ] All changes have test coverage  - [ ] Code is well-documented  - [ ] To the best of my knowledge, examples are either not affected by this change, or have been fixed to be compatible with this change  - [ ] Related issue is referred in this PR  - [ ] If the PR is for a new model/paper, I've updated the example index [here](../examples/README.md).    ## Changes     You could use following template  - [ ] Feature1, tests, (and when applicable, API doc)  - [ ] Feature2, tests, (and when applicable, API doc)     
https://github.com/dmwm/CRABServer/pull/7716	4	readability	2023-07-06 08:37:22	RUCIO_Transfers.py: Improving readability	This PR replaces [#7693](https://github.com/dmwm/CRABServer/pull/7693) to focus on readability.    - The separation between rucio replica and the metadata we use for crab rest. The metadata is called fileDoc.  - Change the return variable structure from prepare().  - Rename update to rest method to reflect state change.  - Remove `initReplicasInContainer()` and use `populateLFN2DatasetMap()` directly where it needed.  - remove "skip monitoring lock for the files in the same run.", the useless statement.
https://github.com/dowjones/tokendito/pull/35	14	readability	2021-04-19 16:56:04	Improve code readability	
https://github.com/Drakkar-Software/OctoBot-Commons/pull/139	2	readability	2020-12-01 22:22:53	improve error container check readability	
https://github.com/drivendataorg/cookiecutter-data-science/pull/409	1	readability	2025-03-05 15:42:45	Add PyTest IDs for better readability and filtering	This small PR adds dynamically generated IDs for the config parameters. This makes it immediately clear which configuration failed and [allows for filtering with `pytest -k EXPRESSION`](https://docs.pytest.org/en/6.2.x/usage.html#specifying-tests-selecting-tests). Ex: To only run the tests using conda and mkdocs you can do `pytest -k "conda and mkdocs"`.    ```python  def pytest_generate_tests(metafunc):      # setup config fixture to get all of the results from config_generator      def make_test_id(config): # NEW          return f"{config['environment_manager']}-{config['dependency_file']}-{config['docs']}"            if "config" in metafunc.fixturenames:          metafunc.parametrize(              "config",              config_generator(metafunc.config.getoption("fast")),              ids=make_test_id # NEW          )  ```    Before:  ![GatScreen_2024-12-30_17 39 15@2x](https://github.com/user-attachments/assets/bc527c50-15c3-4dda-a3c7-0b1891ee9a1f)    After:  ![GatScreen_2024-12-30_17 44 33@2x](https://github.com/user-attachments/assets/c82c25a8-51b4-4b2c-b25a-65b8b260ef92)      (Screenshots from VSCode Test Explorer)    _The changes to `pyproject.toml` and `.gitignore` are small changes for my local development which you're free to add or ignore._
https://github.com/dstl/Stone-Soup/pull/549	2	readability	2021-12-10 16:09:51	Improve readability and limit size of repr output	This change attempts to improve readability of repr output by lining up rows of NumPy arrays, separating objects with a new line as opposed to just a comma, and showing easily what is nested inside what by use of extra indentation.    Additionally, [reprlib](https://docs.python.org/3/library/reprlib.html) is used to help impose limits on output size.    In response to #474 
https://github.com/dynamiqs/dynamiqs/pull/21	3	readability	2023-03-21 10:23:22	Improve readability of mesolve/odeint	Here is a small PR with a few small modifications on mesolve/odeint before we move on to bigger things. I am building on https://github.com/PierreGuilmin/torchqdynamics/pull/19 and also a bit on https://github.com/PierreGuilmin/torchqdynamics/pull/16. The rationale behind the changes is:    - Added `expect` function to allow batching over `y0`.  - Modified the `times` definition in `fixed_odeint` for robustness. If `dt = 0.099999` and `t_save[-1] =1`, one too many time step was defined by the previous solution.  - Added `save_state` argument all the way up in `mesolve` definition.  - Added a star * in `mesolve` definition to force keyword arguments.  - Added typing in `mesolve` and `odeint` with the latest Python 3.10 format (e.g. `list` instead of `typing.List`, and `x | y` instead of `Union[x,y]`).   - Finally, on a more controversial topic (sorry I'm annoying @abocquet), I removed the `AutoDiffAlgorithm` enumeration, because I think it was cluttering the readability for not much gained. Plus the user has to import and define an `AutoDiffAlgorithm` upon launching `mesolve` which I think is not a good thing. Unless I'm missing something you intended, I would argue to remove it.
https://github.com/dynamiqs/dynamiqs/pull/610	1	readability	2024-06-21 08:32:59	Small timearray improvements (renaming and readability)	Small PRs with a few various things on time-array  - the renaming of `new_shape` to `shape` is to match JAX/Numpy API  - splitting assignement vs class initialisation is just a proposition for readability  - replace `np.dtype` with `jnp.dtype` to uniformize with `QArray`  - implement `__neg__` in the base clas
https://github.com/elastic/detection-rules/pull/4299	2	readability	2024-12-13 13:33:48	Enhance Readability of validation check failures	    Thank you for your interest in and contributing to Detection Rules!  There are a few simple things to check before submitting your pull request  that can help with the review process. You should delete these items  from your submission, but they are here to help bring them to your attention.     # Pull Request    *Issue link(s)*: - https://github.com/elastic/detection-rules/issues/3195          Add Related Issues / PRs for context. Eg:      Related to elastic/repo#999      Resolves #123    If there is no issue link, take extra care to write a clear summary and label the PR just as you would label an issue to give additional context to reviewers.       ## Summary - What I changed    - Have a static error message which is a unique string and describe the error  - The details of the error are logged properly before we throw the error and the format of the error details are outside of ValueError scope          Summarize your PR. Animated gifs are . Code snippets are   . Examples & screenshots are        ## How To Test    - Simulated a Local validation Failure   - Clear log messages and trace are simulated.     ```console  ===================================================================== FAILURES =====================================================================  _____________________________________________ TestAlertSuppression.test_eql_non_sequence_support_only ______________________________________________  tests/base.py:85: in setUp      self.fail(f'Rule loader failure: \\n{RULE_LOADER_FAIL_MSG}')  E   AssertionError: Rule loader failure:   E   Error in both stack and integrations checks  -------------------------------------------------------------- Captured stdout setup ---------------------------------------------------------------  Stack Error Trace: Error at line:3,column:4  Field not recognized for authentication event  sequence by host.id, source.ip, user.name with maxspan=15s    [ authentication where host.os.type == "linux" and      event.actionS in ("ssh_login", "user_login") and event.outcome == "failure" and     ^^^^^^^^^^^^^  stack: 8.18.0, beats: 8.16.1,ecs: 8.16.0, endgame: 8.4.0  Integrations Error Trace: Error at line:3,column:4  Field not recognized for authentication event  sequence by host.id, source.ip, user.name with maxspan=15s    [ authentication where host.os.type == "linux" and      event.actionS in ("ssh_login", "user_login") and event.outcome == "failure" and     ^^^^^^^^^^^^^  stack: 8.12.0, integration: None,ecs: 8.11.0, package: system, package_version: 1.63.0  Error loading rule in /Users/shashankks/elastic_workspace/detection-rules/rules/linux/credential_access_potential_linux_ssh_bruteforce_external.toml  ================================================================= warnings summary =================================================================  .venv/lib/python3.12/site-packages/_pytest/config/__init__.py:1276  .venv/lib/python3.12/site-packages/_pytest/config/__init__.py:1276    /Users/shashankks/elastic_workspace/detection-rules/.venv/lib/python3.12/site-packages/_pytest/config/__init__.py:1276: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: typeguard      self._mark_plugins_for_rewrite(hook)    -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html  ============================================================= short test summary info ==============================================================  FAILED tests/test_all_rules.py::TestAlertSuppression::test_eql_non_sequence_support_only - AssertionError: Rule loader failure:   ============================================== 1 failed, 91 passed, 63 skipped, 2 warnings in 13.67s ===============================================  (.venv)   detection-rules on   issue-3195 [$!?] is  v0.3.6 via  v3.12.5 (.venv) on     shashank.suryanarayana@elastic.co took 14s       ```    - On no failures all Unit test should pass.           Some examples of what you could include here are:    * Links to GitHub action results for CI test improvements    * Sample data before/after screenshots (or short videos showing how something works)    * Copy/pasted commands and output from the testing you did in your local terminal window    * If tests run in GitHub, you can or , respectively, to indicate tests will run in CI    * Query used in your stack to verify the change       ## Checklist       Delete any items that are not applicable to this PR.      - [x] Added a label for the type of pr: `bug`, `enhancement`, `schema`, `maintenance`, `Rule: New`, `Rule: Deprecation`, `Rule: Tuning`, `Hunt: New`, or `Hunt: Tuning` so guidelines can be generated  - [ ] Added the `meta:rapid-merge` label if planning to merge within 24 hours  - [ ] Secret and sensitive material has been managed correctly  - [ ] Automated testing was updated or added to match the most common scenarios  - [ ] Documentation and comments were added for features that require explanation    ## Contributor checklist    - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)?  - Have you followed the [contributor guidelines](https://github.com/elastic/detection-rules/blob/main/CONTRIBUTING.md)?  
https://github.com/eldraco/domain_analyzer/pull/9	1	readability	2022-02-01 20:14:32	improve documentation readability	
https://github.com/Election-Tech-Initiative/electionguard-python/pull/114	27	readability	2020-07-30 17:06:01	Refactor to optimize output data for readability / usability	### Issue    Fixes #90    Fixes #91   Fixes #92  Fixes #93     ### Description    This pull request is going to contain several issues. This is not a recommended approach but due to the sweeping changes across classes and the dependency of the issues This is an exception. The recommendation will also be a **rebase** of this PR instead of a squash. The goal of this PR is to provide better output format and to ensure more information for individuals using just the raw data.     **Inverse of G**  Inverse of G was originally kept in to be a constant of the election but since G is provided, this was seen as excess data. This was removed to be replaced by the calculation in the single test location.    **Renaming proofs**  The proofs are exported in json with very little information. The goal is not to just have the named items in the tuple but a little more information. The removal of `NamedTuple`s to frozen `dataclasses` became necessary to include the string data without complicated constructor sequence. An alternate version was considered with a NamedTuple that just included the usage and the name was drawn from the serialization.     **Rename algebraic variables**  Refactor Elgamel Ciphertext, Constants, Ballots, and Tallies to use more understandable language on outputs for non technical users.     ### Testing  - This is best checked by running the full test suite.     ### Checklist  Please review the [guidelines for contributing](../CONTRIBUTING.md) to this repository.    - [x]  **CONSIDER** adding a unit test if your PR resolves an issue.  - [x]   **DO** check open PR's to avoid duplicates.  - [x]   **DO** keep pull requests small so they can be easily reviewed.  - [x]   **DO** build locally before pushing.  - [x]   **DO** make sure tests pass.  - [x]   **DO** make sure any new changes are documented.  - [x]   **DO** make sure not to introduce any compiler warnings.  - [x]  **AVOID** breaking the continuous integration build.  - [x]  **AVOID** making significant changes to the overall architecture.    Thank you!
https://github.com/encode/httpcore/pull/126	2	readability	2020-08-02 10:35:13	Improve readability of forward and tunnel implementations	Small internal refactoring to avoid usage of index-based access such as `url[1]` or `response[2]`, hopefully making the HTTP proxy implementation even easier to read. :-)
https://github.com/equinor/ert/pull/1942	1	readability	2021-08-04 13:54:40	Adjust _responds2records function readability	While working on the #1710 I realized that the responds2records function looked like a rough draft and slightly hard to read through. So I adjust it  
https://github.com/equinor/ert/pull/3837	1	readability	2022-08-31 19:11:28	Increase readability of rng-config test	**Issue**  Closes #2556     **Approach**  We introduce a new variable representing the dict passed to rng config to increase clarity of the test in question.    ## Pre review checklist    - [X] Added appropriate release note label  - [X] PR title captures the intent of the changes, and is fitting for release notes.  - [X] Commit history is consistent and clean, in line with the [contribution guidelines](https://github.com/equinor/ert/blob/main/CONTRIBUTING.md).    Adding labels helps the maintainers when writing release notes. This is the [list of release note labels](https://github.com/equinor/ert/labels?q=release-notes).  
https://github.com/equinor/ert/pull/7220	1	readability	2024-02-20 14:06:22	Improve readability of stateful storage test	Tried to document the storage test better.    Also made the number of fields variable which makes for better shrinking and faster execution.    - [x] PR title captures the intent of the changes, and is fitting for release notes.  - [x] Added appropriate release note label  - [x] Commit history is consistent and clean, in line with the [contribution guidelines](https://github.com/equinor/ert/blob/main/CONTRIBUTING.md).  - [x] Make sure tests pass locally (after every commit!)    ## When applicable  - [ ] **When there are user facing changes**: Updated documentation  - [ ] **New behavior or changes to existing untested code**: Ensured that unit tests are added (See [Ground Rules](https://github.com/equinor/ert/blob/main/CONTRIBUTING.md#ground-rules)).  - [ ] **Large PR**: Prepare changes in small commits for more convenient review  - [ ] **Bug fix**: Add regression test for the bug  - [ ] **Bug fix**: Create Backport PR to latest release        Adding labels helps the maintainers when writing release notes. This is the [list of release note labels](https://github.com/equinor/ert/labels?q=release-notes).     
https://github.com/equinor/webviz-config/pull/241	13	readability	2020-07-03 11:23:01	Improve readability and design of auto-built documentation	Closes #232.
https://github.com/equinor/webviz-ert/pull/335	2	readability	2022-07-27 10:13:23	Rename variables in update_response_overview_plot for readability	**Issue**  Resolves #280    
https://github.com/equinor/webviz-subsurface/pull/455	3	readability	2020-10-28 16:56:49	Extend column name obs->observed for readability	This will prepare webviz for a possible upcoming change in  scripts generating the input to the rft plotter plugin.    This change should be backwards compatible.    *Insert a description of your pull request (PR) here, and check off the boxes below when they are done.*    ---    ### Contributor checklist    - [ ] :tada: This PR closes #ISSUE_NUMBER.  - [ ] :scroll: I have broken down my PR into the following tasks:     - [ ] Task 1     - [ ] Task 2  - [ ] :robot: I have added tests, or extended existing tests, to cover any new features or bugs fixed in this PR.  - [ ] :book: I have considered adding a new entry in `CHANGELOG.md`, and added it if should be communicated there.  
https://github.com/evennia/ainneve/pull/137	3	readability	2022-12-29 20:54:20	Improve readability of town map	Reduces the amount of empty link space, changes "road rooms" to display differently from link nodes, and increases range of sight back to 2 nodes.
https://github.com/EvolvingLMMs-Lab/Otter/pull/190	11	readability	2023-07-06 04:40:00	[Feat/Train] reformat training files for better readability and fix potential args issues	1. update converting precision files for better use.  2. update image/video demo to support bf16/fp16 precision inference.  3. update data related args, support longer srg/tgt max length.  4. reformat training files and add back args to avoid errors in training.  5. remove unused args `cross_every_n_layers`.  
https://github.com/ExcitedStates/qfit-3.0/pull/75	3	readability	2020-06-30 18:51:40	Minor tweaks to for code readability	I cleaned up some minor things in the code, including some variable naming and comments text, and simplified an area with duplicated code.
https://github.com/fairlearn/fairlearn/pull/228	1	readability	2020-01-08 16:28:18	Perf tests: readability improvements & more metrics	The new metrics will show the overhead added by fairlearn. #225     Signed-off-by: Roman Lutz  rolutz@microsoft.com>
https://github.com/FangjinhuaWang/PatchmatchNet/pull/32	2	readability	2021-05-23 07:17:50	Improve readability of patchmatch.py	Improve readability of patchmatch.py by adding type annotations and reformatting file with Python `black`.
https://github.com/feast-dev/feast/pull/1667	4	readability	2021-06-25 22:19:23	Grouped inferencing statements together in apply methods for easier readability	Signed-off-by: David Y Liu  davidyliuliu@gmail.com>        Thanks for sending a pull request!  Here are some tips for you:    1. Ensure that your code follows our code conventions: https://github.com/feast-dev/feast/blob/master/CONTRIBUTING.md#code-style--linting  2. Run unit tests and ensure that they are passing: https://github.com/feast-dev/feast/blob/master/CONTRIBUTING.md#unit-tests  3. If your change introduces any API changes, make sure to update the integration tests scripts here: https://github.com/feast-dev/feast/tree/master/sdk/python/tests or https://github.com/feast-dev/feast/tree/master/sdk/go  4. Make sure documentation is updated for your PR!  5. Make sure you have signed the CLA https://cla.developers.google.com/clas         **What this PR does / why we need it**:  Made inferencing methods more consistent with each other. Grouped inferencing statements together in apply methods for easier readability    **Which issue(s) this PR fixes**:      *Automatically closes linked issue when PR is merged.  Usage: `Fixes # issue number>`, or `Fixes (paste link of issue)`.     Fixes #    **Does this PR introduce a user-facing change?**:      If no, just write "NONE" in the release-note block below.  If yes, a release note is required:  Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string "action required".    For more information about release notes, see kubernetes' guide here:  http://git.k8s.io/community/contributors/guide/release-notes.md     ```release-note  None  ```  
https://github.com/FedML-AI/FedML/pull/2035	10	readability	2024-04-24 18:28:00	[Deploy] Refine Database Readability; Format Code.	
https://github.com/FHIR/genomics-operations/pull/64	1	readability	2023-06-21 15:24:26	Added comments to vcf2json for readability	No functional changes, just added comments and moved the parameter checks to their own function.
https://github.com/firebase/firebase-functions-python/pull/51	12	readability	2023-03-21 17:01:04	refactor:  improve types readability + CI job for formatting	
https://github.com/flairNLP/fundus/pull/129	1	readability	2023-03-31 08:28:07	Improve readability for _batched_fetch()	
https://github.com/flairNLP/fundus/pull/365	1	readability	2024-02-23 12:06:08	Add a comment for readability in `BaseParser`	
https://github.com/flyteorg/flytekit/pull/1642	1	readability	2023-05-16 22:33:15	Change variable names to improve readability	# TL;DR    The name is not accurate. Rename it to improve readability  After `load_packages_and_modules`, the entities become **registrable**.    ## Type   - [ ] Bug Fix   - [ ] Feature   - [ ] Plugin   - [x] Doc    
https://github.com/fract4d/gnofract4d/pull/61	104	readability	2020-03-10 05:49:31	Add readability to the Python code	Some style errors fixes following PEP8 rules. Also It gives more code style consistency.
https://github.com/freedomofpress/securedrop/pull/5447	1	readability	2020-08-13 15:21:22	Fix Tor Browser capitalisation for readability (source interface)	## Status    Ready for review    ## Description of Changes    When reviewing the usage of user-facing strings borrowed from the Tor Browser ([context][ctx]), I noticed that sometimes the English source would read `Tor browser` (lowercase). The three occurrences in this PR belong to the _source_ interface.    I propose using `Tor Browser` instead, primarily to make the instructions more readable to _sources_.      [ctx]: https://forum.securedrop.org/t/spanish-es-locales-for-securedrop-in-relation-to-tor-browser/1352/4?u=gonzalo-bulnes    **Considerations**    - "Tor browser" has legitimate uses. While "Tor Browser" the name of one such product, you could browse the Tor network with a different browser.  - However, the three sets of instructions make reference specifically to _the_ Tor Browser.  - Using consistently "Tor Browser" as a product name takes advantage of our sensitivity to brands in order to reduce cognitive load of the _sources_. ("Which browser is this about? Ah! _The_ Tor Browser, I've seen that name!")  - There are other instances where "Tor Browser" is written as a product name, so this would also increase consistency.    ## Testing    - [ ] Strings don't change length so this change should be very straightforward as far as the UI is concerned.  - [ ] Check for misspellings.     ## Deployment     - [ ] These strings are internationalized. _I didn't modify the `.pot` file because I assumed strings would be extracted following a dedicated process._
https://github.com/freedomofpress/securedrop/pull/5448	11	readability	2020-08-18 21:52:09	Minor fix product names capitalisation for readability	## Status    Ready for review    ## Description of Changes    This is a follow up on https://github.com/freedomofpress/securedrop/pull/5447 which fixes the case of the following product names: Tor, Tor Browser, Tails, SSH, Apache.    As far as I can tell, none of these strings are internationalized.  Some of them are public-facing (e.g. docs), others are code or configuration comments, other would likely be visible to _admins_ (comments of iptables rules).    **Considerations**    - Sometimes, specially in configuration comments, names could arguably refer to the executable name **or** the program name (e.g. `# start ssh service`). I opted for the comment to say `# start SSH service` when I saw that some comments would say `apache` (`Apache`) even when the executable name was actually `apache2`.    - In general, I assumed that comments were for human consumption and biased towards using product names when both the product and the executable name were an option.    - I kept commits granular in order to allow for cherry-picking. ~~(In particular, I'm not sure that touching the _iptables_ rules to fix the comment case is an obviously good idea auditability-wise, so I kept those changes in three separate commits.)~~    ## Testing    - [ ] Make sure nothing was modified that results in commands being executed differently. ~~(iptables comments are arguably part of the command!)~~  - [ ] Read the comments and documentation text to confirm that they make sense.    ## Deployment    - ~~:warning: If there are processes (or documentation) that depend on the exact wording/case of iptables comments, please call it out.~~   - [ ] Two strings are internationalized. I didn't modify the .pot file because I assumed strings would be extracted following a dedicated process.    ## Checklist    ### If you made changes to the server application code:    - [ ] Linting (`make lint`)  pass in the development container (I didn't run it locally)  - [x] Tests (`make test`) pass in the development container    ### If you made changes to `securedrop-admin`:    - [x] Linting and tests (`make -C admin test`) pass in the admin development container    ### If you made changes to the system configuration:    - [ ] [Configuration tests](https://docs.securedrop.org/en/latest/development/testing_configuration_tests.html) pass (I didn't run it locally)    ### If you made non-trivial code changes:    _See callout in the **deployment** section._    ### If you made changes to documentation:    - [x] Doc linting (`make docs-lint`) passed locally  
https://github.com/freqtrade/freqtrade/pull/2834	1	readability	2020-02-02 10:12:57	better readability on sharpe ratio loss method	No change of logic here, just updated hyperopt loss sharpe loss method for better readability to make it more consistent with the final version of sharpe loss daily loss method.
https://github.com/fuzzylabs/matcha/pull/47	1	readability	2023-04-19 12:28:41	[RPD-62] Update messages display when there's a existing .matcha directory to improve readability	This PR updates the message for when there's already an existing .matcha directory improve readability.    Previously, if a `.matcha` already exist when running `matcha provision`, a message saying `"The following resources are already configured for provisioning"` and ask user where they would like to override the configuration. The new updated message aim to provided a clearer idea to the users on what will happened to the existing file by asking `"If you choose to override the existing configuration, the existing configuration will be deleted. Otherwise, the configuration will be reused.\\n\\nDo you want to override the existing configuration?"`    ## Checklist    Please ensure you have done the following:    * [x] I have read the [CONTRIBUTING](https://github.com/fuzzylabs/matcha/blob/main/CONTRIBUTING.md) guide.  * [x] I have updated the documentation if required.  * [x] I have added tests which cover my changes.    ## Type of change    Tick all those that apply:    * [ ] Bug Fix (non-breaking change, fixing an issue)  * [ ] New feature (non-breaking change to add functionality)  * [ ] Breaking change (fix or feature that would cause existing functionality to change)  * [x] Other (add details above)  
https://github.com/fuzzylabs/MindGPT/pull/47	3	readability	2023-07-28 10:27:32	[MIN-72] Create function to calculate readability score	This PR kick-start the development of our metric service by integrating a feature to compute the readability of a piece of text. It uses the [Flesch-Kincaid readability](https://en.wikipedia.org/wiki/Flesch%E2%80%93Kincaid_readability_tests) score with the help of the [textstat](https://github.com/textstat/textstat) module.    What's new:  - We've added a new `monitoring` folder at the project root, housing the `metric_service.py` script.  - Within `metric_service.py,` there's a new function named `compute_readability()`. This function takes a single argument - the text for which readability needs to be analysed, and it returns a score ranging from 1 to 100.  - A corresponding test has been implemented for the `compute_readability()` function.
https://github.com/fuzzylabs/MindGPT/pull/69	6	readability	2023-08-29 10:37:34	[MIN-101] Add readability score threshold	This PR implements a readability score threshold detection. If user agrees to the data sharing consent, whenever a readability score is below a threshold, the score, question and response will automatically be sent to our metric service and store them in the metric database. Furthermore, a message below the response will also be displayed in streamlit when the score is below our set threshold.    A new table is created in the metric database `readability_threshold` for storing the data that triggered the readability threshold. The metric service is updated to send and query this table.    Minor refactoring is also done on the validate data functions in `metric_service.py` to reduce code duplication.    Tests are also updated.
https://github.com/galaxyproject/galaxy/pull/17835	1	readability	2024-03-25 19:24:41	[24.0] Minor refactor of query building logic for readability	follow-up to #17817      ## How to test the changes?  (Select all options that apply)  - [ ] I've included appropriate [automated tests](https://docs.galaxyproject.org/en/latest/dev/writing_tests.html).  - [ ] This is a refactoring of components with existing test coverage.  - [ ] Instructions for manual testing are as follows:    1. [add testing steps and prerequisites here if you didn't write automated tests covering all your changes]    ## License  - [x] I agree to license these and all my past contributions to the core galaxy codebase under the [MIT license](https://opensource.org/licenses/MIT).  
https://github.com/gem/oq-engine/pull/9991	1	readability	2024-09-30 08:31:12	ARISTOTLE: Slightly improve readability in reading finite-fault data when the shakemap is missing	
https://github.com/GenericMappingTools/pygmt/pull/751	1	readability	2020-12-19 15:23:45	Improve the readability of the grdview function	**Description of proposed changes**  When I worked on PR #750 based on the implemention of the `grdview` function, I found that the `grdview` codes are a little difficult to understand. The main reason is that `contextlib.ExitStack()` is new to me. Another reason is that these two codes `fname = stack.enter_context(file_context)` and `arg_str = " ".join([fname, build_arg_string(kwargs)])` are separated by the long `if` block.     Please describe changes proposed and **why** you made them. If unsure, open an issue first so we can discuss.      If fixing an issue, put the issue number after the # below (no spaces). GitHub will automatically close it when this gets merged.   Fixes #   **Reminders**  - [x] Run `make format` and `make check` to make sure the code follows the style guide. - [ ] Add tests for new features or tests that would have caught the bug that you're fixing. - [ ] Add new public functions/methods/classes to `doc/api/index.rst`. - [ ] Write detailed docstrings for all functions/methods. - [ ] If adding new functionality, add an example to docstrings or tutorials.  **Notes**  - You can write `/format` in the first line of a comment to lint the code automatically 
https://github.com/GenericMappingTools/pygmt/pull/2742	1	readability	2024-03-27 02:16:43	Figure.plot: Refactor to increase code readability	**Description of proposed changes**    The `Figure.plot` method is one of the first GMT modules wrapped in PyGMT and we have kept adding more features into this method but without any refactorings.     The current `Figure.plot` codes are difficult to read and maintain. This PR refactors the codes to make it easier to read by grouping the codes based on the data kind.
https://github.com/GenericMappingTools/pygmt/pull/3143	1	readability	2024-03-28 08:05:54	Figure.plot3d: Refactor to increase code readability	**Description of proposed changes**    Same as #2742 but for `Figure.plot3d`. The changes are almost the same, except that the default point style is `s0.2c` in `Figure.plot` but is `u0.2c` in `Figure.plot3d`.
https://github.com/GenericMappingTools/pygmt/pull/3653	1	readability	2024-11-27 01:01:52	GMT_DATASET: Refactor nested classes to improve code readability	The `GMT_DATASET` data structure was originally added in #2729, with nested classes defined like `GMT_DATASET`->`GMT_DATATABLE`->`GMT_DATASEGMENT`.     As initially pointed out in https://github.com/GenericMappingTools/pygmt/pull/2729#discussion_r1390150748, the nested classes are difficult to read and maintain.    This PR moves the `GMT_DATATABLE`/`GMT_DATASEGMENT` classes outside of the `GMT_DATASET` class.
https://github.com/geopandas/geopandas/pull/3462	1	readability	2024-12-13 14:09:26	CLN: GH3461 Implements minor readability changes to clip.py.	Closes #3461    Changes include:     1. adding a docstring to the _mask_is_list_like_rectangle function     2. ensuring consistent variable naming across _clip_gdf_with_mask and clip functions by renaming the "mask_is_list_like" variable to "clipping_by_rectangle"    I created issue GH3461 to explain the benefits of these changes in more detail. While this file is already in really good shape, I believe these changes will bring it to PEP 8 standards and make it slightly more readable.
https://github.com/GeoscienceAustralia/gnssanalysis/pull/62	1	readability	2024-12-19 09:34:33	NPI-3655 Improve readability of getVelPoly() function	No functional changes, but a bunch of renamed variables to hopefully make it clearer what this function is doing.
https://github.com/GeoStat-Framework/GSTools/pull/257	21	readability	2022-08-15 18:16:15	refactor(src): readability improvements	Lots of small readability fixes focused on the `src/.py` path.     If any changes are needed, please let me know.    Best,  Ryan
https://github.com/getsentry/sentry/pull/18539	1	readability	2020-04-30 22:17:35	ref(organization_projects): Extract callback for readability	Just something I noticed could be cleaned up while working on #18494.    I know that a lot of similar classes use the `on_results=lambda x: serialize(x, ...)` pattern (I'm fine with lambdas generally) but this is one of the only multiline ones with a big compound expression.
https://github.com/getsentry/sentry/pull/19334	1	readability	2020-06-12 16:12:13	ref(group_details): Formatting tweak for readability	
https://github.com/getsentry/sentry/pull/38093	2	readability	2022-08-29 21:49:48	ref(groups): re-organize GroupSerializer methods around for readability	Only moving methods around to make reading these files easier (no logic changes).    Re-ordering these methods to follow:  1. Implemented/Overridden methods.  2. Non '_' prepended methods aka. 'Public' instance methods.  3. '_' prepended methods aka. 'Private' instance methods.   4. @staticmethods
https://github.com/getsentry/sentry/pull/45559	1	readability	2023-03-09 21:53:28	ref(py): Group URLs into blocks for easier readability	GitHub is struggling to show this in an easy to read format.    Here is a better diff using [`--patience`](https://blog.jcoglan.com/2017/09/19/the-patience-diff-algorithm/)    https://gist.github.com/evanpurkhiser/be1a84e7d869480d188ec7ff71f18f19
https://github.com/getsentry/sentry/pull/53305	1	readability	2023-07-20 20:46:46	ref: Refactor _dispatch_to_silo_service for readability	Suggested changes for https://github.com/getsentry/sentry/pull/53237
https://github.com/getsentry/sentry/pull/63405	1	readability	2024-01-23 00:28:34	ref(api): Refactor post hook for readability	The post hook is quite difficult to follow, so this breaks the logic out into more helpers
https://github.com/getsentry/sentry/pull/68095	2	readability	2024-04-02 22:14:27	ref(code-mappings): code-mapping readability & style refactors	**This PR has no logic changes**. It only makes the following style changes:  - Moves functions around to be in a more intuitive place   - Renames some functions and variables   - Adds some annotations to unintuitive functions/methods     The principals I used to make these style changes were:  - Class methods that are for internal use should begin with a `_`  - Class methods that are for external use should be be at the top of the class  - The ordering of class methods should generally follow the ordering in which they are called (to minimize big jumps when ctrl-clicking)   - Functions that are only used within a class should be part of the class as a method, rather than a global function.   - Functions that are not used anywhere should be removed, even if they were used previously   - Docstrings are not necessary for functions that one could reasonably expect to be intuitive at first glance   
https://github.com/getsentry/sentry/pull/72528	1	readability	2024-06-11 19:31:07	nit(api): Order serializer fields for api readability	Reordering short fields to be at the top, and moving long fields to be in the same order shown on the UI  - conditions  - filters  - actions
https://github.com/getsentry/sentry/pull/79220	3	readability	2024-10-17 15:52:16	ref(toolbar): check queryReferrer from query param and refactor tests for readability	Follow-up to https://github.com/getsentry/sentry/pull/78778    Confirmed with Ryan the toolbar sends `queryReferrer` as a query param, not a HTTP header. For ex, ` path>/?queryReferrer=devtoolbar`. For SQL query convenience, the analytics event will exclude this from the query string.    Also refactors tests for better readability, removing the helper in the unit test class completely.    Also marks some more fields as `required=False` in the event definition. We need this for `user_id` in case of unauthenticated or anonymous requests. Note events with null user_id won't be sent to amplitude. Fixes [SENTRY-3GMT](https://sentry.sentry.io/issues/5994359552/) 
https://github.com/glotzerlab/signac-flow/pull/495	2	readability	2021-05-05 16:41:33	Improve jinja template readability.	## Description  Improving jinja template readability by adding block names to `{% endblock %}` tags and indenting the logic (but not the script contents). This should help with visually identifying what logical paths are followed in the code. This page from the Jinja docs has more information about whitespace control: https://jinja.palletsprojects.com/en/2.11.x/templates/#whitespace-control    Collaborated with @AKerr9509 and @AlainKadar.    ## Motivation and Context  Resolves #461.    Existing tests should be sufficient to catch any major problems in the submission scripts, there are regression tests that ensure the output from before and after this change are the same. Status output templates are not yet tested, see #435.    ## Types of Changes     Please select all items that apply either now or after creating the pull request:    - [ ] Documentation update  - [ ] Bug fix  - [x] New feature  - [ ] Breaking change sup>1 /sup>     sup>1 /sup>The change breaks (or has the potential to break) existing functionality.    ## Checklist:     Please select all items that apply either now or after creating the pull request.       If you are unsure about any of these items, do not hesitate to ask!    - [x] I am familiar with the [**Contributing Guidelines**](https://github.com/glotzerlab/signac-flow/blob/master/CONTRIBUTING.md).  - [x] I agree with the terms of the [**Contributor Agreement**](https://github.com/glotzerlab/signac-flow/blob/master/ContributorAgreement.md).  - [x] My name is on the [list of contributors](https://github.com/glotzerlab/signac-flow/blob/master/contributors.yaml).  - [x] My code follows the [code style guideline](https://github.com/glotzerlab/signac-flow/blob/master/CONTRIBUTING.md#code-style) of this project.  - [x] The changes introduced by this pull request are covered by existing or newly introduced tests.    If necessary:  - [ ] I have updated the API documentation as part of the package doc-strings.  - [ ] I have created a separate pull request to update the [framework documentation](https://docs.signac.io/) on [signac-docs](https://github.com/glotzerlab/signac-docs) and linked it here.  - [x] I have updated the [changelog](https://github.com/glotzerlab/signac-flow/blob/master/changelog.txt).  
https://github.com/google/ad-manager-alerter/pull/4	1	readability	2023-03-31 11:12:41	refactor: refactoring to improve code readability	  refactoring the **ad_manager_alerter** function to increase performance and improve code readability.  we can use a dictionary instead of multiple if-else statements to map the "method" name to its corresponding functions.  
https://github.com/google/bumble/pull/384	2	readability	2023-12-28 17:24:26	 hanged concatenation of strings to f-strings to improve readability	 hanged concatenation of strings to f-strings to improve readability and unify with the rest of code
https://github.com/google/clusterfuzz/pull/1355	1	readability	2020-01-21 20:36:05	BigQuery insert: improve the readability of the merge insertErrors logic.	Thanks @oliverchang for the suggestions in #1350.
https://github.com/google/clusterfuzz/pull/2242	1	readability	2021-02-15 23:52:54	improve readability of stack trace regular expressions	This PR cleans up the readability of multiple regular expressions by removing nonessential escaping, converting from:  `r'^libfuzzer\\_sys\\:\\:initialize'`  to:  `r'^libfuzzer_sys::initialize'`    The equivalency can be demonstrated in both python2 and python3 with this test script:    ```python  import re    assert re.match("^.*(/mom)", "hi/mom").groups()[0] == "/mom"  assert re.match("^.*(:mom)", "hi:mom").groups()[0] == ":mom"  assert re.match("^.*( mom)", "hi mom").groups()[0] == " mom"  assert re.match("^.*( mom)", "hi mom").groups()[0] == " mom"  assert re.match("^.*(>mom)", "hi>mom").groups()[0] == ">mom"  assert re.match("^.*(_mom)", "hi_mom").groups()[0] == "_mom"  ```
https://github.com/google/fuzzbench/pull/769	1	readability	2020-09-25 18:26:38	Reduce number of core fuzzers to avoid report readability issues.	E.g.  https://www.fuzzbench.com/reports/2020-09-22/index.html  Do no show *_qemu fuzzers and other low performers in every  report as part of automatic merge.
https://github.com/google/gcp_scanner/pull/64	2	readability	2023-03-01 17:05:33	feat: Add type annotations using the MyPy library for improved type checking and expand command names to provide more descriptive labels for better readability and clarity.	## Description    Added types to args along with long names for all commands    ## Changes Made  changes in scanner.py    ## Checklist  - [x] I have read and followed the contributing guidelines.  - [x] I have tested my changes thoroughly and they work as expected.  - [x] I have updated the documentation to reflect the changes made.  - [x] My code follows the project's coding style and standards.  - [x] I have added appropriate commit messages and comments for my changes.      Feel free to modify and customize this template as needed to fit the specific needs of the GCP Scanner project.
https://github.com/google/jaxopt/pull/89	1	readability	2021-10-22 10:56:15	improve DEQ example readability	I added some comments in the file.  I refactorized the code to distinguish more easily between forward passes at inference time and forwards passes at train time.  I added an option to control batch_size.
https://github.com/google/oss-fuzz-gen/pull/459	1	readability	2024-07-09 13:52:13	experiment: fix readability of conditional	Ref: https://github.com/google/oss-fuzz-gen/pull/456/files#r1669405244
https://github.com/googleapis/python-bigquery-dataframes/pull/885	9	readability	2024-08-12 21:32:53	refactor: reorganize `remote_function` code for readability	Currently the user facing functions `remote_function` and `read_gbq_function` have entry points through the `Session` class and `bigframes.pandas` module. Most of the underlying code currently exists in `bigframes.functions.remote_function` which has grown large. This module is not promoted to be used by the end user directly, and is not included in the [public documentation](https://cloud.google.com/python/docs/reference/bigframes/latest). This refactoring involves following changes to the code in this module:    1. Move `RemoteFunctionClient` to a separate module `remote_function_client`  2. Rename `_RemoteFunctionSession` class to `RemoteFunctionSession` and move to a separate module `remote_function_session`   3. Moved a bunch of module level functions to `utils` module     Thank you for opening a Pull Request! Before submitting your PR, there are a few things you can do to make sure it goes smoothly:  - [ ] Make sure to open an issue as a [bug/issue](https://github.com/googleapis/python-bigquery-dataframes/issues/new/choose) before writing your code!  That way we can discuss the change, evaluate designs, and agree on the general idea  - [ ] Ensure the tests and linter pass  - [ ] Code coverage does not decrease (if any source code was changed)  - [ ] Appropriate docs were updated (if necessary)    Fixes # issue_number_goes_here>   
https://github.com/googleapis/python-documentai-toolbox/pull/42	3	readability	2023-02-02 18:24:52	chore: minor refactoring for readability/simplicity	- Fixed Type mismatch on `_table_wrapper_from_documentai_table`  - Simplified boolean checks  - Removed Extra local variables  - Updated function names/docs for clarity  - Added .mypy_cache to .gitignore
https://github.com/googleapis/python-documentai-toolbox/pull/139	22	readability	2023-07-20 21:15:55	refactor: Major refactoring of functions to improve readability, efficiency and follow standard practices.	- Shouldn't impact any user-facing functions    BEGIN_COMMIT_OVERRIDE    fix: Internal refactoring to improve efficiency and readability. No external-facing changes.    END_COMMIT_OVERRIDE
https://github.com/googleapis/python-documentai-toolbox/pull/210	2	readability	2024-06-12 17:56:17	refactor: Change read-only properties to `@cached_property` for readability and speed improvements	- Follow-up to https://github.com/googleapis/python-documentai-toolbox/pull/205  
https://github.com/great-expectations/great_expectations/pull/1590	2	readability	2020-06-12 20:02:36	[ENHANCEMENT] BasicSuiteBuilderProfiler now rounds mostly values for readability	Please annotate your PR title to describe what the PR does, then give a brief bulleted description of your PR below. PR titles should begin with [BUGFIX], [ENHANCEMENT], [FEATURE],  [DOCS], or [MAINTENANCE]. If a new feature introduces breaking changes for the Great Expectations API or configuration files, please also add [BREAKING]. You can read about the tags in our [contributor checklist](https://docs.greatexpectations.io/en/latest/contributing/contribution_checklist.html).    Changes proposed in this pull request:  - round mostly values when scaffolding  -  -      After submitting your PR, CI checks will run and @tiny-tim-bot will check for your CLA signature.    For a PR with nontrivial changes, we review with both design-centric and code-centric lenses.    In a design review, we aim to ensure that the PR is consistent with our relationship to the open source community, with our software architecture and abstractions, and with our users' needs and expectations. That review often starts well before a PR, for example in github issues or slack, so please link to relevant conversations in notes below to help reviewers understand and approve your PR more quickly (e.g. `closes #123`).    Previous Design Review notes:  -  -  -      Thank you for submitting!  
https://github.com/great-expectations/great_expectations/pull/3103	31	readability	2021-07-23 01:08:40	[MAINTENANCE] rename map_metric.py to map_metric_provider.py (with DeprecationWarning) for a better code readability/interpretability	Please annotate your PR title to describe what the PR does, then give a brief bulleted description of your PR below. PR titles should begin with [BUGFIX], [FEATURE],  [DOCS], or [MAINTENANCE]. If a new feature introduces breaking changes for the Great Expectations API or configuration files, please also add [BREAKING]. You can read about the tags in our [contributor checklist](https://docs.greatexpectations.io/en/latest/contributing/contribution_checklist.html).    Changes proposed in this pull request:  - JIRA: GE-320/GE-366  -  -      After submitting your PR, CI checks will run and @tiny-tim-bot will check for your CLA signature.    For a PR with nontrivial changes, we review with both design-centric and code-centric lenses.    In a design review, we aim to ensure that the PR is consistent with our relationship to the open source community, with our software architecture and abstractions, and with our users' needs and expectations. That review often starts well before a PR, for example in github issues or slack, so please link to relevant conversations in notes below to help reviewers understand and approve your PR more quickly (e.g. `closes #123`).    Previous Design Review notes:  -  -  -      ### Definition of Done  Please delete options that are not relevant.    - [ ] My code follows the Great Expectations [style guide](https://docs.greatexpectations.io/en/latest/contributing/style_guide.html?highlight=style%20guide)  - [ ] I have performed a [self-review](https://docs.greatexpectations.io/en/latest/contributing/contribution_checklist.html?highlight=checklist) of my own code  - [ ] I have commented my code, particularly in hard-to-understand areas  - [ ] I have made corresponding changes to the documentation  - [ ] I have added [unit tests](https://docs.greatexpectations.io/en/latest/contributing/testing.html#contributing-testing-writing-unit-tests) where applicable and made sure that new and existing tests are passing.  - [ ] I have run any local integration tests and made sure that nothing is broken.      Thank you for submitting!  
https://github.com/great-expectations/great_expectations/pull/3475	10	readability	2021-10-01 20:32:23	[MAINTENANCE] Add type-hints; add utility method for creating temporary DB tables; clean up imports; improve code readability; and add a directory to pre-commit	Please annotate your PR title to describe what the PR does, then give a brief bulleted description of your PR below. PR titles should begin with [BUGFIX], [FEATURE],  [DOCS], or [MAINTENANCE]. If a new feature introduces breaking changes for the Great Expectations API or configuration files, please also add [BREAKING]. You can read about the tags in our [contributor checklist](https://docs.greatexpectations.io/en/latest/contributing/contribution_checklist.html).    Changes proposed in this pull request:  - JIRA: GREAT-56/GREAT-93/GREAT-295  -  -      After submitting your PR, CI checks will run and @tiny-tim-bot will check for your CLA signature.    For a PR with nontrivial changes, we review with both design-centric and code-centric lenses.    In a design review, we aim to ensure that the PR is consistent with our relationship to the open source community, with our software architecture and abstractions, and with our users' needs and expectations. That review often starts well before a PR, for example in github issues or slack, so please link to relevant conversations in notes below to help reviewers understand and approve your PR more quickly (e.g. `closes #123`).    Previous Design Review notes:  -  -  -      ### Definition of Done  Please delete options that are not relevant.    - [x] My code follows the Great Expectations [style guide](https://docs.greatexpectations.io/en/latest/contributing/style_guide.html?highlight=style%20guide)  - [x] I have performed a [self-review](https://docs.greatexpectations.io/en/latest/contributing/contribution_checklist.html?highlight=checklist) of my own code  - [x] I have commented my code, particularly in hard-to-understand areas  - [x] I have made corresponding changes to the documentation  - [x] I have added [unit tests](https://docs.greatexpectations.io/en/latest/contributing/testing.html#contributing-testing-writing-unit-tests) where applicable and made sure that new and existing tests are passing.  - [x] I have run any local integration tests and made sure that nothing is broken.      Thank you for submitting!  
https://github.com/great-expectations/great_expectations/pull/3493	1	readability	2021-10-05 21:57:36	[MAINTENANCE] Clean up query building for better code readability	Please annotate your PR title to describe what the PR does, then give a brief bulleted description of your PR below. PR titles should begin with [BUGFIX], [FEATURE],  [DOCS], or [MAINTENANCE]. If a new feature introduces breaking changes for the Great Expectations API or configuration files, please also add [BREAKING]. You can read about the tags in our [contributor checklist](https://docs.greatexpectations.io/en/latest/contributing/contribution_checklist.html).    Changes proposed in this pull request:  -  -  -      After submitting your PR, CI checks will run and @tiny-tim-bot will check for your CLA signature.    For a PR with nontrivial changes, we review with both design-centric and code-centric lenses.    In a design review, we aim to ensure that the PR is consistent with our relationship to the open source community, with our software architecture and abstractions, and with our users' needs and expectations. That review often starts well before a PR, for example in github issues or slack, so please link to relevant conversations in notes below to help reviewers understand and approve your PR more quickly (e.g. `closes #123`).    Previous Design Review notes:  -  -  -      ### Definition of Done  Please delete options that are not relevant.    - [x] My code follows the Great Expectations [style guide](https://docs.greatexpectations.io/en/latest/contributing/style_guide.html?highlight=style%20guide)  - [x] I have performed a [self-review](https://docs.greatexpectations.io/en/latest/contributing/contribution_checklist.html?highlight=checklist) of my own code  - [x] I have commented my code, particularly in hard-to-understand areas  - [x] I have made corresponding changes to the documentation  - [x] I have added [unit tests](https://docs.greatexpectations.io/en/latest/contributing/testing.html#contributing-testing-writing-unit-tests) where applicable and made sure that new and existing tests are passing.  - [x] I have run any local integration tests and made sure that nothing is broken.      Thank you for submitting!  
https://github.com/great-expectations/great_expectations/pull/4949	1	readability	2022-04-25 21:29:31	[MAINTENANCE] Cleanup variable naming for better readability	Please annotate your PR title to describe what the PR does, then give a brief bulleted description of your PR below. PR titles should begin with [BUGFIX], [FEATURE],  [DOCS], or [MAINTENANCE]. If a new feature introduces breaking changes for the Great Expectations API or configuration files, please also add [BREAKING]. You can read about the tags in our [contributor checklist](https://docs.greatexpectations.io/docs/contributing/contributing_checklist).    Changes proposed in this pull request:  - JIRA: GREAT-735/GREAT-746  -  -      After submitting your PR, CI checks will run and @cla-bot will check for your CLA signature.    For a PR with nontrivial changes, we review with both design-centric and code-centric lenses.    In a design review, we aim to ensure that the PR is consistent with our relationship to the open source community, with our software architecture and abstractions, and with our users' needs and expectations. That review often starts well before a PR, for example in github issues or slack, so please link to relevant conversations in notes below to help reviewers understand and approve your PR more quickly (e.g. `closes #123`).    Previous Design Review notes:  -  -  -      ### Definition of Done  Please delete options that are not relevant.    - [x] My code follows the Great Expectations [style guide](https://docs.greatexpectations.io/docs/contributing/style_guides/code_style)  - [x] I have performed a [self-review](https://docs.greatexpectations.io/docs/contributing/contributing_checklist) of my own code  - [x] I have commented my code, particularly in hard-to-understand areas  - [x] I have made corresponding changes to the documentation  - [x] I have added [unit tests](https://docs.greatexpectations.io/docs/contributing/contributing_test#writing-unit-and-integration-tests) where applicable and made sure that new and existing tests are passing.  - [x] I have run any local integration tests and made sure that nothing is broken.      Thank you for submitting!  
https://github.com/great-expectations/great_expectations/pull/5279	1	readability	2022-06-09 15:43:52	[MAINTENANCE] Improve code readability in the processing section of "MapMetricColumnDomainBuilder".	Please annotate your PR title to describe what the PR does, then give a brief bulleted description of your PR below. PR titles should begin with [BUGFIX], [FEATURE],  [DOCS], or [MAINTENANCE]. If a new feature introduces breaking changes for the Great Expectations API or configuration files, please also add [BREAKING]. You can read about the tags in our [contributor checklist](https://docs.greatexpectations.io/docs/contributing/contributing_checklist).    Changes proposed in this pull request:  -  -  -      After submitting your PR, CI checks will run and @cla-bot will check for your CLA signature.    For a PR with nontrivial changes, we review with both design-centric and code-centric lenses.    In a design review, we aim to ensure that the PR is consistent with our relationship to the open source community, with our software architecture and abstractions, and with our users' needs and expectations. That review often starts well before a PR, for example in github issues or slack, so please link to relevant conversations in notes below to help reviewers understand and approve your PR more quickly (e.g. `closes #123`).    Previous Design Review notes:  -  -  -      ### Definition of Done  Please delete options that are not relevant.    - [x] My code follows the Great Expectations [style guide](https://docs.greatexpectations.io/docs/contributing/style_guides/code_style)  - [x] I have performed a [self-review](https://docs.greatexpectations.io/docs/contributing/contributing_checklist) of my own code  - [x] I have commented my code, particularly in hard-to-understand areas  - [x] I have made corresponding changes to the documentation  - [x] I have added [unit tests](https://docs.greatexpectations.io/docs/contributing/contributing_test#writing-unit-and-integration-tests) where applicable and made sure that new and existing tests are passing.  - [x] I have run any local integration tests and made sure that nothing is broken.      Thank you for submitting!  
https://github.com/great-expectations/great_expectations/pull/6406	13	readability	2022-11-22 01:58:31	[MAINTENANCE] Cleanup For Better Code Elegance/Readability	### Scope  * Add type hints in a couple of places in `expectation.py`  * Remove unnecessary code duplication in `validator.py`  * Create formal `ValidationDependencies` `dataclass` object.    Please annotate your PR title to describe what the PR does, then give a brief bulleted description of your PR below. PR titles should begin with [BUGFIX], [FEATURE],  [DOCS], or [MAINTENANCE]. If a new feature introduces breaking changes for the Great Expectations API or configuration files, please also add [BREAKING]. You can read about the tags in our [contributor checklist](https://docs.greatexpectations.io/docs/contributing/contributing_checklist).    Changes proposed in this pull request:  - JIRA: GREAT-181/GREAT-1406  -  -      After submitting your PR, CI checks will run and @cla-bot will check for your CLA signature.    For a PR with nontrivial changes, we review with both design-centric and code-centric lenses.    In a design review, we aim to ensure that the PR is consistent with our relationship to the open source community, with our software architecture and abstractions, and with our users' needs and expectations. That review often starts well before a PR, for example in github issues or slack, so please link to relevant conversations in notes below to help reviewers understand and approve your PR more quickly (e.g. `closes #123`).    Previous Design Review notes:  -  -  -      ### Definition of Done  Please delete options that are not relevant.    - [x] My code follows the Great Expectations [style guide](https://docs.greatexpectations.io/docs/contributing/style_guides/code_style)  - [x] I have performed a [self-review](https://docs.greatexpectations.io/docs/contributing/contributing_checklist) of my own code  - [x] I have commented my code, particularly in hard-to-understand areas  - [x] I have made corresponding changes to the documentation  - [x] I have added [unit tests](https://docs.greatexpectations.io/docs/contributing/contributing_test#writing-unit-and-integration-tests) where applicable and made sure that new and existing tests are passing.  - [x] I have run any local integration tests and made sure that nothing is broken.      Thank you for submitting!
https://github.com/great-expectations/great_expectations/pull/6418	24	readability	2022-11-22 20:29:39	[MAINTENANCE] Clean Up Type Hints and Minor Refactoring For Better Code Elegance/Readability	### Scope  * Fix incorrect capitalization of `Dict` type hint that does not specify the key and value types.  * Fix type hint warning in `validator.py` by adding `Union` of proper type for Batch list.  * Split `MetricsCalculator.compute_metrics()` into `ValidationGraph` construction phase and graph resolution phase.  * Add descriptive docstrings to metric computation methods.  * Minor formatting clean up for better code readability.    Please annotate your PR title to describe what the PR does, then give a brief bulleted description of your PR below. PR titles should begin with [BUGFIX], [FEATURE],  [DOCS], or [MAINTENANCE]. If a new feature introduces breaking changes for the Great Expectations API or configuration files, please also add [BREAKING]. You can read about the tags in our [contributor checklist](https://docs.greatexpectations.io/docs/contributing/contributing_checklist).    Changes proposed in this pull request:  - JIRA: GREAT-1347/GREAT-181/GREAT-1413  -  -      After submitting your PR, CI checks will run and @cla-bot will check for your CLA signature.    For a PR with nontrivial changes, we review with both design-centric and code-centric lenses.    In a design review, we aim to ensure that the PR is consistent with our relationship to the open source community, with our software architecture and abstractions, and with our users' needs and expectations. That review often starts well before a PR, for example in github issues or slack, so please link to relevant conversations in notes below to help reviewers understand and approve your PR more quickly (e.g. `closes #123`).    Previous Design Review notes:  -  -  -      ### Definition of Done  Please delete options that are not relevant.    - [x] My code follows the Great Expectations [style guide](https://docs.greatexpectations.io/docs/contributing/style_guides/code_style)  - [x] I have performed a [self-review](https://docs.greatexpectations.io/docs/contributing/contributing_checklist) of my own code  - [x] I have commented my code, particularly in hard-to-understand areas  - [x] I have made corresponding changes to the documentation  - [x] I have added [unit tests](https://docs.greatexpectations.io/docs/contributing/contributing_test#writing-unit-and-integration-tests) where applicable and made sure that new and existing tests are passing.  - [x] I have run any local integration tests and made sure that nothing is broken.      Thank you for submitting!
https://github.com/great-expectations/great_expectations/pull/6444	16	readability	2022-11-29 07:48:27	[MAINTENANCE] Clean Up Variable Names In Test Modules, Type Hints, and Minor Refactoring For Better Code Elegance/Readability	### Scope  * Modify names of variables in `ParameterBuilder` test modules to better communicate their meanings.  * Refactor `MetricCalculator.compute_metrics()`, `Validator.graph_validate()`, and `ParameterBuilder.get_metrics()` for better separability of `ValidationGraph` construction, graph resolution, and error reporting.   * Remove unnecessary `MetricConfiguration` sorting from `ParameterBuilder.get_metrics()` (this is done later by `AttributedResolvedMetrics` anyway).  * Make `ParameterBuilder.get_batch_ids()` use the  latest  `Batch` more reliably.  * Update tests of `RegexPatternStringParameterBuilder` to properly reflect all results that can get a 1.0 score.  * Fix type hints in several modules.  * Add return types and docstrings for several methods.    Please annotate your PR title to describe what the PR does, then give a brief bulleted description of your PR below. PR titles should begin with [BUGFIX], [FEATURE],  [DOCS], or [MAINTENANCE]. If a new feature introduces breaking changes for the Great Expectations API or configuration files, please also add [BREAKING]. You can read about the tags in our [contributor checklist](https://docs.greatexpectations.io/docs/contributing/contributing_checklist).    Changes proposed in this pull request:  - JIRA: GREAT-1347/GREAT-181/GREAT-1414  -  -      After submitting your PR, CI checks will run and @cla-bot will check for your CLA signature.    For a PR with nontrivial changes, we review with both design-centric and code-centric lenses.    In a design review, we aim to ensure that the PR is consistent with our relationship to the open source community, with our software architecture and abstractions, and with our users' needs and expectations. That review often starts well before a PR, for example in github issues or slack, so please link to relevant conversations in notes below to help reviewers understand and approve your PR more quickly (e.g. `closes #123`).    Previous Design Review notes:  -  -  -      ### Definition of Done  Please delete options that are not relevant.    - [x] My code follows the Great Expectations [style guide](https://docs.greatexpectations.io/docs/contributing/style_guides/code_style)  - [x] I have performed a [self-review](https://docs.greatexpectations.io/docs/contributing/contributing_checklist) of my own code  - [x] I have commented my code, particularly in hard-to-understand areas  - [x] I have made corresponding changes to the documentation  - [x] I have added [unit tests](https://docs.greatexpectations.io/docs/contributing/contributing_test#writing-unit-and-integration-tests) where applicable and made sure that new and existing tests are passing.  - [x] I have run any local integration tests and made sure that nothing is broken.      Thank you for submitting!
https://github.com/great-expectations/great_expectations/pull/6478	2	readability	2022-12-02 18:38:33	[MAINTENANCE] Minor cleanup for better code readability	Please annotate your PR title to describe what the PR does, then give a brief bulleted description of your PR below. PR titles should begin with [BUGFIX], [FEATURE],  [DOCS], or [MAINTENANCE]. If a new feature introduces breaking changes for the Great Expectations API or configuration files, please also add [BREAKING]. You can read about the tags in our [contributor checklist](https://docs.greatexpectations.io/docs/contributing/contributing_checklist).    Changes proposed in this pull request:  - JIRA: GREAT-1347/GREAT-181/GREAT-1423  -  -      After submitting your PR, CI checks will run and @cla-bot will check for your CLA signature.    For a PR with nontrivial changes, we review with both design-centric and code-centric lenses.    In a design review, we aim to ensure that the PR is consistent with our relationship to the open source community, with our software architecture and abstractions, and with our users' needs and expectations. That review often starts well before a PR, for example in github issues or slack, so please link to relevant conversations in notes below to help reviewers understand and approve your PR more quickly (e.g. `closes #123`).    Previous Design Review notes:  -  -  -      ### Definition of Done  Please delete options that are not relevant.    - [x] My code follows the Great Expectations [style guide](https://docs.greatexpectations.io/docs/contributing/style_guides/code_style)  - [x] I have performed a [self-review](https://docs.greatexpectations.io/docs/contributing/contributing_checklist) of my own code  - [x] I have commented my code, particularly in hard-to-understand areas  - [x] I have made corresponding changes to the documentation  - [x] I have added [unit tests](https://docs.greatexpectations.io/docs/contributing/contributing_test#writing-unit-and-integration-tests) where applicable and made sure that new and existing tests are passing.  - [x] I have run any local integration tests and made sure that nothing is broken.      Thank you for submitting!
https://github.com/great-expectations/great_expectations/pull/6575	8	readability	2022-12-14 00:29:10	[MAINTENANCE] Renaming Metric Name Suffixes using Enum Values for Better Code Readability	### Scope  The `Metrics` layer utilizes a naming scheme that corresponds to `Map` metrics, `Condition` metrics, `Aggregate` metrics, and others.  These are properly delineated by `Enum` values with corresponding suffixes in `ExecutionEngine` module.  However, in other `Metrics` modules, strings are used to designate `Metric` function types, which makes reading this already highly complex code even more difficult, unnecessarily.  This effort improves the readability by using enums and meaningful variable names consistently.    Please annotate your PR title to describe what the PR does, then give a brief bulleted description of your PR below. PR titles should begin with [BUGFIX], [FEATURE],  [DOCS], or [MAINTENANCE]. If a new feature introduces breaking changes for the Great Expectations API or configuration files, please also add [BREAKING]. You can read about the tags in our [contributor checklist](https://docs.greatexpectations.io/docs/contributing/contributing_checklist).    Changes proposed in this pull request:  - JIRA: GREAT-1347/GREAT-181/GREAT-1445  -  -      After submitting your PR, CI checks will run and @cla-bot will check for your CLA signature.    For a PR with nontrivial changes, we review with both design-centric and code-centric lenses.    In a design review, we aim to ensure that the PR is consistent with our relationship to the open source community, with our software architecture and abstractions, and with our users' needs and expectations. That review often starts well before a PR, for example in github issues or slack, so please link to relevant conversations in notes below to help reviewers understand and approve your PR more quickly (e.g. `closes #123`).    Previous Design Review notes:  -  -  -      ### Definition of Done  Please delete options that are not relevant.    - [x] My code follows the Great Expectations [style guide](https://docs.greatexpectations.io/docs/contributing/style_guides/code_style)  - [x] I have performed a [self-review](https://docs.greatexpectations.io/docs/contributing/contributing_checklist) of my own code  - [x] I have commented my code, particularly in hard-to-understand areas  - [x] I have made corresponding changes to the documentation  - [x] I have added [unit tests](https://docs.greatexpectations.io/docs/contributing/contributing_test#writing-unit-and-integration-tests) where applicable and made sure that new and existing tests are passing.  - [x] I have run any local integration tests and made sure that nothing is broken.      Thank you for submitting!
https://github.com/great-expectations/great_expectations/pull/6578	5	readability	2022-12-14 20:49:16	[MAINTENANCE] Refactor ExecutionEngine.resolve_metrics() for better code readability	### Scope  The method `ExecutionEngine.resolve_metrics()` is being refactored into two principal parts: gathering aggregated and non-aggregated metric computation specifications, and resolving the corresponding metrics.  The non-aggregated metrics are resolved by calling their function.  The aggregated metrics are bundled (for efficiency).  Code readability is improved.    Please annotate your PR title to describe what the PR does, then give a brief bulleted description of your PR below. PR titles should begin with [BUGFIX], [FEATURE],  [DOCS], or [MAINTENANCE]. If a new feature introduces breaking changes for the Great Expectations API or configuration files, please also add [BREAKING]. You can read about the tags in our [contributor checklist](https://docs.greatexpectations.io/docs/contributing/contributing_checklist).    Changes proposed in this pull request:  - JIRA: GREAT-1347/GREAT-181/GREAT-1445  -  -      After submitting your PR, CI checks will run and @cla-bot will check for your CLA signature.    For a PR with nontrivial changes, we review with both design-centric and code-centric lenses.    In a design review, we aim to ensure that the PR is consistent with our relationship to the open source community, with our software architecture and abstractions, and with our users' needs and expectations. That review often starts well before a PR, for example in github issues or slack, so please link to relevant conversations in notes below to help reviewers understand and approve your PR more quickly (e.g. `closes #123`).    Previous Design Review notes:  -  -  -      ### Definition of Done  Please delete options that are not relevant.    - [x] My code follows the Great Expectations [style guide](https://docs.greatexpectations.io/docs/contributing/style_guides/code_style)  - [x] I have performed a [self-review](https://docs.greatexpectations.io/docs/contributing/contributing_checklist) of my own code  - [x] I have commented my code, particularly in hard-to-understand areas  - [x] I have made corresponding changes to the documentation  - [x] I have added [unit tests](https://docs.greatexpectations.io/docs/contributing/contributing_test#writing-unit-and-integration-tests) where applicable and made sure that new and existing tests are passing.  - [x] I have run any local integration tests and made sure that nothing is broken.      Thank you for submitting!
https://github.com/great-expectations/great_expectations/pull/6587	3	readability	2022-12-15 17:52:43	[MAINTENANCE] Small refactor of ExecutionEngine.resolve_metrics() for better code readability (and miscellaneous additional clean up)	Please annotate your PR title to describe what the PR does, then give a brief bulleted description of your PR below. PR titles should begin with [BUGFIX], [FEATURE], [DOCS], [MAINTENANCE], or [CONTRIB]. If a new feature introduces breaking changes for the Great Expectations API or configuration files, please also add [BREAKING]. You can read about the tags in our [contributor checklist](https://docs.greatexpectations.io/docs/contributing/contributing_checklist).    Changes proposed in this pull request:  - JIRA: GREAT-1347/GREAT-181/GREAT-1445  -  -      After submitting your PR, CI checks will run and @cla-bot will check for your CLA signature.    For a PR with nontrivial changes, we review with both design-centric and code-centric lenses.    In a design review, we aim to ensure that the PR is consistent with our relationship to the open source community, with our software architecture and abstractions, and with our users' needs and expectations. That review often starts well before a PR, for example in GitHub issues or Slack, so please link to relevant conversations in notes below to help reviewers understand and approve your PR more quickly (e.g. `closes #123`).    Previous Design Review notes:  -  -  -      ### Definition of Done  Please delete options that are not relevant.    - [x] My code follows the Great Expectations [style guide](https://docs.greatexpectations.io/docs/contributing/style_guides/code_style)  - [x] I have performed a [self-review](https://docs.greatexpectations.io/docs/contributing/contributing_checklist) of my own code  - [x] I have commented my code, particularly in hard-to-understand areas  - [x] I have made corresponding changes to the documentation  - [x] I have added [unit tests](https://docs.greatexpectations.io/docs/contributing/contributing_test#writing-unit-and-integration-tests) where applicable and made sure that new and existing tests are passing.  - [x] I have run any local integration tests and made sure that nothing is broken.      Thank you for submitting!  
https://github.com/greenbone/python-gvm/pull/193	3	readability	2020-02-25 11:44:32	Improve readability of conditionals	Address anti-pattern in conditionals: Use `if foo is not None` instead  of `if not foo is None` and `if foo not in (set)` instead of `if not foo  in (set)`.    See  https://www.python.org/dev/peps/pep-0008/#programming-recommendations  for recommendation.          Describe what changes are being made, e.g. which feature/bug is being    developed/fixed in this PR?       **Checklist**:       add "N/A" to the end of each line not applicable to your changes         to check an item, place an "x" in the box like so: "- [x] Tests"      - [ ] Tests N/A  - [ ] [CHANGELOG](https://github.com/greenbone/python-gvm/blob/master/CHANGELOG.md) Entry N/A  - [ ] Documentation N/A  
https://github.com/GridTools/gt4py/pull/392	3	readability	2021-04-12 12:45:41	Improve test suite readability	This PR modifies the `_run_test_implementation` method of the test suites. It removes a lot of unnecessary code, adds some comments and improves readability in general.
https://github.com/GridTools/gt4py/pull/1752	5	readability	2024-12-05 09:03:49	style[cartesian]: readability improvements and more type hints	    Delete this comment and add a proper description of the changes contained in this PR. The text here will be used in the commit message since the approved PRs are always squash-merged. The preferred format is:    - PR Title:  type>[ scope>]:  one-line-summary>         type>:          - build: Changes that affect the build system or external dependencies          - ci: Changes to our CI configuration files and scripts          - docs: Documentation only changes          - feat: A new feature          - fix: A bug fix          - perf: A code change that improves performance          - refactor: A code change that neither fixes a bug nor adds a feature          - style: Changes that do not affect the meaning of the code          - test: Adding missing tests or correcting existing tests         scope>: cartesian | eve | next | storage      # ONLY if changes are limited to a specific subsytem    - PR Description:        Description of the main changes with links to appropriate issues/documents/references/...       ## Description    This PR detaches a couple of cleanups in the dace backend from the [in-progress gt4py/dace bridge](https://github.com/GridTools/gt4py/compare/main...romanc:gt4py:romanc/bridge-on-top-of-cleanups): mostly readability improvements and some easy type hints. There's also the occasional unused variable / argument in here.    ## Requirements    - [ ] All fixes and/or new features come with corresponding tests.    N/A: mypy is happy with the new type hints  - [ ] Important design decisions have been documented in the approriate ADR inside the [docs/development/ADRs/](docs/development/ADRs/Index.md) folder.    N/A    /cc @twicki @FlorianDeconinck I've been reading more code "outside my comfort zone" today leading to this small cleanup PR
https://github.com/h2oai/genai-app-store-apps/pull/31	1	readability	2023-12-01 00:48:02	Readability updates to SEC-10K app	* Create a robust readme for getting started  * Added more details to long description  * Add more app comments  * Added user analytics  
https://github.com/hardcoretech/data-spec-validator/pull/12	7	readability	2021-11-22 07:15:56	refactor(PLM-165): Improve Error Msg Readability & Bumpup version to  	 1.4.0    [Why]  1. When key is absent, we may show unknowfieldvalue class object  2. For some range validator, improve the error message description  3. Make the string value can be displayed correctly in error message by repr    [How]  1. Replace the unknowfieldvalue object into other message  2. Use repr  3. Revise the error message  4. Add test case    [PLM-156]    Why need this change ? / Root Cause :  --------------      Changed Made :  --------------      Test Scope / Change Impact :  --------------    [PLM-156]: https://hardcoretech.atlassian.net/browse/PLM-156?atlOrigin=eyJpIjoiNWRkNTljNzYxNjVmNDY3MDlhMDU5Y2ZhYzA5YTRkZjUiLCJwIjoiZ2l0aHViLWNvbS1KU1cifQ
https://github.com/HathorNetwork/hathor-core/pull/562	1	readability	2023-04-27 18:07:57	refactor(wallet): Reduce indentations to increase readability	## Acceptance criteria    1) Remove indentation for readability without changing the behavior.
https://github.com/HazyResearch/fonduer/pull/237	1	readability	2019-04-04 05:17:52	Refactor TokenPreservingTokenizer for readability	1. `doc = custom_tokenizer()` is not quite easy to understand because `TokenPreservingTokenizer.__call__` has a different API from spaCy's `Tokenizer.__call__`, which takes a string as an input.  2. `all_input_tokens` and `all_spaces` should not be member variables. First time call `custom_tokenizer()` is fine, but the second time call returns an unexpected result.
https://github.com/helmholtz-analytics/heat/pull/1150	80	readability	2023-06-20 11:50:33	Refactoring for efficiency and readability	## Description  I found that in many places the code can be updated to make it more readable and clean. So, I went through most of the files and changed some of their code to make them better. **For example: In many places, an f-string could have been used but it was not used, So I used f-strings in those places. In some places, if conditions could be merged but they were not, So, I merged them. Replaced a few nested for loops with itertools.product, and made a few similar small updates to make the code cleaner.**    ## Changes proposed:  - Made some simple changes to many files and tried to improve the overall code quality.    ## Type of change  - Updated the code in many files to make them a little cleaner and better.    ## Due Diligence  - [x] Documentation updated (if needed)  - [x] Title of PR is suitable for corresponding CHANGELOG entry    #### Does this change modify the behaviour of other functions? If so, which?  No  
https://github.com/helmholtz-analytics/heat/pull/1211	13	readability	2023-10-12 04:37:21	Updated `.pre-commit-config.yaml` file and reformatted few files for better readability.	## Due Diligence    - Please address the following points before setting your PR "ready for review".  -   - General:      - [x]  **base branch** must be `main` for new features, latest release branch (e.g. `release/1.3.x`) for bug fixes      - [x]  **title** of the PR is suitable to appear in the [Release Notes](https://github.com/helmholtz-analytics/heat/releases/latest)  - Implementation:      - [x] unit tests: all split configurations tested      - [x] unit tests: multiple dtypes tested      - [x] documentation updated where needed    ## Description  Reformatted files for better readability and according to latest Python standards by using f-strings instead of the old literal formatting method. To do this I used the automated tool [Flynt](https://github.com/ikamensh/flynt).  Also, Updated the (`.pre-commit-config.yaml`) file.    ## Type of change        ## Memory requirements      ## Performance      #### Does this change modify the behaviour of other functions? If so, which?  No.  
https://github.com/HewlettPackard/py-spiffe/pull/79	2	readability	2021-04-08 16:00:57	Improving test_jwt_svid.py readability	- removed duplicated code  - use create_jwt function where applicable  this addresses #74
https://github.com/hipster-philology/pyrrha/pull/47	17	readability	2018-04-06 10:17:18	Add bold to the focused word in context for readability	Changed required by @ArianePinche in #44     This pull requests breaks the former data model, you'll need to export / import your old corpora.
https://github.com/HLasse/TextDescriptives/pull/233	1	readability	2023-05-03 07:17:15	docs: Updated documentation to include description of readability scores	- Added desc. of readability scores  - Relaxed dev. dependencies  - Removed error from notebook    Fixes #232 
https://github.com/home-assistant/core/pull/21528	1	readability	2019-02-28 12:05:41	Update person variable name for readability	## Description:    Updated variable name for readability    ## Checklist:    - [x] The code change is tested and works locally.    - [x] Local tests pass with `tox`. **Your PR cannot be merged unless tests pass**    - [x] There is no commented out code in this PR.    If user exposed functionality or configuration variables are added/changed:    - [ ] Documentation added/updated in [home-assistant.io](https://github.com/home-assistant/home-assistant.io)    If the code communicates with devices, web services, or third-party tools:    - [ ] New dependencies have been added to the `REQUIREMENTS` variable ([example][ex-requir]).    - [ ] New dependencies are only imported inside functions that use them ([example][ex-import]).    - [ ] New or updated dependencies have been added to `requirements_all.txt` by running `script/gen_requirements_all.py`.    - [ ] New files were added to `.coveragerc`.    If the code does not interact with devices:    - [ ] Tests have been added to verify that the new code works.    [ex-requir]: https://github.com/home-assistant/home-assistant/blob/dev/homeassistant/components/keyboard/__init__.py#L14  [ex-import]: https://github.com/home-assistant/home-assistant/blob/dev/homeassistant/components/keyboard/__init__.py#L23  
https://github.com/home-assistant/core/pull/40223	2	readability	2020-09-23 16:57:35	Adjust safe_theme for better readability	      You are amazing! Thanks for contributing to our project!    Please, DO NOT DELETE ANY TEXT from this template! (unless instructed).     ## Breaking change        If your PR contains a breaking change for existing users, it is important    to tell them what breaks, how to make it work again and why we did this.    This piece of text is published with the release notes, so it helps if you    write it towards our users, not us.    Note: Remove this section if this PR is NOT a breaking change.         ## Proposed change    The current accent color is quite light, making any white text inside of it very hard to read.    Before:  ![image](https://user-images.githubusercontent.com/114137/93573092-02c40480-f997-11ea-9764-869ca871b8ef.png)    After:  ![image](https://user-images.githubusercontent.com/114137/93611206-4e45d500-f9ce-11ea-9714-a5de2d364703.png)        ## Type of change        What type of change does your PR introduce to Home Assistant?    NOTE: Please, check only 1! box!    If your PR requires multiple boxes to be checked, you'll most likely need to    split it into multiple PRs. This makes things easier and faster to code review.       - [ ] Dependency upgrade  - [ ] Bugfix (non-breaking change which fixes an issue)  - [ ] New integration (thank you!)  - [ ] New feature (which adds functionality to an existing integration)  - [ ] Breaking change (fix/feature causing existing functionality to break)  - [X] Code quality improvements to existing code or addition of tests    ## Example entry for `configuration.yaml`:        Supplying a configuration snippet, makes it easier for a maintainer to test    your PR. Furthermore, for new integrations, it gives an impression of how    the configuration would look like.    Note: Remove this section if this PR does not have an example entry.       ```yaml  # Example configuration.yaml    ```    ## Additional information        Details are important, and help maintainers processing your PR.    Please be sure to fill out additional details, if applicable.       - This PR fixes or closes issue: fixes #  - This PR is related to issue:   - Link to documentation pull request:     ## Checklist        Put an `x` in the boxes that apply. You can also fill these out after    creating the PR. If you're unsure about any of them, don't hesitate to ask.    We're here to help! This is simply a reminder of what we are going to look    for before merging your code.       - [X] The code change is tested and works locally.  - [ ] Local tests pass. **Your PR cannot be merged unless tests pass**  - [X] There is no commented out code in this PR.  - [X] I have followed the [development checklist][dev-checklist]  - [ ] The code has been formatted using Black (`black --fast homeassistant tests`)  - [ ] Tests have been added to verify that the new code works.    If user exposed functionality or configuration variables are added/changed:    - [ ] Documentation added/updated for [www.home-assistant.io][docs-repository]    If the code communicates with devices, web services, or third-party tools:    - [ ] The [manifest file][manifest-docs] has all fields filled out correctly.          Updated and included derived files by running: `python3 -m script.hassfest`.  - [ ] New or updated dependencies have been added to `requirements_all.txt`.          Updated by running `python3 -m script.gen_requirements_all`.  - [ ] Untested files have been added to `.coveragerc`.    The integration reached or maintains the following [Integration Quality Scale][quality-scale]:        The Integration Quality Scale scores an integration on the code quality    and user experience. Each level of the quality scale consists of a list    of requirements. We highly recommend getting your integration scored!       - [ ] No score or internal  - [ ]  Silver  - [ ]  Gold  - [ ]  Platinum          This project is very active and we have a high turnover of pull requests.      Unfortunately, the number of incoming pull requests is higher than what our    reviewers can review and merge so there is a long backlog of pull requests    waiting for review. You can help here!        By reviewing another pull request, you will help raise the code quality of    that pull request and the final review will be faster. This way the general    pace of pull request reviews will go up and your wait time will go down.        When picking a pull request to review, try to choose one that hasn't yet    been reviewed.      Thanks for helping out!       To help with the load of incoming pull requests:    - [ ] I have reviewed two other [open pull requests][prs] in this repository.    [prs]: https://github.com/home-assistant/core/pulls?q=is%3Aopen+is%3Apr+-author%3A%40me+-draft%3Atrue+-label%3Awaiting-for-upstream+sort%3Acreated-asc+-review%3Aapproved          Thank you for contributing  3      Below, some useful links you could explore:     [dev-checklist]: https://developers.home-assistant.io/docs/en/development_checklist.html  [manifest-docs]: https://developers.home-assistant.io/docs/en/creating_integration_manifest.html  [quality-scale]: https://developers.home-assistant.io/docs/en/next/integration_quality_scale_index.html  [docs-repository]: https://github.com/home-assistant/home-assistant.io  
https://github.com/home-assistant/core/pull/42169	1	readability	2020-10-22 11:00:56	Improve the readability of the config flow code	      You are amazing! Thanks for contributing to our project!    Please, DO NOT DELETE ANY TEXT from this template! (unless instructed).     ## Breaking change        If your PR contains a breaking change for existing users, it is important    to tell them what breaks, how to make it work again and why we did this.    This piece of text is published with the release notes, so it helps if you    write it towards our users, not us.    Note: Remove this section if this PR is NOT a breaking change.         ## Proposed change        Describe the big picture of your changes here to communicate to the    maintainers why we should accept this pull request. If it fixes a bug    or resolves a feature request, be sure to link to that issue in the    additional information section.     Improve the readability of the scaffold config flow.    ## Type of change        What type of change does your PR introduce to Home Assistant?    NOTE: Please, check only 1! box!    If your PR requires multiple boxes to be checked, you'll most likely need to    split it into multiple PRs. This makes things easier and faster to code review.       - [ ] Dependency upgrade  - [ ] Bugfix (non-breaking change which fixes an issue)  - [ ] New integration (thank you!)  - [ ] New feature (which adds functionality to an existing integration)  - [ ] Breaking change (fix/feature causing existing functionality to break)  - [ ] Code quality improvements to existing code or addition of tests    ## Example entry for `configuration.yaml`:        Supplying a configuration snippet, makes it easier for a maintainer to test    your PR. Furthermore, for new integrations, it gives an impression of how    the configuration would look like.    Note: Remove this section if this PR does not have an example entry.       ```yaml  # Example configuration.yaml    ```    ## Additional information        Details are important, and help maintainers processing your PR.    Please be sure to fill out additional details, if applicable.       - This PR fixes or closes issue: fixes #  - This PR is related to issue:   - Link to documentation pull request:     ## Checklist        Put an `x` in the boxes that apply. You can also fill these out after    creating the PR. If you're unsure about any of them, don't hesitate to ask.    We're here to help! This is simply a reminder of what we are going to look    for before merging your code.       - [ ] The code change is tested and works locally.  - [ ] Local tests pass. **Your PR cannot be merged unless tests pass**  - [ ] There is no commented out code in this PR.  - [ ] I have followed the [development checklist][dev-checklist]  - [ ] The code has been formatted using Black (`black --fast homeassistant tests`)  - [ ] Tests have been added to verify that the new code works.    If user exposed functionality or configuration variables are added/changed:    - [ ] Documentation added/updated for [www.home-assistant.io][docs-repository]    If the code communicates with devices, web services, or third-party tools:    - [ ] The [manifest file][manifest-docs] has all fields filled out correctly.          Updated and included derived files by running: `python3 -m script.hassfest`.  - [ ] New or updated dependencies have been added to `requirements_all.txt`.          Updated by running `python3 -m script.gen_requirements_all`.  - [ ] Untested files have been added to `.coveragerc`.    The integration reached or maintains the following [Integration Quality Scale][quality-scale]:        The Integration Quality Scale scores an integration on the code quality    and user experience. Each level of the quality scale consists of a list    of requirements. We highly recommend getting your integration scored!       - [ ] No score or internal  - [ ]  Silver  - [ ]  Gold  - [ ]  Platinum          This project is very active and we have a high turnover of pull requests.      Unfortunately, the number of incoming pull requests is higher than what our    reviewers can review and merge so there is a long backlog of pull requests    waiting for review. You can help here!        By reviewing another pull request, you will help raise the code quality of    that pull request and the final review will be faster. This way the general    pace of pull request reviews will go up and your wait time will go down.        When picking a pull request to review, try to choose one that hasn't yet    been reviewed.      Thanks for helping out!       To help with the load of incoming pull requests:    - [ ] I have reviewed two other [open pull requests][prs] in this repository.    [prs]: https://github.com/home-assistant/core/pulls?q=is%3Aopen+is%3Apr+-author%3A%40me+-draft%3Atrue+-label%3Awaiting-for-upstream+sort%3Acreated-desc+review%3Anone          Thank you for contributing  3      Below, some useful links you could explore:     [dev-checklist]: https://developers.home-assistant.io/docs/en/development_checklist.html  [manifest-docs]: https://developers.home-assistant.io/docs/en/creating_integration_manifest.html  [quality-scale]: https://developers.home-assistant.io/docs/en/next/integration_quality_scale_index.html  [docs-repository]: https://github.com/home-assistant/home-assistant.io  
https://github.com/home-assistant/core/pull/51222	1	readability	2021-05-29 14:08:46	Reorganize SonosSpeaker class for readability	      You are amazing! Thanks for contributing to our project!    Please, DO NOT DELETE ANY TEXT from this template! (unless instructed).     ## Proposed change        Describe the big picture of your changes here to communicate to the    maintainers why we should accept this pull request. If it fixes a bug    or resolves a feature request, be sure to link to that issue in the    additional information section.     Add comments and reorganize the ordering of attributes and methods to improve readability. No functional changes.      ## Type of change        What type of change does your PR introduce to Home Assistant?    NOTE: Please, check only 1! box!    If your PR requires multiple boxes to be checked, you'll most likely need to    split it into multiple PRs. This makes things easier and faster to code review.       - [ ] Dependency upgrade  - [ ] Bugfix (non-breaking change which fixes an issue)  - [ ] New integration (thank you!)  - [ ] New feature (which adds functionality to an existing integration)  - [ ] Breaking change (fix/feature causing existing functionality to break)  - [x] Code quality improvements to existing code or addition of tests    ## Additional information        Details are important, and help maintainers processing your PR.    Please be sure to fill out additional details, if applicable.       - This PR fixes or closes issue: fixes #  - This PR is related to issue:   - Link to documentation pull request:     ## Checklist        Put an `x` in the boxes that apply. You can also fill these out after    creating the PR. If you're unsure about any of them, don't hesitate to ask.    We're here to help! This is simply a reminder of what we are going to look    for before merging your code.       - [x] The code change is tested and works locally.  - [x] Local tests pass. **Your PR cannot be merged unless tests pass**  - [x] There is no commented out code in this PR.  - [x] I have followed the [development checklist][dev-checklist]  - [x] The code has been formatted using Black (`black --fast homeassistant tests`)  - [ ] Tests have been added to verify that the new code works.    The integration reached or maintains the following [Integration Quality Scale][quality-scale]:        The Integration Quality Scale scores an integration on the code quality    and user experience. Each level of the quality scale consists of a list    of requirements. We highly recommend getting your integration scored!       - [ ] No score or internal  - [ ]  Silver  - [ ]  Gold  - [ ]  Platinum          This project is very active and we have a high turnover of pull requests.      Unfortunately, the number of incoming pull requests is higher than what our    reviewers can review and merge so there is a long backlog of pull requests    waiting for review. You can help here!        By reviewing another pull request, you will help raise the code quality of    that pull request and the final review will be faster. This way the general    pace of pull request reviews will go up and your wait time will go down.        When picking a pull request to review, try to choose one that hasn't yet    been reviewed.      Thanks for helping out!       To help with the load of incoming pull requests:    - [ ] I have reviewed two other [open pull requests][prs] in this repository.    [prs]: https://github.com/home-assistant/core/pulls?q=is%3Aopen+is%3Apr+-author%3A%40me+-draft%3Atrue+-label%3Awaiting-for-upstream+sort%3Acreated-desc+review%3Anone          Thank you for contributing  3      Below, some useful links you could explore:     [dev-checklist]: https://developers.home-assistant.io/docs/en/development_checklist.html  [manifest-docs]: https://developers.home-assistant.io/docs/en/creating_integration_manifest.html  [quality-scale]: https://developers.home-assistant.io/docs/en/next/integration_quality_scale_index.html  [docs-repository]: https://github.com/home-assistant/home-assistant.io  
https://github.com/home-assistant/core/pull/54251	1	readability	2021-08-09 22:11:21	Minor motionEye readability improvement	## Proposed change        Describe the big picture of your changes here to communicate to the    maintainers why we should accept this pull request. If it fixes a bug    or resolves a feature request, be sure to link to that issue in the    additional information section.     Minor readability improvement: avoid use of logical OR `|`    Whilst using a logical OR `|` for this felt novel at the time, it has now tripped up two codereviewers on separate occasions who appropriately reach the conclusion that it's likely a mistake. It's not a functionality mistake, but it is a readability mistake. Lets not waste anyone else's time.    ## Type of change        What type of change does your PR introduce to Home Assistant?    NOTE: Please, check only 1! box!    If your PR requires multiple boxes to be checked, you'll most likely need to    split it into multiple PRs. This makes things easier and faster to code review.       - [ ] Dependency upgrade  - [ ] Bugfix (non-breaking change which fixes an issue)  - [ ] New integration (thank you!)  - [ ] New feature (which adds functionality to an existing integration)  - [ ] Breaking change (fix/feature causing existing functionality to break)  - [x] Code quality improvements to existing code or addition of tests    ## Additional information        Details are important, and help maintainers processing your PR.    Please be sure to fill out additional details, if applicable.       - This PR fixes or closes issue: fixes #  - This PR is related to issue: https://github.com/home-assistant/core/pull/54225  - Link to documentation pull request:     ## Checklist        Put an `x` in the boxes that apply. You can also fill these out after    creating the PR. If you're unsure about any of them, don't hesitate to ask.    We're here to help! This is simply a reminder of what we are going to look    for before merging your code.       - [x] The code change is tested and works locally.  - [x] Local tests pass. **Your PR cannot be merged unless tests pass**  - [x] There is no commented out code in this PR.  - [x] I have followed the [development checklist][dev-checklist]  - [x] The code has been formatted using Black (`black --fast homeassistant tests`)  - [x] Tests have been added to verify that the new code works.    If user exposed functionality or configuration variables are added/changed:    - [ ] Documentation added/updated for [www.home-assistant.io][docs-repository]    If the code communicates with devices, web services, or third-party tools:    - [ ] The [manifest file][manifest-docs] has all fields filled out correctly.          Updated and included derived files by running: `python3 -m script.hassfest`.  - [ ] New or updated dependencies have been added to `requirements_all.txt`.          Updated by running `python3 -m script.gen_requirements_all`.  - [ ] Untested files have been added to `.coveragerc`.    The integration reached or maintains the following [Integration Quality Scale][quality-scale]:        The Integration Quality Scale scores an integration on the code quality    and user experience. Each level of the quality scale consists of a list    of requirements. We highly recommend getting your integration scored!       - [x] No score or internal  - [ ]  Silver  - [ ]  Gold  - [ ]  Platinum          This project is very active and we have a high turnover of pull requests.      Unfortunately, the number of incoming pull requests is higher than what our    reviewers can review and merge so there is a long backlog of pull requests    waiting for review. You can help here!        By reviewing another pull request, you will help raise the code quality of    that pull request and the final review will be faster. This way the general    pace of pull request reviews will go up and your wait time will go down.        When picking a pull request to review, try to choose one that hasn't yet    been reviewed.      Thanks for helping out!       To help with the load of incoming pull requests:    - [ ] I have reviewed two other [open pull requests][prs] in this repository.    [prs]: https://github.com/home-assistant/core/pulls?q=is%3Aopen+is%3Apr+-author%3A%40me+-draft%3Atrue+-label%3Awaiting-for-upstream+sort%3Acreated-desc+review%3Anone          Thank you for contributing  3      Below, some useful links you could explore:     [dev-checklist]: https://developers.home-assistant.io/docs/en/development_checklist.html  [manifest-docs]: https://developers.home-assistant.io/docs/en/creating_integration_manifest.html  [quality-scale]: https://developers.home-assistant.io/docs/en/next/integration_quality_scale_index.html  [docs-repository]: https://github.com/home-assistant/home-assistant.io  
https://github.com/home-assistant/core/pull/60975	1	readability	2021-12-04 09:29:27	Improve asuswrt code readability	      You are amazing! Thanks for contributing to our project!    Please, DO NOT DELETE ANY TEXT from this template! (unless instructed).           If your PR contains a breaking change for existing users, it is important    to tell them what breaks, how to make it work again and why we did this.    This piece of text is published with the release notes, so it helps if you    write it towards our users, not us.    Note: Remove this section if this PR is NOT a breaking change.         ## Proposed change        Describe the big picture of your changes here to communicate to the    maintainers why we should accept this pull request. If it fixes a bug    or resolves a feature request, be sure to link to that issue in the    additional information section.     Improve code readability while initiating sensors in Asuswrt.  As suggested in #58303     ## Type of change        What type of change does your PR introduce to Home Assistant?    NOTE: Please, check only 1! box!    If your PR requires multiple boxes to be checked, you'll most likely need to    split it into multiple PRs. This makes things easier and faster to code review.       - [ ] Dependency upgrade  - [ ] Bugfix (non-breaking change which fixes an issue)  - [ ] New integration (thank you!)  - [ ] New feature (which adds functionality to an existing integration)  - [ ] Breaking change (fix/feature causing existing functionality to break)  - [X] Code quality improvements to existing code or addition of tests    ## Additional information        Details are important, and help maintainers processing your PR.    Please be sure to fill out additional details, if applicable.       - This PR fixes or closes issue: fixes #  - This PR is related to issue:   - Link to documentation pull request:     ## Checklist        Put an `x` in the boxes that apply. You can also fill these out after    creating the PR. If you're unsure about any of them, don't hesitate to ask.    We're here to help! This is simply a reminder of what we are going to look    for before merging your code.       - [ ] The code change is tested and works locally.  - [ ] Local tests pass. **Your PR cannot be merged unless tests pass**  - [ ] There is no commented out code in this PR.  - [ ] I have followed the [development checklist][dev-checklist]  - [ ] The code has been formatted using Black (`black --fast homeassistant tests`)  - [ ] Tests have been added to verify that the new code works.    If user exposed functionality or configuration variables are added/changed:    - [ ] Documentation added/updated for [www.home-assistant.io][docs-repository]    If the code communicates with devices, web services, or third-party tools:    - [ ] The [manifest file][manifest-docs] has all fields filled out correctly.          Updated and included derived files by running: `python3 -m script.hassfest`.  - [ ] New or updated dependencies have been added to `requirements_all.txt`.          Updated by running `python3 -m script.gen_requirements_all`.  - [ ] For the updated dependencies - a link to the changelog, or at minimum a diff between library versions is added to the PR description.  - [ ] Untested files have been added to `.coveragerc`.    The integration reached or maintains the following [Integration Quality Scale][quality-scale]:        The Integration Quality Scale scores an integration on the code quality    and user experience. Each level of the quality scale consists of a list    of requirements. We highly recommend getting your integration scored!       - [ ] No score or internal  - [ ]  Silver  - [ ]  Gold  - [ ]  Platinum          This project is very active and we have a high turnover of pull requests.      Unfortunately, the number of incoming pull requests is higher than what our    reviewers can review and merge so there is a long backlog of pull requests    waiting for review. You can help here!        By reviewing another pull request, you will help raise the code quality of    that pull request and the final review will be faster. This way the general    pace of pull request reviews will go up and your wait time will go down.        When picking a pull request to review, try to choose one that hasn't yet    been reviewed.      Thanks for helping out!       To help with the load of incoming pull requests:    - [ ] I have reviewed two other [open pull requests][prs] in this repository.    [prs]: https://github.com/home-assistant/core/pulls?q=is%3Aopen+is%3Apr+-author%3A%40me+-draft%3Atrue+-label%3Awaiting-for-upstream+sort%3Acreated-desc+review%3Anone          Thank you for contributing  3      Below, some useful links you could explore:     [dev-checklist]: https://developers.home-assistant.io/docs/en/development_checklist.html  [manifest-docs]: https://developers.home-assistant.io/docs/en/creating_integration_manifest.html  [quality-scale]: https://developers.home-assistant.io/docs/en/next/integration_quality_scale_index.html  [docs-repository]: https://github.com/home-assistant/home-assistant.io  
https://github.com/home-assistant/core/pull/64291	5	readability	2022-01-17 13:19:11	Fix comments, improve readability in Cloud	      You are amazing! Thanks for contributing to our project!    Please, DO NOT DELETE ANY TEXT from this template! (unless instructed).     ## Proposed change        Describe the big picture of your changes here to communicate to the    maintainers why we should accept this pull request. If it fixes a bug    or resolves a feature request, be sure to link to that issue in the    additional information section.     Fix comments, improve readability in Cloud    ## Type of change        What type of change does your PR introduce to Home Assistant?    NOTE: Please, check only 1! box!    If your PR requires multiple boxes to be checked, you'll most likely need to    split it into multiple PRs. This makes things easier and faster to code review.       - [ ] Dependency upgrade  - [ ] Bugfix (non-breaking change which fixes an issue)  - [ ] New integration (thank you!)  - [ ] New feature (which adds functionality to an existing integration)  - [ ] Breaking change (fix/feature causing existing functionality to break)  - [x] Code quality improvements to existing code or addition of tests    ## Additional information        Details are important, and help maintainers processing your PR.    Please be sure to fill out additional details, if applicable.       - This PR fixes or closes issue: fixes #  - This PR is related to issue:   - Link to documentation pull request:     ## Checklist        Put an `x` in the boxes that apply. You can also fill these out after    creating the PR. If you're unsure about any of them, don't hesitate to ask.    We're here to help! This is simply a reminder of what we are going to look    for before merging your code.       - [ ] The code change is tested and works locally.  - [ ] Local tests pass. **Your PR cannot be merged unless tests pass**  - [ ] There is no commented out code in this PR.  - [ ] I have followed the [development checklist][dev-checklist]  - [ ] The code has been formatted using Black (`black --fast homeassistant tests`)  - [ ] Tests have been added to verify that the new code works.    If user exposed functionality or configuration variables are added/changed:    - [ ] Documentation added/updated for [www.home-assistant.io][docs-repository]    If the code communicates with devices, web services, or third-party tools:    - [ ] The [manifest file][manifest-docs] has all fields filled out correctly.          Updated and included derived files by running: `python3 -m script.hassfest`.  - [ ] New or updated dependencies have been added to `requirements_all.txt`.          Updated by running `python3 -m script.gen_requirements_all`.  - [ ] For the updated dependencies - a link to the changelog, or at minimum a diff between library versions is added to the PR description.  - [ ] Untested files have been added to `.coveragerc`.    The integration reached or maintains the following [Integration Quality Scale][quality-scale]:        The Integration Quality Scale scores an integration on the code quality    and user experience. Each level of the quality scale consists of a list    of requirements. We highly recommend getting your integration scored!       - [ ] No score or internal  - [ ]  Silver  - [ ]  Gold  - [ ]  Platinum          This project is very active and we have a high turnover of pull requests.      Unfortunately, the number of incoming pull requests is higher than what our    reviewers can review and merge so there is a long backlog of pull requests    waiting for review. You can help here!        By reviewing another pull request, you will help raise the code quality of    that pull request and the final review will be faster. This way the general    pace of pull request reviews will go up and your wait time will go down.        When picking a pull request to review, try to choose one that hasn't yet    been reviewed.      Thanks for helping out!       To help with the load of incoming pull requests:    - [ ] I have reviewed two other [open pull requests][prs] in this repository.    [prs]: https://github.com/home-assistant/core/pulls?q=is%3Aopen+is%3Apr+-author%3A%40me+-draft%3Atrue+-label%3Awaiting-for-upstream+sort%3Acreated-desc+review%3Anone+-status%3Afailure          Thank you for contributing  3      Below, some useful links you could explore:     [dev-checklist]: https://developers.home-assistant.io/docs/en/development_checklist.html  [manifest-docs]: https://developers.home-assistant.io/docs/en/creating_integration_manifest.html  [quality-scale]: https://developers.home-assistant.io/docs/en/next/integration_quality_scale_index.html  [docs-repository]: https://github.com/home-assistant/home-assistant.io  
https://github.com/home-assistant/core/pull/78844	1	readability	2022-09-21 09:18:39	Improve code readability in iBeacon integration	## Proposed change        Describe the big picture of your changes here to communicate to the    maintainers why we should accept this pull request. If it fixes a bug    or resolves a feature request, be sure to link to that issue in the    additional information section.     https://github.com/home-assistant/core/pull/78671#discussion_r975100030    ## Type of change        What type of change does your PR introduce to Home Assistant?    NOTE: Please, check only 1! box!    If your PR requires multiple boxes to be checked, you'll most likely need to    split it into multiple PRs. This makes things easier and faster to code review.       - [ ] Dependency upgrade  - [ ] Bugfix (non-breaking change which fixes an issue)  - [ ] New integration (thank you!)  - [ ] New feature (which adds functionality to an existing integration)  - [ ] Deprecation (breaking change to happen in the future)  - [ ] Breaking change (fix/feature causing existing functionality to break)  - [x] Code quality improvements to existing code or addition of tests    ## Additional information        Details are important, and help maintainers processing your PR.    Please be sure to fill out additional details, if applicable.       - This PR fixes or closes issue: fixes #  - This PR is related to issue:   - Link to documentation pull request:     ## Checklist        Put an `x` in the boxes that apply. You can also fill these out after    creating the PR. If you're unsure about any of them, don't hesitate to ask.    We're here to help! This is simply a reminder of what we are going to look    for before merging your code.       - [x] The code change is tested and works locally.  - [ ] Local tests pass. **Your PR cannot be merged unless tests pass**  - [ ] There is no commented out code in this PR.  - [ ] I have followed the [development checklist][dev-checklist]  - [ ] The code has been formatted using Black (`black --fast homeassistant tests`)  - [ ] Tests have been added to verify that the new code works.    If user exposed functionality or configuration variables are added/changed:    - [ ] Documentation added/updated for [www.home-assistant.io][docs-repository]    If the code communicates with devices, web services, or third-party tools:    - [ ] The [manifest file][manifest-docs] has all fields filled out correctly.          Updated and included derived files by running: `python3 -m script.hassfest`.  - [ ] New or updated dependencies have been added to `requirements_all.txt`.          Updated by running `python3 -m script.gen_requirements_all`.  - [ ] For the updated dependencies - a link to the changelog, or at minimum a diff between library versions is added to the PR description.  - [ ] Untested files have been added to `.coveragerc`.    The integration reached or maintains the following [Integration Quality Scale][quality-scale]:        The Integration Quality Scale scores an integration on the code quality    and user experience. Each level of the quality scale consists of a list    of requirements. We highly recommend getting your integration scored!       - [ ] No score or internal  - [ ]  Silver  - [ ]  Gold  - [ ]  Platinum          This project is very active and we have a high turnover of pull requests.      Unfortunately, the number of incoming pull requests is higher than what our    reviewers can review and merge so there is a long backlog of pull requests    waiting for review. You can help here!        By reviewing another pull request, you will help raise the code quality of    that pull request and the final review will be faster. This way the general    pace of pull request reviews will go up and your wait time will go down.        When picking a pull request to review, try to choose one that hasn't yet    been reviewed.      Thanks for helping out!       To help with the load of incoming pull requests:    - [ ] I have reviewed two other [open pull requests][prs] in this repository.    [prs]: https://github.com/home-assistant/core/pulls?q=is%3Aopen+is%3Apr+-author%3A%40me+-draft%3Atrue+-label%3Awaiting-for-upstream+sort%3Acreated-desc+review%3Anone+-status%3Afailure          Thank you for contributing  3      Below, some useful links you could explore:     [dev-checklist]: https://developers.home-assistant.io/docs/en/development_checklist.html  [manifest-docs]: https://developers.home-assistant.io/docs/en/creating_integration_manifest.html  [quality-scale]: https://developers.home-assistant.io/docs/en/next/integration_quality_scale_index.html  [docs-repository]: https://github.com/home-assistant/home-assistant.io  
https://github.com/home-assistant/core/pull/81040	1	readability	2022-10-26 19:37:39	Improve readability by reducing indentation	      You are amazing! Thanks for contributing to our project!    Please, DO NOT DELETE ANY TEXT from this template! (unless instructed).       ## Proposed change  Improve readability by reducing indentation.    ## Type of change  - [ ] Dependency upgrade  - [ ] Bugfix (non-breaking change which fixes an issue)  - [ ] New integration (thank you!)  - [ ] New feature (which adds functionality to an existing integration)  - [ ] Deprecation (breaking change to happen in the future)  - [ ] Breaking change (fix/feature causing existing functionality to break)  - [x] Code quality improvements to existing code or addition of tests    ## Additional information  Based on a comment originally posted by @MartinHjelmare in https://github.com/home-assistant/core/pull/80697#discussion_r1005583992    ## Checklist  - [x] The code change is tested and works locally.  - [x] Local tests pass. **Your PR cannot be merged unless tests pass**  - [x] There is no commented out code in this PR.  - [x] I have followed the [development checklist][dev-checklist]  - [x] The code has been formatted using Black (`black --fast homeassistant tests`)  - [ ] Tests have been added to verify that the new code works.    If user exposed functionality or configuration variables are added/changed:    - [ ] Documentation added/updated for [www.home-assistant.io][docs-repository]    If the code communicates with devices, web services, or third-party tools:    - [ ] The [manifest file][manifest-docs] has all fields filled out correctly.          Updated and included derived files by running: `python3 -m script.hassfest`.  - [ ] New or updated dependencies have been added to `requirements_all.txt`.          Updated by running `python3 -m script.gen_requirements_all`.  - [ ] For the updated dependencies - a link to the changelog, or at minimum a diff between library versions is added to the PR description.  - [ ] Untested files have been added to `.coveragerc`.          This project is very active and we have a high turnover of pull requests.      Unfortunately, the number of incoming pull requests is higher than what our    reviewers can review and merge so there is a long backlog of pull requests    waiting for review. You can help here!        By reviewing another pull request, you will help raise the code quality of    that pull request and the final review will be faster. This way the general    pace of pull request reviews will go up and your wait time will go down.        When picking a pull request to review, try to choose one that hasn't yet    been reviewed.      Thanks for helping out!       To help with the load of incoming pull requests:    - [ ] I have reviewed two other [open pull requests][prs] in this repository.    [prs]: https://github.com/home-assistant/core/pulls?q=is%3Aopen+is%3Apr+-author%3A%40me+-draft%3Atrue+-label%3Awaiting-for-upstream+sort%3Acreated-desc+review%3Anone+-status%3Afailure          Thank you for contributing  3      Below, some useful links you could explore:     [dev-checklist]: https://developers.home-assistant.io/docs/en/development_checklist.html  [manifest-docs]: https://developers.home-assistant.io/docs/en/creating_integration_manifest.html  [quality-scale]: https://developers.home-assistant.io/docs/en/next/integration_quality_scale_index.html  [docs-repository]: https://github.com/home-assistant/home-assistant.io  
https://github.com/home-assistant/core/pull/82194	1	readability	2022-11-16 14:27:20	Use parameterized test for better code readability	      You are amazing! Thanks for contributing to our project!    Please, DO NOT DELETE ANY TEXT from this template! (unless instructed).           ## Proposed change        Describe the big picture of your changes here to communicate to the    maintainers why we should accept this pull request. If it fixes a bug    or resolves a feature request, be sure to link to that issue in the    additional information section.     It was suggested to use a paramterized test to avoid code duplication in tests.    ## Type of change        What type of change does your PR introduce to Home Assistant?    NOTE: Please, check only 1! box!    If your PR requires multiple boxes to be checked, you'll most likely need to    split it into multiple PRs. This makes things easier and faster to code review.       - [ ] Dependency upgrade  - [ ] Bugfix (non-breaking change which fixes an issue)  - [ ] New integration (thank you!)  - [ ] New feature (which adds functionality to an existing integration)  - [ ] Deprecation (breaking change to happen in the future)  - [ ] Breaking change (fix/feature causing existing functionality to break)  - [X] Code quality improvements to existing code or addition of tests    ## Additional information        Details are important, and help maintainers processing your PR.    Please be sure to fill out additional details, if applicable.       - This PR fixes or closes issue: fixes #  - This PR is related to issue:   - Link to documentation pull request:     ## Checklist        Put an `x` in the boxes that apply. You can also fill these out after    creating the PR. If you're unsure about any of them, don't hesitate to ask.    We're here to help! This is simply a reminder of what we are going to look    for before merging your code.       - [X] The code change is tested and works locally.  - [X] Local tests pass. **Your PR cannot be merged unless tests pass**  - [X] There is no commented out code in this PR.  - [X] I have followed the [development checklist][dev-checklist]  - [X] The code has been formatted using Black (`black --fast homeassistant tests`)  - [ ] Tests have been added to verify that the new code works.    If user exposed functionality or configuration variables are added/changed:    - [ ] Documentation added/updated for [www.home-assistant.io][docs-repository]    If the code communicates with devices, web services, or third-party tools:    - [ ] The [manifest file][manifest-docs] has all fields filled out correctly.          Updated and included derived files by running: `python3 -m script.hassfest`.  - [ ] New or updated dependencies have been added to `requirements_all.txt`.          Updated by running `python3 -m script.gen_requirements_all`.  - [ ] For the updated dependencies - a link to the changelog, or at minimum a diff between library versions is added to the PR description.  - [ ] Untested files have been added to `.coveragerc`.          This project is very active and we have a high turnover of pull requests.      Unfortunately, the number of incoming pull requests is higher than what our    reviewers can review and merge so there is a long backlog of pull requests    waiting for review. You can help here!        By reviewing another pull request, you will help raise the code quality of    that pull request and the final review will be faster. This way the general    pace of pull request reviews will go up and your wait time will go down.        When picking a pull request to review, try to choose one that hasn't yet    been reviewed.      Thanks for helping out!       To help with the load of incoming pull requests:    - [ ] I have reviewed two other [open pull requests][prs] in this repository.    [prs]: https://github.com/home-assistant/core/pulls?q=is%3Aopen+is%3Apr+-author%3A%40me+-draft%3Atrue+-label%3Awaiting-for-upstream+sort%3Acreated-desc+review%3Anone+-status%3Afailure          Thank you for contributing  3      Below, some useful links you could explore:     [dev-checklist]: https://developers.home-assistant.io/docs/en/development_checklist.html  [manifest-docs]: https://developers.home-assistant.io/docs/en/creating_integration_manifest.html  [quality-scale]: https://developers.home-assistant.io/docs/en/next/integration_quality_scale_index.html  [docs-repository]: https://github.com/home-assistant/home-assistant.io  
https://github.com/home-assistant/core/pull/87111	1	readability	2023-02-02 19:22:33	Address late review on readability sensor code	      You are amazing! Thanks for contributing to our project!    Please, DO NOT DELETE ANY TEXT from this template! (unless instructed).     ## Proposed change        Describe the big picture of your changes here to communicate to the    maintainers why we should accept this pull request. If it fixes a bug    or resolves a feature request, be sure to link to that issue in the    additional information section.     Address late review on #87013    ## Type of change        What type of change does your PR introduce to Home Assistant?    NOTE: Please, check only 1! box!    If your PR requires multiple boxes to be checked, you'll most likely need to    split it into multiple PRs. This makes things easier and faster to code review.       - [ ] Dependency upgrade  - [ ] Bugfix (non-breaking change which fixes an issue)  - [ ] New integration (thank you!)  - [ ] New feature (which adds functionality to an existing integration)  - [ ] Deprecation (breaking change to happen in the future)  - [ ] Breaking change (fix/feature causing existing functionality to break)  - [x] Code quality improvements to existing code or addition of tests    ## Additional information        Details are important, and help maintainers processing your PR.    Please be sure to fill out additional details, if applicable.       - This PR fixes or closes issue: fixes #  - This PR is related to issue:   - Link to documentation pull request:     ## Checklist        Put an `x` in the boxes that apply. You can also fill these out after    creating the PR. If you're unsure about any of them, don't hesitate to ask.    We're here to help! This is simply a reminder of what we are going to look    for before merging your code.       - [x] The code change is tested and works locally.  - [x] Local tests pass. **Your PR cannot be merged unless tests pass**  - [x] There is no commented out code in this PR.  - [x] I have followed the [development checklist][dev-checklist]  - [x] The code has been formatted using Black (`black --fast homeassistant tests`)  - [ ] Tests have been added to verify that the new code works.    If user exposed functionality or configuration variables are added/changed:    - [ ] Documentation added/updated for [www.home-assistant.io][docs-repository]    If the code communicates with devices, web services, or third-party tools:    - [ ] The [manifest file][manifest-docs] has all fields filled out correctly.          Updated and included derived files by running: `python3 -m script.hassfest`.  - [ ] New or updated dependencies have been added to `requirements_all.txt`.          Updated by running `python3 -m script.gen_requirements_all`.  - [ ] For the updated dependencies - a link to the changelog, or at minimum a diff between library versions is added to the PR description.  - [ ] Untested files have been added to `.coveragerc`.          This project is very active and we have a high turnover of pull requests.      Unfortunately, the number of incoming pull requests is higher than what our    reviewers can review and merge so there is a long backlog of pull requests    waiting for review. You can help here!        By reviewing another pull request, you will help raise the code quality of    that pull request and the final review will be faster. This way the general    pace of pull request reviews will go up and your wait time will go down.        When picking a pull request to review, try to choose one that hasn't yet    been reviewed.      Thanks for helping out!       To help with the load of incoming pull requests:    - [ ] I have reviewed two other [open pull requests][prs] in this repository.    [prs]: https://github.com/home-assistant/core/pulls?q=is%3Aopen+is%3Apr+-author%3A%40me+-draft%3Atrue+-label%3Awaiting-for-upstream+sort%3Acreated-desc+review%3Anone+-status%3Afailure          Thank you for contributing  3      Below, some useful links you could explore:     [dev-checklist]: https://developers.home-assistant.io/docs/en/development_checklist.html  [manifest-docs]: https://developers.home-assistant.io/docs/en/creating_integration_manifest.html  [quality-scale]: https://developers.home-assistant.io/docs/en/next/integration_quality_scale_index.html  [docs-repository]: https://github.com/home-assistant/home-assistant.io  
https://github.com/home-assistant/core/pull/90617	1	readability	2023-04-01 14:24:02	Adjust context id variable names in the logbook processor to improve readability	  ## Proposed change        Describe the big picture of your changes here to communicate to the    maintainers why we should accept this pull request. If it fixes a bug    or resolves a feature request, be sure to link to that issue in the    additional information section.     This is not a functional change.    There were some places were we used context_id that should have been context_id_bin    ## Type of change        What type of change does your PR introduce to Home Assistant?    NOTE: Please, check only 1! box!    If your PR requires multiple boxes to be checked, you'll most likely need to    split it into multiple PRs. This makes things easier and faster to code review.       - [ ] Dependency upgrade  - [ ] Bugfix (non-breaking change which fixes an issue)  - [ ] New integration (thank you!)  - [ ] New feature (which adds functionality to an existing integration)  - [ ] Deprecation (breaking change to happen in the future)  - [ ] Breaking change (fix/feature causing existing functionality to break)  - [x] Code quality improvements to existing code or addition of tests    ## Additional information        Details are important, and help maintainers processing your PR.    Please be sure to fill out additional details, if applicable.       - This PR fixes or closes issue: fixes #  - This PR is related to issue:   - Link to documentation pull request:     ## Checklist        Put an `x` in the boxes that apply. You can also fill these out after    creating the PR. If you're unsure about any of them, don't hesitate to ask.    We're here to help! This is simply a reminder of what we are going to look    for before merging your code.       - [ ] The code change is tested and works locally.  - [ ] Local tests pass. **Your PR cannot be merged unless tests pass**  - [ ] There is no commented out code in this PR.  - [ ] I have followed the [development checklist][dev-checklist]  - [ ] I have followed the [perfect PR recommendations][perfect-pr]  - [ ] The code has been formatted using Black (`black --fast homeassistant tests`)  - [ ] Tests have been added to verify that the new code works.    If user exposed functionality or configuration variables are added/changed:    - [ ] Documentation added/updated for [www.home-assistant.io][docs-repository]    If the code communicates with devices, web services, or third-party tools:    - [ ] The [manifest file][manifest-docs] has all fields filled out correctly.          Updated and included derived files by running: `python3 -m script.hassfest`.  - [ ] New or updated dependencies have been added to `requirements_all.txt`.          Updated by running `python3 -m script.gen_requirements_all`.  - [ ] For the updated dependencies - a link to the changelog, or at minimum a diff between library versions is added to the PR description.  - [ ] Untested files have been added to `.coveragerc`.          This project is very active and we have a high turnover of pull requests.      Unfortunately, the number of incoming pull requests is higher than what our    reviewers can review and merge so there is a long backlog of pull requests    waiting for review. You can help here!        By reviewing another pull request, you will help raise the code quality of    that pull request and the final review will be faster. This way the general    pace of pull request reviews will go up and your wait time will go down.        When picking a pull request to review, try to choose one that hasn't yet    been reviewed.      Thanks for helping out!       To help with the load of incoming pull requests:    - [ ] I have reviewed two other [open pull requests][prs] in this repository.    [prs]: https://github.com/home-assistant/core/pulls?q=is%3Aopen+is%3Apr+-author%3A%40me+-draft%3Atrue+-label%3Awaiting-for-upstream+sort%3Acreated-desc+review%3Anone+-status%3Afailure          Thank you for contributing  3      Below, some useful links you could explore:     [dev-checklist]: https://developers.home-assistant.io/docs/en/development_checklist.html  [manifest-docs]: https://developers.home-assistant.io/docs/en/creating_integration_manifest.html  [quality-scale]: https://developers.home-assistant.io/docs/en/next/integration_quality_scale_index.html  [docs-repository]: https://github.com/home-assistant/home-assistant.io  [perfect-pr]: https://developers.home-assistant.io/docs/review-process/#creating-the-perfect-pr  
https://github.com/home-assistant/core/pull/119558	1	readability	2024-06-13 07:31:30	Improve code readability	      You are amazing! Thanks for contributing to our project!    Please, DO NOT DELETE ANY TEXT from this template! (unless instructed).       ## Proposed change        Describe the big picture of your changes here to communicate to the    maintainers why we should accept this pull request. If it fixes a bug    or resolves a feature request, be sure to link to that issue in the    additional information section.       Improve code readability    ## Type of change        What type of change does your PR introduce to Home Assistant?    NOTE: Please, check only 1! box!    If your PR requires multiple boxes to be checked, you'll most likely need to    split it into multiple PRs. This makes things easier and faster to code review.       - [ ] Dependency upgrade  - [ ] Bugfix (non-breaking change which fixes an issue)  - [ ] New integration (thank you!)  - [ ] New feature (which adds functionality to an existing integration)  - [ ] Deprecation (breaking change to happen in the future)  - [ ] Breaking change (fix/feature causing existing functionality to break)  - [x] Code quality improvements to existing code or addition of tests    ## Additional information        Details are important, and help maintainers processing your PR.    Please be sure to fill out additional details, if applicable.       - This PR fixes or closes issue: fixes #  - This PR is related to issue: https://github.com/home-assistant/core/pull/118686#discussion_r1632126166  - Link to documentation pull request:     ## Checklist        Put an `x` in the boxes that apply. You can also fill these out after    creating the PR. If you're unsure about any of them, don't hesitate to ask.    We're here to help! This is simply a reminder of what we are going to look    for before merging your code.       - [x] The code change is tested and works locally.  - [x] Local tests pass. **Your PR cannot be merged unless tests pass**  - [x] There is no commented out code in this PR.  - [x] I have followed the [development checklist][dev-checklist]  - [x] I have followed the [perfect PR recommendations][perfect-pr]  - [x] The code has been formatted using Ruff (`ruff format homeassistant tests`)  - [x] Tests have been added to verify that the new code works.    If user exposed functionality or configuration variables are added/changed:    - [ ] Documentation added/updated for [www.home-assistant.io][docs-repository]    If the code communicates with devices, web services, or third-party tools:    - [ ] The [manifest file][manifest-docs] has all fields filled out correctly.          Updated and included derived files by running: `python3 -m script.hassfest`.  - [ ] New or updated dependencies have been added to `requirements_all.txt`.          Updated by running `python3 -m script.gen_requirements_all`.  - [ ] For the updated dependencies - a link to the changelog, or at minimum a diff between library versions is added to the PR description.  - [ ] Untested files have been added to `.coveragerc`.          This project is very active and we have a high turnover of pull requests.      Unfortunately, the number of incoming pull requests is higher than what our    reviewers can review and merge so there is a long backlog of pull requests    waiting for review. You can help here!        By reviewing another pull request, you will help raise the code quality of    that pull request and the final review will be faster. This way the general    pace of pull request reviews will go up and your wait time will go down.        When picking a pull request to review, try to choose one that hasn't yet    been reviewed.      Thanks for helping out!       To help with the load of incoming pull requests:    - [ ] I have reviewed two other [open pull requests][prs] in this repository.    [prs]: https://github.com/home-assistant/core/pulls?q=is%3Aopen+is%3Apr+-author%3A%40me+-draft%3Atrue+-label%3Awaiting-for-upstream+sort%3Acreated-desc+review%3Anone+-status%3Afailure          Thank you for contributing  3      Below, some useful links you could explore:     [dev-checklist]: https://developers.home-assistant.io/docs/development_checklist/  [manifest-docs]: https://developers.home-assistant.io/docs/creating_integration_manifest/  [quality-scale]: https://developers.home-assistant.io/docs/integration_quality_scale_index/  [docs-repository]: https://github.com/home-assistant/home-assistant.io  [perfect-pr]: https://developers.home-assistant.io/docs/review-process/#creating-the-perfect-pr  
https://github.com/home-assistant/core/pull/123173	1	readability	2024-08-05 09:18:04	Add spaces for readability in licenses.py	      You are amazing! Thanks for contributing to our project!    Please, DO NOT DELETE ANY TEXT from this template! (unless instructed).       ## Proposed change    Add a space before the package name in the license check.    Before:  ```  We could not detect an OSI-approved license forpyElectra@1.2.3: UNKNOWN  ```    After:    ```  We could not detect an OSI-approved license for pyElectra@1.2.3: UNKNOWN  ```    ## Type of change        What type of change does your PR introduce to Home Assistant?    NOTE: Please, check only 1! box!    If your PR requires multiple boxes to be checked, you'll most likely need to    split it into multiple PRs. This makes things easier and faster to code review.       - [x] Code quality improvements to existing code or addition of tests    ## Additional information      ## Checklist        Put an `x` in the boxes that apply. You can also fill these out after    creating the PR. If you're unsure about any of them, don't hesitate to ask.    We're here to help! This is simply a reminder of what we are going to look    for before merging your code.       - [x] The code change is tested and works locally.  - [x] Local tests pass. **Your PR cannot be merged unless tests pass**  - [x] There is no commented out code in this PR.  - [x] I have followed the [development checklist][dev-checklist]  - [x] I have followed the [perfect PR recommendations][perfect-pr]  - [ ] The code has been formatted using Ruff (`ruff format homeassistant tests`)  - [ ] Tests have been added to verify that the new code works.    If user exposed functionality or configuration variables are added/changed:    - [ ] Documentation added/updated for [www.home-assistant.io][docs-repository]    If the code communicates with devices, web services, or third-party tools:    - [ ] The [manifest file][manifest-docs] has all fields filled out correctly.          Updated and included derived files by running: `python3 -m script.hassfest`.  - [ ] New or updated dependencies have been added to `requirements_all.txt`.          Updated by running `python3 -m script.gen_requirements_all`.  - [ ] For the updated dependencies - a link to the changelog, or at minimum a diff between library versions is added to the PR description.          This project is very active and we have a high turnover of pull requests.      Unfortunately, the number of incoming pull requests is higher than what our    reviewers can review and merge so there is a long backlog of pull requests    waiting for review. You can help here!        By reviewing another pull request, you will help raise the code quality of    that pull request and the final review will be faster. This way the general    pace of pull request reviews will go up and your wait time will go down.        When picking a pull request to review, try to choose one that hasn't yet    been reviewed.      Thanks for helping out!       To help with the load of incoming pull requests:    - [ ] I have reviewed two other [open pull requests][prs] in this repository.    [prs]: https://github.com/home-assistant/core/pulls?q=is%3Aopen+is%3Apr+-author%3A%40me+-draft%3Atrue+-label%3Awaiting-for-upstream+sort%3Acreated-desc+review%3Anone+-status%3Afailure          Thank you for contributing  3      Below, some useful links you could explore:     [dev-checklist]: https://developers.home-assistant.io/docs/development_checklist/  [manifest-docs]: https://developers.home-assistant.io/docs/creating_integration_manifest/  [quality-scale]: https://developers.home-assistant.io/docs/integration_quality_scale_index/  [docs-repository]: https://github.com/home-assistant/home-assistant.io  [perfect-pr]: https://developers.home-assistant.io/docs/review-process/#creating-the-perfect-pr  
https://github.com/home-assistant/core/pull/125724	1	readability	2024-09-11 08:27:48	Improve yolink code readability	      You are amazing! Thanks for contributing to our project!    Please, DO NOT DELETE ANY TEXT from this template! (unless instructed).     ## Proposed change        Describe the big picture of your changes here to communicate to the    maintainers why we should accept this pull request. If it fixes a bug    or resolves a feature request, be sure to link to that issue in the    additional information section.     Improve code readability    ## Type of change        What type of change does your PR introduce to Home Assistant?    NOTE: Please, check only 1! box!    If your PR requires multiple boxes to be checked, you'll most likely need to    split it into multiple PRs. This makes things easier and faster to code review.       - [ ] Dependency upgrade  - [ ] Bugfix (non-breaking change which fixes an issue)  - [ ] New integration (thank you!)  - [ ] New feature (which adds functionality to an existing integration)  - [ ] Deprecation (breaking change to happen in the future)  - [ ] Breaking change (fix/feature causing existing functionality to break)  - [x] Code quality improvements to existing code or addition of tests    ## Additional information        Details are important, and help maintainers processing your PR.    Please be sure to fill out additional details, if applicable.       - This PR fixes or closes issue: fixes #  - This PR is related to issue:   - Link to documentation pull request:     ## Checklist        Put an `x` in the boxes that apply. You can also fill these out after    creating the PR. If you're unsure about any of them, don't hesitate to ask.    We're here to help! This is simply a reminder of what we are going to look    for before merging your code.       - [x] The code change is tested and works locally.  - [x] Local tests pass. **Your PR cannot be merged unless tests pass**  - [x] There is no commented out code in this PR.  - [x] I have followed the [development checklist][dev-checklist]  - [x] I have followed the [perfect PR recommendations][perfect-pr]  - [x] The code has been formatted using Ruff (`ruff format homeassistant tests`)  - [x] Tests have been added to verify that the new code works.    If user exposed functionality or configuration variables are added/changed:    - [ ] Documentation added/updated for [www.home-assistant.io][docs-repository]    If the code communicates with devices, web services, or third-party tools:    - [ ] The [manifest file][manifest-docs] has all fields filled out correctly.          Updated and included derived files by running: `python3 -m script.hassfest`.  - [ ] New or updated dependencies have been added to `requirements_all.txt`.          Updated by running `python3 -m script.gen_requirements_all`.  - [ ] For the updated dependencies - a link to the changelog, or at minimum a diff between library versions is added to the PR description.          This project is very active and we have a high turnover of pull requests.      Unfortunately, the number of incoming pull requests is higher than what our    reviewers can review and merge so there is a long backlog of pull requests    waiting for review. You can help here!        By reviewing another pull request, you will help raise the code quality of    that pull request and the final review will be faster. This way the general    pace of pull request reviews will go up and your wait time will go down.        When picking a pull request to review, try to choose one that hasn't yet    been reviewed.      Thanks for helping out!       To help with the load of incoming pull requests:    - [ ] I have reviewed two other [open pull requests][prs] in this repository.    [prs]: https://github.com/home-assistant/core/pulls?q=is%3Aopen+is%3Apr+-author%3A%40me+-draft%3Atrue+-label%3Awaiting-for-upstream+sort%3Acreated-desc+review%3Anone+-status%3Afailure          Thank you for contributing  3      Below, some useful links you could explore:     [dev-checklist]: https://developers.home-assistant.io/docs/development_checklist/  [manifest-docs]: https://developers.home-assistant.io/docs/creating_integration_manifest/  [quality-scale]: https://developers.home-assistant.io/docs/integration_quality_scale_index/  [docs-repository]: https://github.com/home-assistant/home-assistant.io  [perfect-pr]: https://developers.home-assistant.io/docs/review-process/#creating-the-perfect-pr  
https://github.com/home-assistant/core/pull/126252	1	readability	2024-09-20 09:10:27	Improve readability in hass_imports pylint plugin	## Proposed change        Describe the big picture of your changes here to communicate to the    maintainers why we should accept this pull request. If it fixes a bug    or resolves a feature request, be sure to link to that issue in the    additional information section.     `visit_importfrom` has 5 different checks - and it is becoming quite difficult to follow what it is doing.    With no change in functionnality, this moves 3 of those checks to separate methods:  - one for `hass-relative-import`  - one for `hass-component-root-import`  - one for `hass-import-constant-alias`      ## Type of change        What type of change does your PR introduce to Home Assistant?    NOTE: Please, check only 1! box!    If your PR requires multiple boxes to be checked, you'll most likely need to    split it into multiple PRs. This makes things easier and faster to code review.       - [ ] Dependency upgrade  - [ ] Bugfix (non-breaking change which fixes an issue)  - [ ] New integration (thank you!)  - [ ] New feature (which adds functionality to an existing integration)  - [ ] Deprecation (breaking change to happen in the future)  - [ ] Breaking change (fix/feature causing existing functionality to break)  - [x] Code quality improvements to existing code or addition of tests    ## Additional information        Details are important, and help maintainers processing your PR.    Please be sure to fill out additional details, if applicable.       - This PR fixes or closes issue: fixes #  - This PR is related to issue:   - Link to documentation pull request:     ## Checklist        Put an `x` in the boxes that apply. You can also fill these out after    creating the PR. If you're unsure about any of them, don't hesitate to ask.    We're here to help! This is simply a reminder of what we are going to look    for before merging your code.       - [ ] The code change is tested and works locally.  - [ ] Local tests pass. **Your PR cannot be merged unless tests pass**  - [ ] There is no commented out code in this PR.  - [ ] I have followed the [development checklist][dev-checklist]  - [ ] I have followed the [perfect PR recommendations][perfect-pr]  - [ ] The code has been formatted using Ruff (`ruff format homeassistant tests`)  - [ ] Tests have been added to verify that the new code works.    If user exposed functionality or configuration variables are added/changed:    - [ ] Documentation added/updated for [www.home-assistant.io][docs-repository]    If the code communicates with devices, web services, or third-party tools:    - [ ] The [manifest file][manifest-docs] has all fields filled out correctly.          Updated and included derived files by running: `python3 -m script.hassfest`.  - [ ] New or updated dependencies have been added to `requirements_all.txt`.          Updated by running `python3 -m script.gen_requirements_all`.  - [ ] For the updated dependencies - a link to the changelog, or at minimum a diff between library versions is added to the PR description.          This project is very active and we have a high turnover of pull requests.      Unfortunately, the number of incoming pull requests is higher than what our    reviewers can review and merge so there is a long backlog of pull requests    waiting for review. You can help here!        By reviewing another pull request, you will help raise the code quality of    that pull request and the final review will be faster. This way the general    pace of pull request reviews will go up and your wait time will go down.        When picking a pull request to review, try to choose one that hasn't yet    been reviewed.      Thanks for helping out!       To help with the load of incoming pull requests:    - [ ] I have reviewed two other [open pull requests][prs] in this repository.    [prs]: https://github.com/home-assistant/core/pulls?q=is%3Aopen+is%3Apr+-author%3A%40me+-draft%3Atrue+-label%3Awaiting-for-upstream+sort%3Acreated-desc+review%3Anone+-status%3Afailure          Thank you for contributing  3      Below, some useful links you could explore:     [dev-checklist]: https://developers.home-assistant.io/docs/development_checklist/  [manifest-docs]: https://developers.home-assistant.io/docs/creating_integration_manifest/  [quality-scale]: https://developers.home-assistant.io/docs/integration_quality_scale_index/  [docs-repository]: https://github.com/home-assistant/home-assistant.io  [perfect-pr]: https://developers.home-assistant.io/docs/review-process/#creating-the-perfect-pr  
https://github.com/home-assistant/core/pull/126394	1	readability	2024-09-21 22:29:41	Rename some evohome constants for clarity / readability	      You are amazing! Thanks for contributing to our project!    Please, DO NOT DELETE ANY TEXT from this template! (unless instructed).         ## Proposed change        Describe the big picture of your changes here to communicate to the    maintainers why we should accept this pull request. If it fixes a bug    or resolves a feature request, be sure to link to that issue in the    additional information section.       Renames some constants in **test_storage.py**.    ## Type of change        What type of change does your PR introduce to Home Assistant?    NOTE: Please, check only 1! box!    If your PR requires multiple boxes to be checked, you'll most likely need to    split it into multiple PRs. This makes things easier and faster to code review.       - [ ] Dependency upgrade  - [ ] Bugfix (non-breaking change which fixes an issue)  - [ ] New integration (thank you!)  - [ ] New feature (which adds functionality to an existing integration)  - [ ] Deprecation (breaking change to happen in the future)  - [ ] Breaking change (fix/feature causing existing functionality to break)  - [x] Code quality improvements to existing code or addition of tests    ## Additional information        Details are important, and help maintainers processing your PR.    Please be sure to fill out additional details, if applicable.       - This PR fixes or closes issue: fixes #  - This PR is related to issue:   - Link to documentation pull request:     ## Checklist        Put an `x` in the boxes that apply. You can also fill these out after    creating the PR. If you're unsure about any of them, don't hesitate to ask.    We're here to help! This is simply a reminder of what we are going to look    for before merging your code.       - [x] The code change is tested and works locally.  - [x] Local tests pass. **Your PR cannot be merged unless tests pass**  - [x] There is no commented out code in this PR.  - [x] I have followed the [development checklist][dev-checklist]  - [x] I have followed the [perfect PR recommendations][perfect-pr]  - [x] The code has been formatted using Ruff (`ruff format homeassistant tests`)  - [x] Tests have been added to verify that the new code works.    If user exposed functionality or configuration variables are added/changed:    - [ ] Documentation added/updated for [www.home-assistant.io][docs-repository]    If the code communicates with devices, web services, or third-party tools:    - [x] The [manifest file][manifest-docs] has all fields filled out correctly.          Updated and included derived files by running: `python3 -m script.hassfest`.  - [ ] New or updated dependencies have been added to `requirements_all.txt`.          Updated by running `python3 -m script.gen_requirements_all`.  - [x] For the updated dependencies - a link to the changelog, or at minimum a diff between library versions is added to the PR description.          This project is very active and we have a high turnover of pull requests.      Unfortunately, the number of incoming pull requests is higher than what our    reviewers can review and merge so there is a long backlog of pull requests    waiting for review. You can help here!        By reviewing another pull request, you will help raise the code quality of    that pull request and the final review will be faster. This way the general    pace of pull request reviews will go up and your wait time will go down.        When picking a pull request to review, try to choose one that hasn't yet    been reviewed.      Thanks for helping out!       To help with the load of incoming pull requests:    - [ ] I have reviewed two other [open pull requests][prs] in this repository.    [prs]: https://github.com/home-assistant/core/pulls?q=is%3Aopen+is%3Apr+-author%3A%40me+-draft%3Atrue+-label%3Awaiting-for-upstream+sort%3Acreated-desc+review%3Anone+-status%3Afailure          Thank you for contributing  3      Below, some useful links you could explore:     [dev-checklist]: https://developers.home-assistant.io/docs/development_checklist/  [manifest-docs]: https://developers.home-assistant.io/docs/creating_integration_manifest/  [quality-scale]: https://developers.home-assistant.io/docs/integration_quality_scale_index/  [docs-repository]: https://github.com/home-assistant/home-assistant.io  [perfect-pr]: https://developers.home-assistant.io/docs/review-process/#creating-the-perfect-pr  
https://github.com/HTTP-APIs/hydrus/pull/515	3	readability	2020-10-03 09:12:19	Improve readability. Add formatters	* Improve readability  * Add flake8  * implement `poetry`?    It is now possible to install dependencies with conflicts auto-resolving using: `pip install poetry && poetry install`
https://github.com/huggingface/datatrove/pull/16	2	readability	2023-07-26 15:40:17	[Tests] Fix readability	Tested locally on a different branch of readability, so didn't catch this before :sweat_smile: 
https://github.com/huggingface/diffusers/pull/9711	10	readability	2024-10-25 21:01:52	[refactor] enhance readability of flux related pipelines	# What does this PR do?    This PR refactors the FLUX-related pipelines to improve clarity and consistency, particularly in regards to height and width determination. The changes align the implementation more closely with other pipelines in the library, enhancing overall code coherence and maintainability.    The original code obscured the details of how latents packing affects resolution, but this change makes the process more transparent and easier to understand.    @yiyixuxu  @asomoza    
https://github.com/huggingface/lighteval/pull/34	4	readability	2024-02-19 16:21:34	Fix typos and improve code readability	This pull request fixes typos and improves the code readability in the project.
https://github.com/huggingface/peft/pull/409	1	readability	2023-06-08 09:15:35	improve readability of LoRA code	Thank you for creating this great library!    As I was exploring LoRA implementations and reviewing the code, I noticed that there could be some enhancements made to improve code readability.     Therefore, I created this pull request which primarily focuses on extracting certain private functions without introduce any functional changes.
https://github.com/huggingface/transformers/pull/8903	1	readability	2020-12-02 17:07:43	[trainer] improve code readability	This PR:    * removes redundant code, as:  ```  self.model = model if model is not None else None  ```  and  ```  self.model = model  ```  are the same.    * decouples attribute assignment from code logic - which simplifies things further.    @sgugger, @LysandreJik 
https://github.com/huggingface/transformers/pull/24585	14	readability	2023-06-30 18:27:27	[several models] improve readability	Honestly I had no idea what `torch.ones([]) * self.config.logit_scale_init_value` would return - it's not documented either.    ~Proposing to change it to a very clear `torch.tensor(1.0)` which leaves no doubt to what it does.~    Proposing to change it to a very clear `torch.tensor(self.config.logit_scale_init_value)` which leaves no doubt to what it does.
https://github.com/huggingface/transformers/pull/27184	22	readability	2023-10-31 18:12:14	Unify warning styles for better readability	# What does this PR do?    Quick unify warning styles of [examples/pytorch](https://github.com/huggingface/transformers/tree/main/examples/pytorch) for better readability    Example:  - Before    - `10/31/2023 15:41:34 - WARNING - __main__ - Process rank: 0, device: cuda:0, n_gpu: 6distributed training: False, 16-bits training: False`    - After    - `10/31/2023 15:41:34 - WARNING - __main__ - Process rank: 0, device: cuda:0, n_gpu: 6, distributed training: False, 16-bits training: False`        Congratulations! You've made it this far! You're not quite done yet though.    Once merged, your PR is going to appear in the release notes with the title you set, so make sure it's a great title that fully reflects the extent of your awesome contribution.    Then, please replace this with a description of the change and which issue is fixed (if applicable). Please also include relevant motivation and context. List any dependencies (if any) that are required for this change.    Once you're done, someone will review your PR shortly (see the section "Who can review?" below to tag some potential reviewers). They may suggest changes to make the code even better. If no one reviewed your PR after a week has passed, don't hesitate to post a new comment @-mentioning the same persons---sometimes notifications get lost.           ## Before submitting  - [x] This PR fixes a typo or improves the docs (you can dismiss the other checks if that's the case).  - [x] Did you read the [contributor guideline](https://github.com/huggingface/transformers/blob/main/CONTRIBUTING.md#start-contributing-pull-requests),        Pull Request section?  - [ ] Was this discussed/approved via a Github issue or the [forum](https://discuss.huggingface.co/)? Please add a link        to it if that's the case.  - [ ] Did you make sure to update the documentation with your changes? Here are the        [documentation guidelines](https://github.com/huggingface/transformers/tree/main/docs), and        [here are tips on formatting docstrings](https://github.com/huggingface/transformers/tree/main/docs#writing-source-documentation).  - [ ] Did you write any new necessary tests?      ## Who can review?    @ArthurZucker @amyeroberts @sanchit-gandhi       Your PR will be replied to more quickly if you can figure out the right person to tag with @     If you know how to use git blame, that is the easiest way, otherwise, here is a rough guide of **who to tag**.   Please tag fewer than 3 people.    Models:    - text models: @ArthurZucker and @younesbelkada  - vision models: @amyeroberts  - speech models: @sanchit-gandhi  - graph models: @clefourrier    Library:    - flax: @sanchit-gandhi  - generate: @gante  - pipelines: @Narsil  - tensorflow: @gante and @Rocketknight1  - tokenizers: @ArthurZucker  - trainer: @muellerzr and @pacman100    Integrations:    - deepspeed: HF Trainer/Accelerate: @pacman100  - ray/raytune: @richardliaw, @amogkam  - Big Model Inference: @SunMarc  - quantization (bitsandbytes, autogpt): @SunMarc and @younesbelkada    Documentation: @stevhliu and @MKhalusova    HF projects:    - accelerate: [different repo](https://github.com/huggingface/accelerate)  - datasets: [different repo](https://github.com/huggingface/datasets)  - diffusers: [different repo](https://github.com/huggingface/diffusers)  - rust tokenizers: [different repo](https://github.com/huggingface/tokenizers)    Maintained examples (not research project or legacy):    - Flax: @sanchit-gandhi  - PyTorch: See Models above and tag the person corresponding to the modality of the example.  - TensorFlow: @Rocketknight1        
https://github.com/huggingface/transformers/pull/28349	2	readability	2024-01-08 08:19:06	Enhancing Code Readability and Maintainability with Simplified Activation Function Selection.	This code optimization enhances code readability and maintainability by utilizing aliases, simplified activation function selection, and consistent function definitions.    Before submitting  ## Before submitting  - [x] This PR fixes a typo or improves the docs (you can dismiss the other checks if that's the case).  - [x] Did you read the [contributor guideline](https://github.com/huggingface/transformers/blob/main/CONTRIBUTING.md#start-contributing-pull-requests),        Pull Request section?  - [x] Was this discussed/approved via a Github issue or the [forum](https://discuss.huggingface.co/)? Please add a link        to it if that's the case.  - [x] Did you make sure to update the documentation with your changes? Here are the        [documentation guidelines](https://github.com/huggingface/transformers/tree/main/docs), and        [here are tips on formatting docstrings](https://github.com/huggingface/transformers/tree/main/docs#writing-source-documentation).  - [ ] Did you write any new necessary tests?    ## Who can Review?  @ArthurZucker 
https://github.com/huggingface/transformers/pull/29785	1	readability	2024-03-22 12:23:16	replaced concatenation to f-strings to improve readability and unify  	 with the rest of code    # What does this PR do?        Congratulations! You've made it this far! You're not quite done yet though.    Once merged, your PR is going to appear in the release notes with the title you set, so make sure it's a great title that fully reflects the extent of your awesome contribution.    Then, please replace this with a description of the change and which issue is fixed (if applicable). Please also include relevant motivation and context. List any dependencies (if any) that are required for this change.    Once you're done, someone will review your PR shortly (see the section "Who can review?" below to tag some potential reviewers). They may suggest changes to make the code even better. If no one reviewed your PR after a week has passed, don't hesitate to post a new comment @-mentioning the same persons---sometimes notifications get lost.          Remove if not applicable      Fixes # (issue)      ## Before submitting  - [ ] This PR fixes a typo or improves the docs (you can dismiss the other checks if that's the case).  - [X] Did you read the [contributor guideline](https://github.com/huggingface/transformers/blob/main/CONTRIBUTING.md#create-a-pull-request),        Pull Request section?  - [ ] Was this discussed/approved via a Github issue or the [forum](https://discuss.huggingface.co/)? Please add a link        to it if that's the case.  - [-] Did you make sure to update the documentation with your changes? Here are the        [documentation guidelines](https://github.com/huggingface/transformers/tree/main/docs), and        [here are tips on formatting docstrings](https://github.com/huggingface/transformers/tree/main/docs#writing-source-documentation).  - [x] Did you write any new necessary tests?      ## Who can review?    Anyone in the community is free to review the PR once the tests have passed. Feel free to tag  members/contributors who may be interested in your PR.       Your PR will be replied to more quickly if you can figure out the right person to tag with @     If you know how to use git blame, that is the easiest way, otherwise, here is a rough guide of **who to tag**.   Please tag fewer than 3 people.    Models:    - text models: @ArthurZucker and @younesbelkada  - vision models: @amyeroberts  - speech models: @sanchit-gandhi  - graph models: @clefourrier    Library:    - flax: @sanchit-gandhi  - generate: @gante  - pipelines: @Narsil  - tensorflow: @gante and @Rocketknight1  - tokenizers: @ArthurZucker  - trainer: @muellerzr and @pacman100    Integrations:    - deepspeed: HF Trainer/Accelerate: @pacman100  - ray/raytune: @richardliaw, @amogkam  - Big Model Inference: @SunMarc  - quantization (bitsandbytes, autogpt): @SunMarc and @younesbelkada    Documentation: @stevhliu and @MKhalusova    HF projects:    - accelerate: [different repo](https://github.com/huggingface/accelerate)  - datasets: [different repo](https://github.com/huggingface/datasets)  - diffusers: [different repo](https://github.com/huggingface/diffusers)  - rust tokenizers: [different repo](https://github.com/huggingface/tokenizers)    Maintained examples (not research project or legacy):    - Flax: @sanchit-gandhi  - PyTorch: See Models above and tag the person corresponding to the modality of the example.  - TensorFlow: @Rocketknight1        
https://github.com/hustyichi/dify-rag/pull/21	1	readability	2024-08-26 08:16:00	MOD: Improve readability of HTML extraction algorithm	
https://github.com/hyperliquid-dex/hyperliquid-python-sdk/pull/80	1	readability	2024-12-17 01:02:26	Refactor BasicAdder for Improved Readability and Maintainability	
https://github.com/hypothesis/lms/pull/6107	4	readability	2024-03-08 11:34:31	Refactor Moodle page and files views to improve readability	Move the course copy logic to a private function.
https://github.com/IAMconsortium/nomenclature/pull/207	1	readability	2022-12-13 10:31:19	Improve readability of illegal unit error	Currently illegal unit errors are a little hard to read, adding some quotes should make it a bit easier especially for variables and units containing spaces.    This PR changes these errors from:    ```console  The following items are not defined in the 'variable' codelist:  - Capital Cost|Electricity|Biomass|w/ CCS - expected: US$2010/kW, found: US$2010/kW OR local currency/kW  ```  to:    ```console  The following items are not defined in the 'variable' codelist:  - 'Capital Cost|Electricity|Biomass|w/ CCS' - expected: 'US$2010/kW', found: 'US$2010/kW OR local currency/kW'  ```  
https://github.com/ibab/tensorflow-wavenet/pull/67	6	readability	2016-09-21 16:00:09	Readability and documentation	I split #14 in chunks because the conflicts were getting messy.  What do you think about `quantization_steps`? Should it have `_channels` as a suffix, like `encoding_channels` or `quantization_channels`? 
https://github.com/ibm-watson-iot/functions/pull/255	1	readability	2020-09-11 17:01:09	adding normalization, regrouped functions to increase readability	I added a set of new anomaly scorers with 'v2' appended to their names that "learn" and apply the proper scale of the input data before checking for anomalies
https://github.com/iiif-prezi/iiif-prezi3/pull/183	26	readability	2024-12-04 16:34:11	Update recipes to use a `base_url` variable to improve readability	Picking up on an idea I used during my [dogfooding of the "Introduction to `iiif-prezi3`" lightning talk](https://digitaldogsbody.net/iiif/prezi3): due to the structure of the recipes, there are a lot of `id` fields that have a common start, so this PR adds a `base_url` variable and uses it in the various bits of manifest data, meaning that the resulting code looks a bit less cluttered (IMO)
https://github.com/ilastik/ilastik/pull/2896	1	readability	2024-08-13 11:02:09	H5N5 writing: Refactor test - readability, disentangle test cases	Minor PR for refactoring a test. I rewrote the test because I was going to add zarr as another test case, then decided OME-Zarr warrants its own operator and won't go here.    I think the refactoring is still helpful in its own right. It makes the difference between the test cases clearer, and makes sure the h5 and n5 tests don't depend on each other (plus it's a bit shorter :smile: ).    The actual test cases covered and how they're implemented could be improved I think. I'm also not sure about the value of the third test using `.Output.meta.ram_usage_per_requested_pixel = 1000000.0` to force writing in tiny blocks. This test takes 0.5s to run, which is a long time for a test case that seems unnecessary to cover to me. But I intentionally purely refactored here to make review easier.    Note: Squash-merge when re-integrating to main
https://github.com/intel/cve-bin-tool/pull/826	5	readability	2020-07-23 23:54:59	Improved error handling and readability of extractor	
https://github.com/interuss/monitoring/pull/491	1	readability	2024-02-02 16:22:21	[uss_qualifier/flight_planning/submit_flight] Guard against invalid input; Enhance readability	This adds to `submit_flight` a validation that the expected results both for success or failure do not overlap.   This mimics what was done for `submit_flight_intent` in #411.  (this also enhances slightly the readability of the function)    Helps in addressing #398 
https://github.com/iTeam-S/Ampalibe/pull/82	2	readability	2023-01-11 18:23:12	Improve core readability	
https://github.com/ivy-llc/ivy/pull/27734	42	readability	2023-12-18 16:05:45	refactor: Refactored and reformatted for better readability and efficiency	# PR Description  I used [`ruff`](https://docs.astral.sh/ruff/), [`Pylint`](https://pylint.readthedocs.io/en/stable/) linters to identify and fix some of the changes.    ## Related Issue  Closes #    ## Checklist    - [ ] Did you add a function?  - [ ] Did you add the tests?  - [ ] Did you run your tests and are your tests passing?  - [x] Did pre-commit not fail on any check?  - [ ] Did you follow the steps we provided?        ### Socials  
https://github.com/jarun/buku/pull/345	6	readability	2018-12-31 15:50:11	Improve readability and fix minor typos.	This pull request includes the following modifications:    - Long lines (  140 characters) were split for better readability.  - Global variables that were still lowercase were made uppercase to clearly distinguish them from local variables.  - Minor improvements in syntax (removing superfluous parentheses, adding spaces where recommended by PEP8).  - Corrects a few typos (including: Unknonw   Unknown, firefox   Firefox, buku   Buku, and json   JSON where appropriate).    Please let me know if this is something you find useful. I read the PR guidelines and to the best of my knowledge, I believe I didn't break any rule.    Thank you for this great tool! As you would say in French, _merci beaucoup_ (meaning _thank you very much_, where _beaucoup_ sounds like Buku).
https://github.com/jax-ml/jax/pull/305	1	readability	2019-02-02 00:15:00	Prefix most rules in lax module with underscores to improve readability of autogenerated docs.	Underscore-prefixed functions are automatically hidden from generated documentation. `lax` is a semi-public API, so this is a first step towards making its documentation useful.    Currently the `lax` docs contain many undocumented internal rules, hindering their usefulness.
https://github.com/jax-ml/jax/pull/19135	1	readability	2024-01-02 21:53:11	 hanged concatenation of strings to f-strings to improve readability	 hanged concatenation of strings to f-strings to improve readability and unify with the rest of code
https://github.com/JaxGaussianProcesses/GPJax/pull/138	7	readability	2022-11-06 21:16:35	Improve readability and add comments.	Minor addition of comments and code readability improvements [e.g., replacing long attributes such as `self.prior.kernel(...)` with `kernel = self.prior.kernel` then `kernel(...)`]. Most major changes are to the progress bar.    - [ ] Bugfix  - [ ] Feature  - [X ] Code style update (formatting, renaming)  - [ ] Refactoring (no functional changes, no api changes)  - [ ] Build related changes  - [ ] Documentation content changes  - [ ] Other (please describe):
https://github.com/jazzband/django-analytical/pull/209	1	readability	2022-03-14 21:51:06	Readability counts, code must be self-explanatory	I feel ashamed that it took me 3 attempts to get it (probably) right. But I feel it was maybe worth it. [PEP20](https://peps.python.org/pep-0020/) says it all.
https://github.com/jgosmann/pylint-venv/pull/3	2	readability	2019-10-19 11:12:59	Add support for Conda and PyPy, improve docs and readability	This PR contains various changes:    - Add support for Conda envs by evaluating `$CONDA_PREFIX`.  - Add support for envs using PyPy as interpreter.  - Remove modifications of `$PATH` and `$VIRTUAL_ENV`. If an env is already activated, this is not necessary, but it is also not necessary for using envs in `.venv` that are not already activated.  - Split code for env. detection and env. activation into separate functions for improved readability.  - Remove superfluous passing of the `site` module as func arg.  - Set Python 3.6 as minimum requirement (everything else IMHO doesn t make sense in late 2019  )  - In `init-hook` catch `ImportError`. Pylint-env might not be installed in virtualenv environments that have their own, local pylint installed.  - Generally improve user and developer documentation
https://github.com/jina-ai/serve/pull/2357	6	readability	2021-04-28 08:40:57	refactor: improve the readability	improve the readability
https://github.com/jisaacks/GitGutter/pull/377	1	readability	2017-02-23 19:36:25	Improve the css readability by directly writing the class	This just replaces `{{wrapper_class}}` by the actual class, but keeps backward compat.
https://github.com/joblib/loky/pull/99	3	readability	2017-09-12 07:32:07	CLN improve code readability and compat with upstream	
https://github.com/JohnSnowLabs/langtest/pull/1025	3	readability	2024-05-13 12:16:17	Refactor: Improve Code Organization and Readability	
https://github.com/jrialland/python-astar/pull/8	1	readability	2022-12-13 13:29:29	Added line for better readability of nodes	
https://github.com/jrxFive/python-nomad/pull/94	1	readability	2019-10-08 14:14:27	Adding __str__ method to improve errors readability	Improving the custom errors readability so that it will also include the response that caused it.  Also removing the inherited __init__ method.
https://github.com/JulianFrattini/cira/pull/73	1	readability	2023-10-30 22:00:53	Refactor eventconnector to use consts and improve readability	This PR changes `eventconnector.py` by using constants instead of hard-coded strings (issue #44).  In addition, parts of the code were refactored to improve its readability.
https://github.com/JulianFrattini/cira/pull/74	2	readability	2023-11-20 15:37:09	Refactor graph converter to use consts and improve readability	This PR changes `graphconverter.py` by using constants instead of hard-coded strings (issue #44).  In addition, parts of the code were refactored to improve its readability.
https://github.com/jupyter/docker-stacks/pull/1403	1	readability	2021-07-16 13:12:21	Refactor Makefile to improve readability	
https://github.com/jupyterhub/dockerspawner/pull/493	1	readability	2023-08-10 09:19:23	Add extra_create_kwargs example, plus docs readability improvements	This PR adds an example to the API reference for `extra_create_kwargs`.    Additionally, it fixes inline code formatting by adding an additional `` ` `` enclosing each end of the text. The existing usages involve single backticks ala Markdown, whereas [double backticks are used in RST](https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html#inline-markup).    Continued from #492     cc @manics 
https://github.com/jupyterhub/kubespawner/pull/774	2	readability	2023-09-01 11:26:41	Rework of profile_list backend validation for readability and details	## Summary    I've failed to isolate the changes in this PR in smaller commits, but below are some highlights.    - Revised docstrings  - Some kubespawner internal functions was async for no reason so I made them non-async  - Some kubespawner internal fucntions got their signatures tweaked  - Fixed bug making warnings not be emitted about unregonized options passed via web forms    ## Review together with my comments    In the "Files changed" view you can see comments I've made on the changes in various sections. I think that may be the easiest way to review this PRs changes.
https://github.com/jupyterhub/oauthenticator/pull/628	8	readability	2023-07-03 16:18:23	refactor: separate deprecated config for readability	Some classes had quite a bit of no longer relevant config, and since they also had long help strings it was a bit tricky to overview effectively what was relevant. With this PR I've:    - relocated `_deprecated_oauth_aliases` list of deprecated config and the deprecated/removed config to the end of config declarations  - reduced help strings of deprecated/removed config to ``"[Deprecated|Removed], use :attr:`. class>. new_config>`"`` strings    ## Code refactoring preview    ![image](https://github.com/jupyterhub/oauthenticator/assets/3837114/d79ce948-d91f-48d2-8d50-984909274be0)    ## Config reference docs preview    ![image](https://github.com/jupyterhub/oauthenticator/assets/3837114/2fedbf82-5a7c-432b-8737-c29c945a1c66)
https://github.com/jupyterhub/systemdspawner/pull/124	1	readability	2023-05-31 09:14:37	Rely on systemd-run's --working-directory, and refactor for readability	- We had avoided using systemd-run's `--working-directory` flag because it was added in systemd v229 or similar, but now we can assume we have that.  - I saw an opportunity to help me, my future self, and hopefully others to understand the code better by refactoring it a bit and adding some comments with references to systemd stuff, so I took it.
https://github.com/kaegi/MorphMan/pull/71	3	readability	2020-01-03 23:20:35	readability analyzer save default morphemizer	In Readability Analyzer Dialog, the default morphemizer is saved in the profile preferences whenever the ComboBox changes value.  
https://github.com/kaegi/MorphMan/pull/76	9	readability	2020-01-12 03:38:27	Readability analyzer updates	* Moved various options to cfg so they can be saved per profile and don't require editing config.py.  * New parsing options that primarily will work for the Japanese Mecab parser:    - Option to ignore contents inside   round brackets.    - Option to ignore grammar definitions.    - Option to treat proper nouns (people & place names) as already known in Japanese text.  * New "Minimum Master Frequency" option.  * New Table based UI features in Readability Analyzer.  * New morpheme score function in Readability Analyzer.
https://github.com/kaegi/MorphMan/pull/242	1	readability	2022-01-16 18:05:47	Fix typo in readability report	
https://github.com/Kaggle/kagglehub/pull/155	1	readability	2024-08-28 21:36:54	Small fix for code readability.	Small fix to address [previous comment](https://github.com/Kaggle/kagglehub/pull/152/files#r1722186629)
https://github.com/keras-team/keras/pull/7153	1	readability	2017-07-06 17:56:19	Improve readability for backend tests	This PR improves readability for backend tests. Since CNTK added, it becomes hard to add something into backend tests due to many hardcoded and cntk-specific patchwork. I think it is better to clean up the current tests first in order to write new tests for increasing test coverages. Especially, this PR focuses on integration of `cntk_check_*_tensor_operation` into `check_*_tensor_operation`. 
https://github.com/keras-team/keras/pull/17170	1	readability	2022-10-26 21:46:49	Changed .format to f-string for better readability	Changed .format to f-string for better readability and performance as per PEP 498
https://github.com/keras-team/keras-cv/pull/847	1	readability	2022-09-27 21:43:04	Readability improvement to SD	Adds a getter for start of text and end of text.    I've had a few people ask what these hard coded constants are in the tokenizer and I think this improves that a great deal.
https://github.com/keras-team/keras-cv/pull/2197	1	readability	2023-12-11 19:08:07	Fix the issue(keras-team#2195): Improve readability and comprehensibility of Stable Diffusion source	# What does this PR do?  I added the casting method to Stable Diffusion source as y-vectorfield-fj(my previous account name).  However, this method is implemented abruptly and unnaturally.  Hence, I modified the source and added comments to improve readability and comprehensibility.    # Who can review?  @ianstenbit  @sampathweb 
https://github.com/KMKfw/kmk_firmware/pull/470	9	readability	2022-06-12 09:31:16	[debug] improve debug readability	little tweak in the debug output to make things more readable:  - wrap KMKKeyboard report to 100 char (changeable), not splitting a key=value  - include a \\n before MatrixChange as those are the begining of  a new logical 'block'    example result:  ```  MatrixChange(ic=14, pressed=True)  KeyResolution(key=Key(code=1021, has_modifiers=None))  KMKKeyboard(    debug_enabled=True, diode_orientation=1, matrix=( MatrixScanner object at 0x2000eef0>,),    unicode_mode=0, _hid_helper=USBHID(REPORT_BYTES=9), keys_pressed=set(),    _coordkeys_pressed={14: Key(code=1021, has_modifiers=None)}, hid_pending=False,    active_layers=[1, 0], _timeouts={},  )    MatrixChange(ic=52, pressed=True)  KeyResolution(key=Key(code=20, has_modifiers={1}))  KMKKeyboard(    debug_enabled=True, diode_orientation=1, matrix=( MatrixScanner object at 0x2000eef0>,),    unicode_mode=0, _hid_helper=USBHID(REPORT_BYTES=9),    keys_pressed={Key(code=20, has_modifiers={1})},    _coordkeys_pressed={52: Key(code=20, has_modifiers={1}), 14: Key(code=1021, has_modifiers=None)},    hid_pending=False, active_layers=[1, 0], _timeouts={},  )    MatrixChange(ic=52, pressed=False)  KeyResolution(key=Key(code=20, has_modifiers={1}))  KMKKeyboard(    debug_enabled=True, diode_orientation=1, matrix=( MatrixScanner object at 0x2000eef0>,),    unicode_mode=0, _hid_helper=USBHID(REPORT_BYTES=9), keys_pressed=set(),    _coordkeys_pressed={14: Key(code=1021, has_modifiers=None)}, hid_pending=False,    active_layers=[1, 0], _timeouts={},  )    MatrixChange(ic=14, pressed=False)  KeyResolution(key=Key(code=1021, has_modifiers=None))  KMKKeyboard(    debug_enabled=True, diode_orientation=1, matrix=( MatrixScanner object at 0x2000eef0>,),    unicode_mode=0, _hid_helper=USBHID(REPORT_BYTES=9), keys_pressed=set(), _coordkeys_pressed={},    hid_pending=False, active_layers=[0], _timeouts={},  )  ```
https://github.com/KMKfw/kmk_firmware/pull/877	2	readability	2023-09-12 08:18:17	Format hid reports for better readability	
https://github.com/kobotoolbox/kobo-install/pull/30	1	readability	2019-05-23 20:30:50	Indent `.run.conf` and sort its keys for readability	
https://github.com/konveyor/tackle-test-generator-cli/pull/135	1	readability	2021-12-15 15:45:51	readability and usefulness user study generation	## Description    A script for generating a user study questionnaire on a sample of the automatically generated unit tests     Related to # (issue)    ## Type of Change    Please check the types of changes your PR introduces.    - [ ] Bug fix (non-breaking change that fixes an issue)  - [ ] New feature (non-breaking change that adds functionality)  - [ ] Refactoring (non-breaking code restructuring that preserves functionality)  - [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)  - [ ] Build-related update (CI workflow, test cases)  - [ ] Documentation update  - [x] Other (please describe):    ## How Has This Been Tested?    Please describe the tests that you ran to verify your changes. Provide instructions so that it can be replicated.  Please also list any relevant details for your test configuration.    - [ ] Test A  - [ ] Test B    ## Checklist    - [ ] My code follows the style guidelines of this project  - [ ] I have performed a self-review of my own code  - [ ] I have commented my code, particularly in hard-to-understand areas  - [ ] I have made corresponding changes to the documentation  - [ ] I have added tests that prove my fix is effective or that my feature works  - [ ] New and existing tests pass locally with my changes  - [ ] Any dependent changes have been merged and published in downstream modules  
https://github.com/kornia/kornia/pull/1848	1	readability	2022-09-06 09:18:09	Binary focal loss: Use pre-computed probs and increase readability	#### Changes    * Use pre-computed probs_pos and probs_neg rather than calling sigmoid function again (performance boost by skipping two calls to `torch.sigmoid`)  * Standardize use of tensor method vs torch function to increase readability (make symmetry in code more apparent)    #### Type of change    Performance / code readability       Please delete options that are not relevant.    - [ ]   Documentation Update  - [ ]  Tests Cases  - [ ]  Bug fix (non-breaking change which fixes an issue)  - [ ]  New feature (non-breaking change which adds functionality)  - [ ]  Breaking change (fix or feature that would cause existing functionality to not work as expected)  - [ ]  This change requires a documentation update      #### Checklist    - [x] My code follows the style guidelines of this project  - [x] I have performed a self-review of my own code  - [x] I have commented my code, particularly in hard-to-understand areas  - [x] I have made corresponding changes to the documentation  - [x] My changes generate no new warnings  - [x] Did you update CHANGELOG in case of a major change?  
https://github.com/krkn-chaos/cerberus/pull/83	2	readability	2020-07-16 19:28:37	Refactored to improve readability	This commit refactors the code to improve readability.
https://github.com/kunaltyagi/nsiqcppstyle/pull/53	7	readability	2023-10-17 11:30:12	Add argparse for better readability	- Use argparse for better help and usage - Move more items to argparse 
https://github.com/langflow-ai/langflow/pull/3985	1	readability	2024-10-01 18:38:22	chore: Refactor error handling in OutputParser for improved readability	This pull request refactors the error handling in the OutputParser component to improve code readability. The changes include updating the error messages and removing unnecessary else statements. These improvements enhance the maintainability of the codebase and make it easier to understand and debug any potential issues.
https://github.com/launchableinc/cli/pull/365	9	readability	2022-01-19 04:26:28	refactor to add some type hinting for readability	# What  - clarify some argument types by adding type hinting    # Why  - to improve readability
https://github.com/launchableinc/cli/pull/776	1	readability	2024-02-20 05:33:57	Fix the logic of getting stderr for readability	Currently, it's challenging to view stderr logs on https://app.launchableinc.com/organizations/ruby/workspaces/debug/data/test-sessions/2611270. This issue arises because the CLI concatenates the `message` and `text` properties. To address this, I've made the following changes:    1. Check if the `text` property exists. If it does, we'll utilize it for stderr since `text` contains more comprehensive information compared to the `message` property.  2. If the `text` property doesn't exist, we'll fallback to using the `message` property for stderr.  
https://github.com/launchableinc/cli/pull/797	1	readability	2024-03-05 05:35:43	Add a comment for readability	Follow-up to https://github.com/launchableinc/cli/pull/790
https://github.com/Learning-and-Intelligent-Systems/predicators/pull/237	1	readability	2022-01-05 20:34:58	give DummyOption a name for readability	
https://github.com/lichess-bot-devs/lichess-bot/pull/506	7	readability	2022-07-29 13:38:31	Refactor for code readability	These changes focus on code readability through the following changes:    - Use named variables instead of in-line expressions (see `draw_or_resign()` in lichess-bot.py)  - Changing logic flows to reduced repeated code (see `get_lichess_cloud_move()` in lichess-bot.py)  - More efficient use of `dict.get()` with default arguments (see `Challenge.__init__()` in model.py)  - Creating functions to separate in-line code (see challenge declining in lichess-bot.py)  - Use triple-quoted strings for long multi-line strings (see the Stockfish strategy in `test-bot.py`)  - As a last resort, splitting function arguments across multiple lines    The flake8 warnings are much reduced
https://github.com/Lightning-AI/litdata/pull/376	9	readability	2024-09-18 14:09:12	improve hint readability	 details>     summary> b>Before submitting /b> /summary>    - [ ] Was this discussed/agreed via a Github issue? (no need for typos and docs improvements)  - [x] Did you read the [contributor guideline](https://github.com/Lightning-AI/lit-data/blob/main/.github/CONTRIBUTING.md), Pull Request section?  - [ ] Did you make sure to update the docs?  - [ ] Did you write any new necessary tests?     /details>    ## What does this PR do?    hint on a new line is much easier to follow  also error message about missing env. vars was incorect    ## PR review    Anyone in the community is free to review the PR once the tests have passed.  If we didn't discuss your PR in GitHub issues there's a high chance it will not be merged.    ## Did you have fun?    Make sure you had fun coding   
https://github.com/Lightning-AI/LitServe/pull/224	1	readability	2024-08-27 07:00:58	improve code readability	 details>     summary> b>Before submitting /b> /summary>    - [ ] Was this discussed/agreed via a Github issue? (no need for typos and docs improvements)  - [ ] Did you read the [contributor guideline](https://github.com/Lightning-AI/pytorch-lightning/blob/main/.github/CONTRIBUTING.md), Pull Request section?  - [ ] Did you make sure to update the docs?  - [ ] Did you write any new necessary tests?     /details>    ## What does this PR do?    improve code readability by renaming variable names    ## PR review    Anyone in the community is free to review the PR once the tests have passed.  If we didn't discuss your PR in GitHub issues there's a high chance it will not be merged.    ## Did you have fun?    Make sure you had fun coding   
https://github.com/Lightning-AI/pytorch-lightning/pull/17232	1	readability	2023-04-10 14:02:10	readability deepspeed condition	## What does this PR do?    with grouping make sure that the conditions is clear     details>     summary> b>Before submitting /b> /summary>    - Was this **discussed/agreed** via a GitHub issue? (not for typos and docs)  - [x] Did you read the [contributor guideline](https://github.com/Lightning-AI/lightning/blob/master/.github/CONTRIBUTING.md), **Pull Request** section?  - [x] Did you make sure your **PR does only one thing**, instead of bundling different changes together?  - Did you make sure to **update the documentation** with your changes? (if necessary)  - Did you write any **new necessary tests**? (not for typos and docs)  - [x] Did you verify new and **existing tests pass** locally with your changes?  - Did you list all the **breaking changes** introduced by this pull request?  - Did you **update the CHANGELOG**? (not for typos, docs, test updates, or minor internal changes/refactors)       In the CHANGELOG, separate each item in the unreleased section by a blank line to reduce collisions       /details>    ## PR review    Anyone in the community is welcome to review the PR.  Before you start reviewing, make sure you have read the [review guidelines](https://github.com/Lightning-AI/lightning/wiki/Review-guidelines). In short, see the following bullet-list:     details>     summary>Reviewer checklist /summary>    - [x] Is this pull request ready for review? (if not, please submit in draft mode)  - [x] Check that all items from **Before submitting** are resolved  - [x] Make sure the title is self-explanatory and the description concisely explains the PR  - [x] Add labels and milestones (and optionally projects) to the PR so it can be classified     /details>          Did you have fun?    Make sure you had fun coding          cc @borda @justusschock @awaelchli @carmocca
https://github.com/Lightning-AI/tutorials/pull/53	1	readability	2021-07-08 20:24:40	Edit a line to ``self(x)`` for readability	# Before submitting    - [ ] Was this discussed/approved via a Github issue? (no need for typos and docs improvements)  - [x] Did you make sure to update the docs?  - [ ] Did you write any new necessary tests?    ## What does this PR do?  Edit a line to ``self(x)`` for readability.    ## PR review  We've discussed this on slack.  
https://github.com/lincc-frameworks/nested-pandas/pull/108	2	readability	2024-06-11 17:09:48	Improve Sphinx AutoAPI Readability	This PR removes a lot of bloat in the current sphinx autoapi generation configuration. Submodules had repeated NestedFrame API entries because imported classes were documented by default. This was disabled, and private functions were also disabled from being rendered. Also, removed the lingering PPT example benchmark code which was being rendered.
https://github.com/linkedin/Liger-Kernel/pull/484	7	readability	2024-12-20 23:17:39	Fix Preference Loss and Refactor for Readability 	## Summary    Thanks to @winglian and @shivam15s noticed and fixed this https://github.com/linkedin/Liger-Kernel/pull/481.    This PR suggests negating the preference loss terms to align with the formulas in the docstrings, while maintaining the base preference structure as `nll_loss + preference_loss`. This would make our loss computations more consistent since both terms would represent losses to be minimized.    [UPDATE: It seems like being addressed now in [here](https://github.com/linkedin/Liger-Kernel/commit/3205342a6a7209c55ca3a4bd97e986961fdc792e#diff-3048cb37b97e27515852c200994f3257b8ae33a465421d05184713377c0895b1R150)]  This PR also tightened the tolerance in case of encountering a similar issue.      -  ## Details  This is an optional section; is there anything specific that reviewers should be aware of?  -     ## Testing Done    - This is a required section; please describe how this change was tested. -          Replace BLANK with your device type. For example, A100-80G-PCIe    Complete the following tasks before sending your PR, and replace `[ ]` with  `[x]` to indicate you have done them.        - Hardware Type:  BLANK>  - [X] run `make test` to ensure correctness  - [X] run `make checkstyle` to ensure code style  - [ ] run `make test-convergence` to ensure convergence  
https://github.com/linode/linode-cli/pull/604	11	readability	2024-05-06 19:09:07	Improve the readability of CLI help page and table outputs	##  Description    Remove the manual rendering logic and make use of the rich tags to render colors. Also improve the readability of tables and help pages. Add a new section `Help topics` for user who wants to learn any of the topics instead of printing everything on the first page.    ##    How to Test    `make testunit`    Verify that `x-linode-cli-color` input still work: `lin linodes ls`    See the change for help page: `lin`  See the change for help topic page, i.e. : `lin env-vars`  See the change for operation help page: `lin domains`  See the chanage for table: `lin regions ls`  See the change for overriden table: `lin linodes types`    ##  Preview  **Help page:**  ![image](https://github.com/linode/linode-cli/assets/127243817/517c772c-4727-4124-ad81-8b5173c7b158)    **Help topic example (lin env-vars):**   ![image](https://github.com/linode/linode-cli/assets/127243817/e93d2433-c6ea-4ecd-bc42-88ddb8d0e919)    **Operation help page:**  ![image](https://github.com/linode/linode-cli/assets/127243817/e949af99-b732-4d99-9ff6-b04d75b61b8b)    **Table:**  ![image](https://github.com/linode/linode-cli/assets/127243817/e627b562-4279-4136-be3c-924671646f65)    **Overridden table:**  ![image](https://github.com/linode/linode-cli/assets/127243817/2796dfc8-74d6-4778-a48b-7993c3e29611)
https://github.com/livekit/agents/pull/1198	3	readability	2024-12-09 15:57:22	Improve test names for better readability	This PR updates test names to enhance readability by adding id parameters in pytest.mark.parametrize.
https://github.com/Liyulingyue/ChatGLM-6B-Prompt/pull/5	1	readability	2023-06-21 05:39:52	Improve the readability of json file	
https://github.com/log2timeline/dftimewolf/pull/908	1	readability	2024-08-22 13:30:54	Improve readability of default artifacts lists	
https://github.com/logicalclocks/hopsworks-api/pull/308	3	readability	2024-08-30 13:59:40	[FSTORE-1497][APPEND] Add _hr suffix to increase readability	This PR adds/fixes/changes...  - please summarize your changes to the code   - and make sure to include all changes to user-facing APIs    JIRA Issue: -    Priority for Review: -    Related PRs: -    **How Has This Been Tested?**    - [ ] Unit Tests  - [ ] Integration Tests  - [ ] Manual Tests on VM      **Checklist For The Assigned Reviewer:**    ```  - [ ] Checked if merge conflicts with master exist  - [ ] Checked if stylechecks for Java and Python pass  - [ ] Checked if all docstrings were added and/or updated appropriately  - [ ] Ran spellcheck on docstring  - [ ] Checked if guides & concepts need to be updated  - [ ] Checked if naming conventions for parameters and variables were followed  - [ ] Checked if private methods are properly declared and used  - [ ] Checked if hard-to-understand areas of code are commented  - [ ] Checked if tests are effective  - [ ] Built and deployed changes on dev VM and tested manually  - [x] (Checked if all type annotations were added and/or updated appropriately)  ```  
https://github.com/LUMC/pytest-workflow/pull/111	11	readability	2020-05-23 12:23:22	Improve code readability by making better use of pathlib.	### Checklist  - [ ] Pull request details were added to HISTORY.rst    Changes are not going to be in the changelog as this is minor and also not user facing.  
https://github.com/luong-komorebi/Awesome-Linux-Software/pull/732	1	readability	2023-06-27 08:58:13	Updated code formatting and readability, adhering to PEP 8 guidelines.	This commit includes modifications to the code in asort.py to improve code formatting and readability according to the PEP 8 style guidelines. The changes include consistent indentation, proper spacing around operators, proper capitalization of comments, and using parentheses for print statements for compatibility with Python 3.    Please note that these changes are purely stylistic and do not affect the functionality of the script. The goal is to enhance code maintainability and readability.
https://github.com/lutris/lutris/pull/2053	1	readability	2019-04-17 17:18:48	runners:wine: Improve the readability of 'is_installed' method	
https://github.com/lutris/lutris/pull/2054	1	readability	2019-04-17 16:58:40	runners:web: Improve the readability of 'play' method	
https://github.com/macrocosm-os/folding/pull/226	1	readability	2024-10-06 23:50:23	Update logger configuration in config.py to improve readability	
https://github.com/ManimCommunity/manim/pull/2164	3	readability	2021-10-13 06:01:49	Improved readability of regular expression	   Addresses issue #2163     By removing single charecter alternation     And keeping a charecter set instead       Thank you for contributing to Manim! Learn more about the process in our contributing guidelines: https://docs.manim.community/en/latest/contributing.html      ## Overview: What does this pull request change?  This PR changes the regex expression    ## Motivation and Explanation: Why and how do your changes improve the library?  This changes will make the regex expression more readable    ## Links to added or changed documentation pages  It will change 3 files:       [manim/cli/render/global_options.py](https://github.com/ManimCommunity/manim/blob/main/manim/cli/render/global_options.py)       [manim/cli/render/render_options.py](https://github.com/ManimCommunity/manim/blob/main/manim/cli/render/render_options.py)       [manim/_config/utils.py](https://github.com/ManimCommunity/manim/blob/main/manim/_config/utils.py)      ## Further Information and Comments     If applicable, put further comments for the reviewers here.             Thank you again for contributing! Do not modify the lines below, they are for reviewers.    ## Reviewer Checklist  - [ ] The PR title is descriptive enough for the changelog, and the PR is labeled correctly  - [ ] If applicable: newly added non-private functions and classes have a docstring including a short summary and a PARAMETERS section  - [ ] If applicable: newly added functions and classes are tested  
https://github.com/MarketSquare/robotframework-robocop/pull/419	14	readability	2021-08-25 07:23:04	Remove redundant code, fix typos, improve readability, refactor	
https://github.com/matplotlib/matplotlib/pull/15027	1	readability	2019-09-02 20:46:29	More readability improvements on axis3d.	At least the comment helps me, and whole thing is shorter :)    ## PR Summary    ## PR Checklist    - [ ] Has Pytest style unit tests  - [ ] Code is [Flake 8](http://flake8.pycqa.org/en/latest/) compliant  - [ ] New features are documented, with examples if plot related  - [ ] Documentation is sphinx and numpydoc compliant  - [ ] Added an entry to doc/users/next_whats_new/ if major new feature (follow instructions in README.rst there)  - [ ] Documented in doc/api/api_changes.rst if API changed in a backward-incompatible way        Thank you so much for your PR!  To help us review your contribution, please  consider the following points:    - A development guide is available at https://matplotlib.org/devdocs/devel/index.html.    - Help with git and github is available at    https://matplotlib.org/devel/gitwash/development_workflow.html.    - Do not create the PR out of master, but out of a separate branch.    - The PR title should summarize the changes, for example "Raise ValueError on    non-numeric input to set_xlim".  Avoid non-descriptive titles such as    "Addresses issue #8576".    - The summary should provide at least 1-2 sentences describing the pull request    in detail (Why is this change required?  What problem does it solve?) and    link to any relevant issues.    - If you are contributing fixes to docstrings, please pay attention to    http://matplotlib.org/devel/documenting_mpl.html#formatting.  In particular,    note the difference between using single backquotes, double backquotes, and    asterisks in the markup.    We understand that PRs can sometimes be overwhelming, especially as the  reviews start coming in.  Please let us know if the reviews are unclear or  the recommended next step seems overly demanding, if you would like help in  addressing a reviewer's comments, or if you have been waiting too long to hear  back on your PR.     
https://github.com/matplotlib/matplotlib/pull/22469	1	readability	2022-02-17 11:16:13	Improve readability of mathtext internal structures.	This changes the repr of mathtext lists from e.g.  ```  [Hlist  70.39 41.78 0.00 0.00> [Hlist  0.00 0.00 0.00 0.00> ] [Hlist  37.62 40.09 0.00 0.00> `V` k1.11] [Hlist  32.76 41.78 0.00 0.00> ` ` `l` k10.34]]  ```  to  ```  Hlist w=70.39 h=41.78 d=0.00 s=0.00>[Hlist w=0.00 h=0.00 d=0.00 s=0.00>[], Hlist w=37.62 h=40.09 d=0.00 s=0.00>[`V`, k1.11], Hlist w=32.76 h=41.78 d=0.00 s=0.00>[` `, `l`, k10.34]]  ```  These are internal structures that should only ever be seen when  debugging mathtext layout and can be quite deeply nested, so a somewhat  concise notation should is good (e.g., backticks for Chars, k for  Kerns), but still...  - indicate what each of the four numbers correspond to    (width/height/descent shift),  - move the brackets *after* the class name and metrics, which makes it    clearer what is info about the list instance itself and what are the    contents of the instance (in particular, the empty hlist at the    beginning is now clearer),  - separate list items with commas.    ## PR Summary    ## PR Checklist       Please mark any checkboxes that do not apply to this PR as [N/A].    **Tests and Styling**  - [ ] Has pytest style unit tests (and `pytest` passes).  - [ ] Is [Flake 8](https://flake8.pycqa.org/en/latest/) compliant (install `flake8-docstrings` and run `flake8 --docstring-convention=all`).    **Documentation**  - [ ] New features are documented, with examples if plot related.  - [ ] New features have an entry in `doc/users/next_whats_new/` (follow instructions in README.rst there).  - [ ] API changes documented in `doc/api/next_api_changes/` (follow instructions in README.rst there).  - [ ] Documentation is sphinx and numpydoc compliant (the docs should [build](https://matplotlib.org/devel/documenting_mpl.html#building-the-docs) without error).        Thank you so much for your PR!  To help us review your contribution, please  consider the following points:    - A development guide is available at https://matplotlib.org/devdocs/devel/index.html.    - Help with git and github is available at    https://matplotlib.org/devel/gitwash/development_workflow.html.    - Do not create the PR out of main, but out of a separate branch.    - The PR title should summarize the changes, for example "Raise ValueError on    non-numeric input to set_xlim".  Avoid non-descriptive titles such as    "Addresses issue #8576".    - The summary should provide at least 1-2 sentences describing the pull request    in detail (Why is this change required?  What problem does it solve?) and    link to any relevant issues.    - If you are contributing fixes to docstrings, please pay attention to    http://matplotlib.org/devel/documenting_mpl.html#formatting.  In particular,    note the difference between using single backquotes, double backquotes, and    asterisks in the markup.    We understand that PRs can sometimes be overwhelming, especially as the  reviews start coming in.  Please let us know if the reviews are unclear or  the recommended next step seems overly demanding, if you would like help in  addressing a reviewer's comments, or if you have been waiting too long to hear  back on your PR.     
https://github.com/matplotlib/matplotlib/pull/24983	1	readability	2023-02-13 17:34:51	Refactor parts of Axis for readability	## PR Summary    Looks like parts of the code assumes that there is always exactly one axis with a given name, while others are dealing with zero or more. This PR assumes one and that seems to be the case, at least in the current tests, as e.g. the removed else-clauses in the for-loops were not tested. And other parts of the code would break anyway...    All introduced methods are quite short, so primarily for readability.    ## PR Checklist       Please mark any checkboxes that do not apply to this PR as [N/A].      **Documentation and Tests**  - [ ] Has pytest style unit tests (and `pytest` passes)  - [ ] Documentation is sphinx and numpydoc compliant (the docs should [build](https://matplotlib.org/devel/documenting_mpl.html#building-the-docs) without error).  - [ ] New plotting related features are documented with examples.    **Release Notes**  - [ ] New features are marked with a `.. versionadded::` directive in the docstring and documented in `doc/users/next_whats_new/`  - [ ] API changes are marked with a `.. versionchanged::` directive in the docstring and documented in `doc/api/next_api_changes/`  - [ ] Release notes conform with instructions in  `next_whats_new/README.rst` or `next_api_changes/README.rst`        Thank you so much for your PR!  To help us review your contribution, please  consider the following points:    - A development guide is available at https://matplotlib.org/devdocs/devel/index.html.    - Help with git and github is available at    https://matplotlib.org/devel/gitwash/development_workflow.html.    - Create a separate branch for your changes and open the PR from this branch. Please avoid working on `main`.    - The PR title should summarize the changes, for example "Raise ValueError on    non-numeric input to set_xlim".  Avoid non-descriptive titles such as    "Addresses issue #8576".    - The summary should provide at least 1-2 sentences describing the pull request    in detail (Why is this change required?  What problem does it solve?) and    link to any relevant issues.    - If you are contributing fixes to docstrings, please pay attention to    http://matplotlib.org/devel/documenting_mpl.html#formatting.  In particular,    note the difference between using single backquotes, double backquotes, and    asterisks in the markup.    We understand that PRs can sometimes be overwhelming, especially as the  reviews start coming in.  Please let us know if the reviews are unclear or  the recommended next step seems overly demanding, if you would like help in  addressing a reviewer's comments, or if you have been waiting too long to hear  back on your PR.     
https://github.com/matplotlib/matplotlib/pull/26254	2	readability	2023-07-04 17:56:00	DOC: Improve readability of date formatters/locators example	## PR summary  Improve readability of date formatters/locators example by grouping code and output.    - [current output with generated plots stuck together](https://matplotlib.org/devdocs/gallery/ticks/date_formatters_locators.html#sphx-glr-gallery-ticks-date-formatters-locators-py)  - [new output with improved readability](https://output.circle-artifacts.com/output/job/f52943a2-c4b9-4a97-b502-016c65026830/artifacts/0/doc/build/html/gallery/ticks/date_formatters_locators.html#sphx-glr-gallery-ticks-date-formatters-locators-py)            ## PR checklist     Please mark any checkboxes that do not apply to this PR as [N/A].     - [N/A] "closes #0000" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)  - [N/A] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)  - [N/A] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/documenting_mpl.html#writing-examples-and-tutorials)  - [N/A] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/coding_guide.html#new-features-and-api-changes)  - [x] Documentation complies with [general](https://matplotlib.org/devdocs/devel/documenting_mpl.html#writing-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/documenting_mpl.html#writing-docstrings) guidelines        Thank you so much for your PR!  To help us review your contribution, please  consider the following points:    - A development guide is available at https://matplotlib.org/devdocs/devel/index.html.    - Help with git and github is available at https://matplotlib.org/devdocs/devel/development_workflow.html    - Create a separate branch for your changes and open the PR from this branch. Please avoid working on `main`.    - The PR title should summarize the changes, for example "Raise ValueError on    non-numeric input to set_xlim".  Avoid non-descriptive titles such as    "Addresses issue #8576".    - The summary should provide at least 1-2 sentences describing the pull request    in detail (Why is this change required?  What problem does it solve?) and    link to any relevant issues.    - If you are contributing fixes to docstrings, please pay attention to    https://matplotlib.org/stable/devel/documenting_mpl.html#formatting-conventions.  In particular,    note the difference between using single backquotes, double backquotes, and    asterisks in the markup.    We understand that PRs can sometimes be overwhelming, especially as the  reviews start coming in.  Please let us know if the reviews are unclear or  the recommended next step seems overly demanding, if you would like help in  addressing a reviewer's comments, or if you have been waiting too long to hear  back on your PR.     
https://github.com/mattermost/mattermost-data-warehouse/pull/1592	2	readability	2024-09-04 11:32:18	Chore: improve hightouch sync status readability	#### Summary    Converts raw dict output to table.
https://github.com/mavlink/MAVSDK-Proto/pull/35	1	readability	2018-08-25 12:03:39	Moved to dataclass for easier handling and better readability	@JonasVautherin FYI
https://github.com/maximtrp/scikit-posthocs/pull/9	3	readability	2018-08-18 11:06:17	PEP compliance to improve readability	
https://github.com/MDAnalysis/mdanalysis/pull/1995	2	readability	2018-08-14 20:45:32	SurvivalProbability - Readability, performance, and algorithm changes	Small changes:  - Performance (16 minutes to 60 seconds):   -- issue due to the unnecessary function overhead,    -- iterating over the dataset only once (RAM memory optimisation)  - More thorough documentation of parameters and additional sanity checks in __init__  - Removed temporarily the progress meter which only worked for loading the simulation dataset, confusing the reader  - Allows the user to access the distribution for each tau through sp.sp_timeseries  - Returns the taus along with the timeseries (opening access for dt). Not returning tau = 0     Validity Test Cases Changes:  - Replaced the arbitrary test cases with defined datasets and predictable taus  - Added a test case where no atoms IDs are found. In this case, we return tau = NaN. This is because 0 means that the initial molecular leaves after a given tau. However, if there is no initial molecules in the first place, this would be the wrong conclusion.     Algorithmic Changes made in this Pull Request - Request for Contribution from the Original Author:    - We modified the algorithm to be applicable to other atom groups (e.g. ions) besides water. Particularly, we changed the way the algorithm behaves in the case where there is no molecules found for the reference frame. Previously, one would expect the reference frame to always find some water molecules. If this was not the case, each tau was diluted - divided by (Nt + 1). Because it was unlikely to happen with any reasonable water selection, this case was not important. However, let us consider using SP the survival of ions in a given area, with frames where no ions are found in the first place (reference frame). For such frames, diluting the taus means that the ions leave earlier - whereas in fact, these ions might rarely diffuse into the selected area. The rare diffusion into the selected area should not affect how long they stay (ie their SurvivalProbability). Please let us know if we missed anything.     Questions:   - Since this algorithm is applicable to any mobile atoms in a system, we suggest this package is moved out of waterdynamics into a more general package.     Future considerations:  - Adding progress bar  - Adding dt to allow sample the dataset with a faster shift (and possibly discuss data correlations for larger taus)    Edit: Acknowledgement - This work was done together with @p-j-smith, but we submitted most of it on my account.     PR Checklist  ------------   - [X ] Tests?   - [X] Docs?   - [ ] CHANGELOG updated?   - [ ] Issue raised/referenced?  
https://github.com/Mecademic/ROS/pull/7	1	readability	2021-06-16 16:31:34	Reformatting to comply with PEP8 style convention and improving readability	
https://github.com/metabrainz/listenbrainz-server/pull/939	2	readability	2020-07-01 16:11:14	Improve readability and consistency in create_dataframes.py	This PR formats create_dataframe.py for improving consistency.    I have also deleted the associated HTML files since some of the information it contains is stored in dataframe_metadata and some of the information is sent over in a message over rabbitMQ to lemmy which is then mailed using observability mailer.  
https://github.com/metabrainz/listenbrainz-server/pull/940	2	readability	2020-06-30 11:51:29	Minor fixes in train_models for readability	
https://github.com/metabrainz/listenbrainz-server/pull/941	2	readability	2020-07-06 12:58:48	Improve readability and consistency in candidate_sets	
https://github.com/metabrainz/listenbrainz-server/pull/978	2	readability	2020-07-25 08:14:39	Improve readability of "Daily Activity" API endpoint	# Problem  The "Daily Activity" API endpoint is confusing and hard to understand.    # Solution  Grouping hours of each day into a single list solves the issue.
https://github.com/metakgp/gyft/pull/112	14	readability	2023-10-12 16:33:03	Modularization according to #105 and rewrite of code structure for readability	Needs a detailed review and thorough testing.    Rewrite of how the timetable is stored, as a list of courses instead of a dictionary of dates and times. Added docstrings as needed.
https://github.com/MetOffice/CSET/pull/968	1	readability	2024-12-10 09:41:21	Import CSET.recipes as recipes during testing for readability	   Thanks for contributing! Please add a short description of your change, and link to an issue, e.g. "Fixes #123"      Minor change to import name of `CSET.recipes` during testing. Just a minor cleanup to readability.    ### Contribution checklist    Aim to have all relevant checks ticked off before merging. See the [developer's guide](https://metoffice.github.io/CSET/contributing/) for more detail.    - [ ] Documentation has been updated to reflect change.  - [ ] New code has tests, and affected old tests have been updated.  - [x] All tests and CI checks pass.  - [x] Ensured the pull request title is descriptive.  - [ ] Conda lock files have been updated if dependencies have changed.  - [ ] Attributed any Generative AI, such as GitHub Copilot, used in this PR.  - [x] Marked the PR as ready to review.  
https://github.com/microsoft/promptbase/pull/19	1	readability	2024-01-24 21:08:16	 hanged concatenation of strings to f-strings to improve readability  	 and unify the code
https://github.com/mideind/GreynirCorrect/pull/58	21	readability	2023-09-12 13:01:19	Readability	 g t k saman allar breytingarnar fr  Huldu (tov-fixes) og Svanhv ti (readability & tov)   eitt branch til  ess a  taka inn m nar breytingar l ka.    Helstu breytingarnar hj  m r er  etta GreynirCorrectAPI vi m t   GreynirCorrect pakkanum. N na er eitt fall sem allur k  i   a  kalla   til  ess a  f  lei r ttingu og  v  a eins auglj sara a  sj  hva  er   gangi ofarlega   pakkanum.  essi breyting krefst einhverrar vinnu fr   eim sem nota pakkann sem og a  vi  f kkum f llum sem h gt er a  kalla   og  v   ttum vi  a  h kka  tg fun mer pakkans upp   4.?.? eftir  essar breytingar.    Formatting breytingar reyndi  g a  setja   st k commits, en gleymdist einu sinni.
https://github.com/mindsdb/mindsdb/pull/2295	1	readability	2022-06-06 15:00:05	Improving readability of Docker files	Another attempt to use Dockerfile ARG instead of generating docker files manually #1752.    This moves config files out of inline content for easier comparison, uses ARG VERSION argument to parameterize build, and documents build and release process.
https://github.com/ministryofjustice/operations-engineering/pull/4473	1	readability	2024-05-17 15:24:51	 Format docstring to improve readability	I'm not sure why the ide didn't complete this task, but this commit should make it a little more readable on screen.  
https://github.com/ministryofjustice/operations-engineering/pull/4804	2	readability	2024-09-04 10:36:13	   Change the slack message to improve readability	When the dormant user count exceeds ten users, the slack message becomes extremely difficult to read.    Here is an example of the hard to read slack message:  https://mojdt.slack.com/archives/C033QBE511V/p1725378457120739  
https://github.com/mirumee/ariadne-codegen/pull/28	6	readability	2022-11-04 13:10:29	Query strings readability	This pr:   - formats generated query strings   - adds definition of simple `gql` lambda to generated client file   - wraps generated query strings in gql lambda    resolves #20 
https://github.com/mlcommons/algorithmic-efficiency/pull/257	1	readability	2022-11-16 06:05:11	Add dashes in appended timestamp for readability	
https://github.com/mlcommons/chakra/pull/19	3	readability	2024-02-06 22:19:54	Refactoring PyTorch2Chakra converter for better readability and dependency handling	## Summary  This pull request significantly refactors the `et_converter` module, with a particular focus on enhancing the PyTorch2Chakra converter:  - Shifted towards an object-oriented approach for improved readability and maintainability.  - Revised the logic for data dependency identification:    - Moved away from using tensor input-output relationships.    - Now follows control dependencies to accurately encode data dependencies.  - Introduced utility functions for:    - Cycle detection to validate dependencies.    - Execution simulation for easier simulation of final Chakra traces.  - Enhanced documentation through detailed logging and comments to explain the conversion process from traces to final Chakra traces, addressing previous bugs and limitations.      ## Test Plan  ```  $ cd ~/param  $ cd param/train/comms/pt  $ pip install .  $ cd ../../compute/python  $ pip install -r requirements.txt  $ python setup.py install  $ python tools/trace_link.py --pytorch-et-file ~/llama_pytorch_et/llama_et_0.json --kineto-file ~/llama_kineto/worker0_step_12.1697596714999.pt.trace.json --output-file ~/rank0.json    $ cd ~/charka  $ pip install .  $ python3 -m chakra.et_converter.et_converter --input_type PyTorch --input_filename ~/rank0.json --output_filename ~/rank0.chakra --num_dims 1  $ tail debug.log  INFO [02/06/2024 09:50:41 AM] GPU Node ID 107127 completed at 7276140us  INFO [02/06/2024 09:50:41 AM] Issuing GPU Node ID 107132 (void at::native::vectorized_elementwise_kernel 4, at::native::sqrt_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::BFloat16)#1}, at::detail::Array char*, 2> >(int, at::native::sqrt_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(c10::BFloat16)#1}, at::detail::Array char*, 2>)) at 7276140us with duration 3us  INFO [02/06/2024 09:50:41 AM] GPU Node ID 107132 completed at 7276143us  INFO [02/06/2024 09:50:41 AM] Issuing GPU Node ID 107135 (void at::native::vectorized_elementwise_kernel 4, at::native::BUnaryFunctor c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor float> >, at::detail::Array char*, 2> >(int, at::native::BUnaryFunctor c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor float> >, at::detail::Array char*, 2>)) at 7276143us with duration 2us  INFO [02/06/2024 09:50:41 AM] GPU Node ID 107135 completed at 7276145us  INFO [02/06/2024 09:50:41 AM] Issuing GPU Node ID 107138 (void at::native::vectorized_elementwise_kernel 4, at::native::CUDAFunctor_add c10::BFloat16>, at::detail::Array char*, 3> >(int, at::native::CUDAFunctor_add c10::BFloat16>, at::detail::Array char*, 3>)) at 7276145us with duration 3us  INFO [02/06/2024 09:50:41 AM] GPU Node ID 107138 completed at 7276148us  INFO [02/06/2024 09:50:41 AM] Issuing GPU Node ID 107141 (void at::native::vectorized_elementwise_kernel 4, at::native::addcdiv_cuda_kernel(at::TensorIteratorBase&, c10::Scalar const&)::{lambda()#2}::operator()() const::{lambda()#9}::operator()() const::{lambda(c10::BFloat16, c10::BFloat16, c10::BFloat16)#1}, at::detail::Array char*, 4> >(int, at::native::addcdiv_cuda_kernel(at::TensorIteratorBase&, c10::Scalar const&)::{lambda()#2}::operator()() const::{lambda()#9}::operator()() const::{lambda(c10::BFloat16, c10::BFloat16, c10::BFloat16)#1}, at::detail::Array char*, 4>)) at 7276148us with duration 3us  INFO [02/06/2024 09:50:41 AM] GPU Node ID 107141 completed at 7276151us  INFO [02/06/2024 09:50:41 AM] Simulation of Chakra node execution completed.  ```
https://github.com/mlcommons/chakra/pull/131	9	readability	2024-07-16 18:19:28	Refactor trace_link for better maintainability and readability	## Summary  Refactor trace_link for better maintainability and readability    ## Test Plan  1. CI passes.  2. Ran correlation  ```  $ pip install .                Processing /Users/theo/chakra-dev    Installing build dependencies ... done    Getting requirements to build wheel ... done    Preparing metadata (pyproject.toml) ... done  Requirement already satisfied: protobuf==4.* in /Users/theo/venv/lib/python3.10/site-packages (from chakra==0.0.4) (4.23.4)  Requirement already satisfied: graphviz in /Users/theo/venv/lib/python3.10/site-packages (from chakra==0.0.4) (0.20.1)  Requirement already satisfied: networkx in /Users/theo/venv/lib/python3.10/site-packages (from chakra==0.0.4) (3.2.1)  Requirement already satisfied: pydot in /Users/theo/venv/lib/python3.10/site-packages (from chakra==0.0.4) (2.0.0)  Requirement already satisfied: pyparsing>=3 in /Users/theo/venv/lib/python3.10/site-packages (from pydot->chakra==0.0.4) (3.1.1)  Building wheels for collected packages: chakra    Building wheel for chakra (pyproject.toml) ... done    Created wheel for chakra: filename=chakra-0.0.4-py3-none-any.whl size=54789 sha256=77d0bdd1c3c5604cb899f9e6f9b76c8d01a28df9309d8d25d84da3d24dc3c867    Stored in directory: /Users/theo/Library/Caches/pip/wheels/1f/cc/a0/f451e6630d3461090be1de9594059abe3c2f5be7ce264deca3  Successfully built chakra  Installing collected packages: chakra    Attempting uninstall: chakra      Found existing installation: chakra 0.0.4      Uninstalling chakra-0.0.4:        Successfully uninstalled chakra-0.0.4  Successfully installed chakra-0.0.4    $ python3 ci_tools/integration_tests.py --tgz_path tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05.tgz --num_ranks 8 --tolerance 0.05 --expected_times_ms 14597 14597 14968 14638 14649 14700 14677 14735  Extracting tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05.tgz to tests/data/1.0.2-chakra.0.0.4  Running command: chakra_trace_link --chakra-host-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_host_et_0.json --chakra-device-trace tests/data/1.0.2-chakra.0.0.4/lla  ma_pytorch24.05/kineto_0.json --output-file tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_0.json                                                                     Running command: chakra_trace_link --chakra-host-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_host_et_1.json --chakra-device-trace tests/data/1.0.2-chakra.0.0.4/lla  ma_pytorch24.05/kineto_1.json --output-file tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_1.json                                                                     Running command: chakra_trace_link --chakra-host-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_host_et_2.json --chakra-device-trace tests/data/1.0.2-chakra.0.0.4/lla  ma_pytorch24.05/kineto_2.json --output-file tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_2.json                                                                     Running command: chakra_trace_link --chakra-host-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_host_et_3.json --chakra-device-trace tests/data/1.0.2-chakra.0.0.4/lla  ma_pytorch24.05/kineto_3.json --output-file tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_3.json                                                                     Running command: chakra_trace_link --chakra-host-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_host_et_4.json --chakra-device-trace tests/data/1.0.2-chakra.0.0.4/lla  ma_pytorch24.05/kineto_4.json --output-file tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_4.json                                                                     Running command: chakra_trace_link --chakra-host-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_host_et_5.json --chakra-device-trace tests/data/1.0.2-chakra.0.0.4/lla  ma_pytorch24.05/kineto_5.json --output-file tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_5.json                                                                     Running command: chakra_trace_link --chakra-host-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_host_et_6.json --chakra-device-trace tests/data/1.0.2-chakra.0.0.4/lla  ma_pytorch24.05/kineto_6.json --output-file tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_6.json                                                                     Running command: chakra_trace_link --chakra-host-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_host_et_7.json --chakra-device-trace tests/data/1.0.2-chakra.0.0.4/lla  ma_pytorch24.05/kineto_7.json --output-file tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_7.json   Running command: chakra_converter --input_filename tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_0.json --output_filename tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_final_0.chakra --input_type PyTorch --log_filename /tmp/rank_0.log --simulate  Running command: chakra_converter --input_filename tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_1.json --output_filename tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_final_1.chakra --input_type PyTorch --log_filename /tmp/rank_1.log --simulate  Running command: chakra_converter --input_filename tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_2.json --output_filename tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_final_2.chakra --input_type PyTorch --log_filename /tmp/rank_2.log --simulate  Running command: chakra_converter --input_filename tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_3.json --output_filename tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_final_3.chakra --input_type PyTorch --log_filename /tmp/rank_3.log --simulate  Running command: chakra_converter --input_filename tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_4.json --output_filename tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_final_4.chakra --input_type PyTorch --log_filename /tmp/rank_4.log --simulate  Running command: chakra_converter --input_filename tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_5.json --output_filename tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_final_5.chakra --input_type PyTorch --log_filename /tmp/rank_5.log --simulate  Running command: chakra_converter --input_filename tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_6.json --output_filename tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_final_6.chakra --input_type PyTorch --log_filename /tmp/rank_6.log --simulate  Running command: chakra_converter --input_filename tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_7.json --output_filename tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_final_7.chakra --input_type PyTorch --log_filename /tmp/rank_7.log --simulate    ==> rank_0.log  ==  INFO [07/12/2024 03:18:53 PM] GPU Node ID 301192 on stream 7 completed at 14488271us, tid: stream 7  INFO [07/12/2024 03:18:53 PM] Simulation of Chakra node execution completed.    ==> rank_1.log  ==  INFO [07/12/2024 03:20:58 PM] GPU Node ID 301192 on stream 7 completed at 14489195us, tid: stream 7  INFO [07/12/2024 03:20:58 PM] Simulation of Chakra node execution completed.    ==> rank_2.log  ==  INFO [07/12/2024 03:09:17 PM] GPU Node ID 301192 on stream 7 completed at 14550790us, tid: stream 7  INFO [07/12/2024 03:09:17 PM] Simulation of Chakra node execution completed.    ==> rank_3.log  ==  INFO [07/12/2024 03:19:21 PM] GPU Node ID 301192 on stream 7 completed at 14418327us, tid: stream 7  INFO [07/12/2024 03:19:21 PM] Simulation of Chakra node execution completed.    ==> rank_4.log  ==  INFO [07/12/2024 03:17:19 PM] GPU Node ID 301192 on stream 7 completed at 14500584us, tid: stream 7  INFO [07/12/2024 03:17:19 PM] Simulation of Chakra node execution completed.    ==> rank_5.log  ==  INFO [07/12/2024 03:15:02 PM] GPU Node ID 301192 on stream 7 completed at 14308678us, tid: stream 7  INFO [07/12/2024 03:15:02 PM] Simulation of Chakra node execution completed.    ==> rank_6.log  ==  INFO [07/12/2024 03:16:40 PM] GPU Node ID 301192 on stream 7 completed at 14385408us, tid: stream 7  INFO [07/12/2024 03:16:40 PM] Simulation of Chakra node execution completed.    ==> rank_7.log  ==  INFO [07/12/2024 03:12:03 PM] GPU Node ID 301192 on stream 7 completed at 14398107us, tid: stream 7  INFO [07/12/2024 03:12:03 PM] Simulation of Chakra node execution completed.  ```
https://github.com/mlcommons/chakra/pull/133	14	readability	2024-07-16 18:53:12	Refactor converter for better maintainability and readability	## Summary  Refactor converter for better maintainability and readability    This PR relies on https://github.com/mlcommons/chakra/pull/131    ## Test Plan  1. CI passes.  2. Ran correlation  ```  $ pip install .  Processing /Users/theo/chakra-dev    Installing build dependencies ... done    Getting requirements to build wheel ... done    Preparing metadata (pyproject.toml) ... done  Requirement already satisfied: protobuf==4.* in /Users/theo/venv/lib/python3.10/site-packages (from chakra==0.0.4) (4.23.4)  Requirement already satisfied: graphviz in /Users/theo/venv/lib/python3.10/site-packages (from chakra==0.0.4) (0.20.1)  Requirement already satisfied: networkx in /Users/theo/venv/lib/python3.10/site-packages (from chakra==0.0.4) (3.2.1)  Requirement already satisfied: pydot in /Users/theo/venv/lib/python3.10/site-packages (from chakra==0.0.4) (2.0.0)  Requirement already satisfied: pyparsing>=3 in /Users/theo/venv/lib/python3.10/site-packages (from pydot->chakra==0.0.4) (3.1.1)  Building wheels for collected packages: chakra    Building wheel for chakra (pyproject.toml) ... done    Created wheel for chakra: filename=chakra-0.0.4-py3-none-any.whl size=55402 sha256=78468b1423f16e442b4cbe02ee73dbf09d75dac52fc50ae552bfe633d17a3ed4    Stored in directory: /Users/theo/Library/Caches/pip/wheels/1f/cc/a0/f451e6630d3461090be1de9594059abe3c2f5be7ce264deca3  Successfully built chakra  Installing collected packages: chakra    Attempting uninstall: chakra      Found existing installation: chakra 0.0.4      Uninstalling chakra-0.0.4:        Successfully uninstalled chakra-0.0.4  Successfully installed chakra-0.0.4    $ python3 ci_tools/integration_tests.py --tgz_path tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05.tgz --num_ranks 8 --tolerance 0.05 --expected_times_ms 14597 14597 14968 14638 14649 14700 14677 14735  Extracting tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05.tgz to tests/data/1.0.2-chakra.0.0.4  Running command: chakra_trace_link --chakra-host-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_host_et_0.json --chakra-device-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/kineto_0.json --output-file tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_0.json  Running command: chakra_trace_link --chakra-host-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_host_et_1.json --chakra-device-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/kineto_1.json --output-file tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_1.json  Running command: chakra_trace_link --chakra-host-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_host_et_2.json --chakra-device-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/kineto_2.json --output-file tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_2.json  Running command: chakra_trace_link --chakra-host-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_host_et_3.json --chakra-device-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/kineto_3.json --output-file tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_3.json  Running command: chakra_trace_link --chakra-host-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_host_et_4.json --chakra-device-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/kineto_4.json --output-file tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_4.json  Running command: chakra_trace_link --chakra-host-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_host_et_5.json --chakra-device-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/kineto_5.json --output-file tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_5.json  Running command: chakra_trace_link --chakra-host-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_host_et_6.json --chakra-device-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/kineto_6.json --output-file tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_6.json  Running command: chakra_trace_link --chakra-host-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_host_et_7.json --chakra-device-trace tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/kineto_7.json --output-file tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_7.json  Running command: chakra_converter --log-filename /tmp/rank_0.log PyTorch --input tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_0.json --output tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_final_0.chakra --simulate  Running command: chakra_converter --log-filename /tmp/rank_1.log PyTorch --input tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_1.json --output tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_final_1.chakra --simulate  Running command: chakra_converter --log-filename /tmp/rank_2.log PyTorch --input tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_2.json --output tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_final_2.chakra --simulate  Running command: chakra_converter --log-filename /tmp/rank_3.log PyTorch --input tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_3.json --output tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_final_3.chakra --simulate  Running command: chakra_converter --log-filename /tmp/rank_4.log PyTorch --input tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_4.json --output tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_final_4.chakra --simulate  Running command: chakra_converter --log-filename /tmp/rank_6.log PyTorch --input tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_6.json --output tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_final_6.chakra --simulate  Running command: chakra_converter --log-filename /tmp/rank_7.log PyTorch --input tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_7.json --output tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_final_7.chakra --simulate  Running command: chakra_converter --log-filename /tmp/rank_5.log PyTorch --input tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_et_plus_5.json --output tests/data/1.0.2-chakra.0.0.4/llama_pytorch24.05/chakra_final_5.chakra --simulate  ```  ```  ==> rank_0.log  ==  DEBUG [07/16/2024 09:04:25 AM] GPU Node ID 301192 on stream 7 completed at 14488271us, tid: stream 7  DEBUG [07/16/2024 09:04:25 AM] Simulation of Chakra node execution completed.    ==> rank_1.log  ==  DEBUG [07/16/2024 09:05:36 AM] GPU Node ID 301192 on stream 7 completed at 14489195us, tid: stream 7  DEBUG [07/16/2024 09:05:36 AM] Simulation of Chakra node execution completed.    ==> rank_2.log  ==  DEBUG [07/16/2024 08:55:34 AM] GPU Node ID 301192 on stream 7 completed at 14550790us, tid: stream 7  DEBUG [07/16/2024 08:55:34 AM] Simulation of Chakra node execution completed.    ==> rank_3.log  ==  DEBUG [07/16/2024 09:02:32 AM] GPU Node ID 301192 on stream 7 completed at 14418327us, tid: stream 7  DEBUG [07/16/2024 09:02:32 AM] Simulation of Chakra node execution completed.    ==> rank_4.log  ==  DEBUG [07/16/2024 09:02:26 AM] GPU Node ID 301192 on stream 7 completed at 14500584us, tid: stream 7  DEBUG [07/16/2024 09:02:26 AM] Simulation of Chakra node execution completed.    ==> rank_5.log  ==  DEBUG [07/16/2024 08:58:41 AM] GPU Node ID 301192 on stream 7 completed at 14308678us, tid: stream 7  DEBUG [07/16/2024 08:58:41 AM] Simulation of Chakra node execution completed.    ==> rank_6.log  ==  DEBUG [07/16/2024 09:02:36 AM] GPU Node ID 301192 on stream 7 completed at 14385408us, tid: stream 7  DEBUG [07/16/2024 09:02:36 AM] Simulation of Chakra node execution completed.    ==> rank_7.log  ==  DEBUG [07/16/2024 08:57:03 AM] GPU Node ID 301192 on stream 7 completed at 14398107us, tid: stream 7  DEBUG [07/16/2024 08:57:03 AM] Simulation of Chakra node execution completed.  ```
https://github.com/mlflow/mlflow/pull/5959	25	readability	2022-05-27 10:41:28	Improve readability	## What changes are proposed in this pull request?    Improve readability around typos in docs; docstrings and a variable name    ## How is this patch tested?    No testing necessary. Only var changed is not used out of function scope.    ## Does this PR change the documentation?    - [ ] No. You can skip the rest of this section.  - [x] Yes. Make sure the changed pages / sections render correctly by following the steps below.    1. Check the status of the `ci/circleci: build_doc` check. If it's successful, proceed to the     next step, otherwise fix it.  2. Click `Details` on the right to open the job page of CircleCI.  3. Click the `Artifacts` tab.  4. Click `docs/build/html/index.html`.  5. Find the changed pages / sections and make sure they render correctly.    ## Release Notes    ### Is this a user-facing change?    - [x] No. You can skip the rest of this section.  - [ ] Yes. Give a description of this change to be included in the release notes for MLflow users.    (Details in 1-2 sentences. You can just refer to another PR with a description if this PR is part of a larger change.)    ### What component(s), interfaces, languages, and integrations does this PR affect?  Components  - [ ] `area/artifacts`: Artifact stores and artifact logging  - [ ] `area/build`: Build and test infrastructure for MLflow  - [ ] `area/docs`: MLflow documentation pages  - [ ] `area/examples`: Example code  - [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry  - [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors  - [ ] `area/projects`: MLproject format, project running backends  - [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs  - [ ] `area/server-infra`: MLflow Tracking server backend  - [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging    Interface  - [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server  - [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models  - [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry  - [ ] `area/windows`: Windows support    Language  - [ ] `language/r`: R APIs and clients  - [ ] `language/java`: Java APIs and clients  - [ ] `language/new`: Proposals for new client languages    Integrations  - [ ] `integrations/azure`: Azure and Azure ML integrations  - [ ] `integrations/sagemaker`: SageMaker integrations  - [ ] `integrations/databricks`: Databricks integrations        Insert an empty named anchor here to allow jumping to this section with a fragment URL  (e.g. https://github.com/mlflow/mlflow/pull/123#user-content-release-note-category).  Note that GitHub prefixes anchor names in markdown with "user-content-".      a name="release-note-category"> /a>  ### How should the PR be classified in the release notes? Choose one:    - [ ] `rn/breaking-change` - The PR will be mentioned in the "Breaking Changes" section  - [ ] `rn/none` - No description will be included. The PR will be mentioned only by the PR number in the "Small Bugfixes and Documentation Updates" section  - [ ] `rn/feature` - A new user-facing feature worth mentioning in the release notes  - [ ] `rn/bug-fix` - A user-facing bug fix worth mentioning in the release notes  - [x] `rn/documentation` - A user-facing documentation change worth mentioning in the release notes  
https://github.com/mlflow/mlflow/pull/6006	10	readability	2022-05-31 21:42:52	Improve Python files readability r2	Signed-off-by: Ryan Russell  git@ryanrussell.org>    ## What changes are proposed in this pull request?    More readability improvements focused on `.py` files    ## How is this patch tested?    N/A    ## Does this PR change the documentation?    - [X] No. You can skip the rest of this section.  - [ ] Yes. Make sure the changed pages / sections render correctly by following the steps below.      ## Release Notes    ### Is this a user-facing change?    - [x] No. You can skip the rest of this section.  - [ ] Yes. Give a description of this change to be included in the release notes for MLflow users.    (Details in 1-2 sentences. You can just refer to another PR with a description if this PR is part of a larger change.)    ### What component(s), interfaces, languages, and integrations does this PR affect?  Components  - [ ] `area/artifacts`: Artifact stores and artifact logging  - [ ] `area/build`: Build and test infrastructure for MLflow  - [ ] `area/docs`: MLflow documentation pages  - [ ] `area/examples`: Example code  - [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry  - [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors  - [ ] `area/projects`: MLproject format, project running backends  - [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs  - [ ] `area/server-infra`: MLflow Tracking server backend  - [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging    Interface  - [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server  - [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models  - [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry  - [ ] `area/windows`: Windows support    Language  - [ ] `language/r`: R APIs and clients  - [ ] `language/java`: Java APIs and clients  - [ ] `language/new`: Proposals for new client languages    Integrations  - [ ] `integrations/azure`: Azure and Azure ML integrations  - [ ] `integrations/sagemaker`: SageMaker integrations  - [ ] `integrations/databricks`: Databricks integrations     a name="release-note-category"> /a>  ### How should the PR be classified in the release notes? Choose one:    - [ ] `rn/breaking-change` - The PR will be mentioned in the "Breaking Changes" section  - [x] `rn/none` - No description will be included. The PR will be mentioned only by the PR number in the "Small Bugfixes and Documentation Updates" section  - [ ] `rn/feature` - A new user-facing feature worth mentioning in the release notes  - [ ] `rn/bug-fix` - A user-facing bug fix worth mentioning in the release notes  - [ ] `rn/documentation` - A user-facing documentation change worth mentioning in the release notes  
https://github.com/mlflow/mlflow/pull/8835	2	readability	2023-06-27 03:24:15	Remove `SqlAlchemyStore._save_to_db` to improve readability	    We recommend pull requests be filed from a non-master branch on a repository fork (e.g.  username>:fix-xxx).       ## Related Issues/PRs        Please reference any related feature requests, issues, or PRs here. For example, `#123`. To automatically close the referenced issues when this PR is merged, please use a closing keyword (close, fix, or resolve). For example, `Resolve #123`. See https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue for more information.          Resolve   #xxx    ## What changes are proposed in this pull request?    Remove `SqlAlchemyStore._save_to_db` to improve readability.    ## How is this patch tested?        If you're unsure about what to test, where to add tests, or how to run tests, please feel free to ask.       - [x] Existing unit/integration tests  - [ ] New unit/integration tests  - [ ] Manual tests (describe details, including test results, below)        Please describe how you confirmed the proposed feature/bug-fix/change works here. For example, if you fixed an MLflow client API, you could attach the code that didn't work prior to the fix but works now, or if you added a new feature on MLflow UI, you could attach a video that demonstrates the feature.       ## Does this PR change the documentation?    - [ ] No. You can skip the rest of this section.  - [ ] Yes. Make sure the changed pages / sections render correctly in the documentation preview.    ## Release Notes    ### Is this a user-facing change?    - [ ] No. You can skip the rest of this section.  - [ ] Yes. Give a description of this change to be included in the release notes for MLflow users.    (Details in 1-2 sentences. You can just refer to another PR with a description if this PR is part of a larger change.)    ### What component(s), interfaces, languages, and integrations does this PR affect?    Components    - [ ] `area/artifacts`: Artifact stores and artifact logging  - [ ] `area/build`: Build and test infrastructure for MLflow  - [ ] `area/docs`: MLflow documentation pages  - [ ] `area/examples`: Example code  - [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry  - [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors  - [ ] `area/recipes`: Recipes, Recipe APIs, Recipe configs, Recipe Templates  - [ ] `area/projects`: MLproject format, project running backends  - [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs  - [ ] `area/server-infra`: MLflow Tracking server backend  - [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging    Interface    - [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server  - [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models  - [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry  - [ ] `area/windows`: Windows support    Language    - [ ] `language/r`: R APIs and clients  - [ ] `language/java`: Java APIs and clients  - [ ] `language/new`: Proposals for new client languages    Integrations    - [ ] `integrations/azure`: Azure and Azure ML integrations  - [ ] `integrations/sagemaker`: SageMaker integrations  - [ ] `integrations/databricks`: Databricks integrations        Insert an empty named anchor here to allow jumping to this section with a fragment URL  (e.g. https://github.com/mlflow/mlflow/pull/123#user-content-release-note-category).  Note that GitHub prefixes anchor names in markdown with "user-content-".        a name="release-note-category"> /a>    ### How should the PR be classified in the release notes? Choose one:    - [ ] `rn/breaking-change` - The PR will be mentioned in the "Breaking Changes" section  - [x] `rn/none` - No description will be included. The PR will be mentioned only by the PR number in the "Small Bugfixes and Documentation Updates" section  - [ ] `rn/feature` - A new user-facing feature worth mentioning in the release notes  - [ ] `rn/bug-fix` - A user-facing bug fix worth mentioning in the release notes  - [ ] `rn/documentation` - A user-facing documentation change worth mentioning in the release notes  
https://github.com/mlrun/mlrun/pull/4117	1	readability	2023-08-20 11:01:01	[Builder] Improve line readability	
https://github.com/Modalities/modalities/pull/201	4	readability	2024-08-02 11:22:18	fix: improved readability by printing only on rank_0	# What does this PR do?    This PR improves logging on large scale distributed training by only printing on rank_0    ## General Changes  * ..    ## Breaking Changes  * ..     ## Checklist before submitting final PR  - [x] My PR is minimal and addresses one issue in isolation  - [x] I have merged the latest version of the target branch into this feature branch  - [x] I have reviewed my own code w.r.t. correct implementation, missing type hints, proper documentation, etc.  - [x] I have run a sample config for model training  - [x] I have checked that all tests run through (`python tests/tests.py`)
https://github.com/monarch-initiative/koza/pull/142	1	readability	2024-08-20 15:24:16	Update source.py _get_row to help with readability.	Added some comments to help with future work on Koza internals. (This is mainly for me; as my brain breaks when seeing a "while not filter" )
https://github.com/mongodb/mongo-python-driver/pull/1156	1	readability	2023-02-17 14:31:57	PYTHON-3381 Improve readability of sphinx docs	 img width="761" alt="image" src="https://user-images.githubusercontent.com/2096628/219117962-5cddc7e7-4341-461b-b6f0-b3a810d0ce88.png">     img width="783" alt="image" src="https://user-images.githubusercontent.com/2096628/219118010-148e628f-0032-41ac-bf09-19ec5cfad50b.png">  
https://github.com/moslime/moslime/pull/10	1	readability	2023-11-29 21:59:46	moslime.py : Better code readability !	
https://github.com/mozilla/bigquery-etl/pull/3546	2	readability	2023-02-03 22:36:00	Change `bqetl format` to improve readability of `CASE` statements	* Indent `WHEN` and `ELSE` clauses one level more than `CASE`.  * Indent `THEN` clauses one level more than the corresponding `WHEN` clause.  * Have the content of `WHEN`, `THEN`, and `ELSE` clauses start on the same line as the clause keyword.    * This is a divergence from our existing SQL style conventions where most structural keywords are on their own line, but I feel it's worth it to have more compact `CASE` statements that read more naturally (e.g. `WHEN ...` reads like a sentence).    * If we were relying on people to manually format SQL I might have been concerned about folks having trouble getting the "hanging indent" for multi-line `WHEN`/`THEN`/`ELSE` values correct, but since `bqetl format` applies the correct formatting for us I don't think that's much of a concern.  Also, it appears that most such values are single-line (e.g. ~80% of `WHEN` values in this repo are single-line).  * Allow an alias, comma, or dot right after a `CASE` statement's `END`.    A basic example:  ```sql    -- Before (9 lines)    CASE    WHEN      ...    THEN      ...    ELSE      ...    END    AS ...      -- After (5 lines)    CASE      WHEN ...        THEN ...      ELSE ...    END AS ...  ```    CC @relud since it looks like you wrote most of the existing SQL formatter code.    ---  Checklist for reviewer:    - [ ] Commits should reference a bug or github issue, if relevant (if a bug is referenced, the pull request should include the bug number in the title).  - [ ] If the PR comes from a fork, trigger integration CI tests by running the [Push to upstream workflow](https://github.com/mozilla/bigquery-etl/actions/workflows/push-to-upstream.yml) and provide the ` username>: branch>` of the fork as parameter. The parameter will also show up  in the logs of the `manual-trigger-required-for-fork` CI task together with more detailed instructions.  - [ ] If adding a new field to a query, ensure that the schema and dependent downstream schemas have been updated.  - [ ] When adding a new derived dataset, ensure that data is not available already (fully or partially) and recommend extending an existing dataset in favor of creating new ones. Data can be available in the [bigquery-etl repository](https://github.com/mozilla/bigquery-etl), [looker-hub](https://github.com/mozilla/looker-hub) or in [looker-spoke-default](https://github.com/mozilla/looker-spoke-default/tree/e1315853507fc1ac6e78d252d53dc8df5f5f322b).    For modifications to schemas in restricted namespaces (see [`CODEOWNERS`](https://github.com/mozilla/bigquery-etl/blob/main/CODEOWNERS)):  - [ ] Follow the [change control procedure](https://docs.google.com/document/d/1TTJi4ht7NuzX6BPG_KTr6omaZg70cEpxe9xlpfnHj9k/edit#heading=h.ttegrcfy18ck)  
https://github.com/mozilla/experimenter/pull/11787	2	readability	2024-11-18 20:50:35	feat(nimbus): format JSON for better readability in branch configuration	Because    * Branch configuration values were displayed in paragraph format, making them difficult to read    This commit    * Pretty-prints JSON with indentation for improved readability in the branch configuration    Fixes #11722    ![image](https://github.com/user-attachments/assets/8b50f347-a4de-4222-87fc-a0364029738a)  ![image](https://github.com/user-attachments/assets/14bbdb95-5399-42e0-b638-71d52cc7ba63)  
https://github.com/mozilla/mozanalysis/pull/206	2	readability	2024-03-20 16:37:55	Improve readability of sizing functions	This PR is adding wrapper classes for results returned from the objects in sample_size_calc.py.  The idea is to add functionality to make it easier to work with results while maintaining backward compatibility    Fixes #204 
https://github.com/napari/napari/pull/5525	1	readability	2023-02-08 09:25:01	Use pytest-pretty for better log readability 	# Description     What does this pull request (PR) do? Why is it necessary?       Tell us about your new feature, improvement, or fix!       If your change includes user interface changes, please add an image, or an animation "An image is worth a thousand words!"       You can use https://www.cockos.com/licecap/ or similar to create animations      To see how this pytest plugin improves readability,, please take a look at the project readme.   https://github.com/samuelcolvin/pytest-pretty/    ## Type of change     Please delete options that are not relevant.    - [x] Maintenance     # References     What resources, documentation, and guides were used in the creation of this PR?       If this is a bug-fix or otherwise resolves an issue, reference it here with "closes #(issue)"      # How has this been tested?     Please describe the tests that you ran to verify your changes.    - [ ] example: the test suite for my feature covers cases x, y, and z  - [ ] example: all tests pass with my change  - [ ] example: I check if my changes works with both PySide and PyQt backends        as there are small differences between the two Qt bindings.      ## Final checklist:  - [ ] My PR is the minimum possible work for the desired functionality  - [ ] I have commented my code, particularly in hard-to-understand areas  - [ ] I have made corresponding changes to the documentation  - [ ] I have added tests that prove my fix is effective or that my feature works  - [ ] If I included new strings, I have used `trans.` to make them localizable.        For more information see our [translations guide](https://napari.org/developers/translations.html).  
https://github.com/nasa-jpl/rosa/pull/13	1	readability	2024-08-23 15:58:28	(minor) Refactor: Simplify within_bounds logic for enhanced readability and maintainability	Refactor: Simplified boundary check logic in within_bounds function    - Removed redundant 'elif' condition that duplicated the 'if' logic.   - Improved code readability by using a single 'else' block to handle out-of-bounds cases.  - The refactored logic maintains the same functionality while reducing unnecessary complexity.
https://github.com/nasa/ncompare/pull/264	2	readability	2024-12-23 15:05:30	Readability and branching Improvements	### Description    There are several commits in this PR that improve code readability and reduce branching done by the CPU.  I would suggest going through each commit individually and then looking at the entire file as a whole.    ### Local test steps    I have run the test suite using "pytest tests" and they all pass. I have not altered the functionality of any code.    ## PR Acceptance Checklist  * [x] Unit tests passing.  * [ ] Integration testing  * [x] `CHANGELOG.md` updated  * [ ] Documentation updated (if needed).    @danielfromearth I read the contributor guidelines thoroughly and I am not sure if I actually need to add new tests or modify the changelog. I am using the standard test suite since I am not changing the input/output of the code. If anything should be added to the changelog, I'd be happy to do it :)       readthedocs-preview ncompare start    ----   Documentation preview : https://ncompare--264.org.readthedocs.build/en/264/       readthedocs-preview ncompare end  
https://github.com/Nelluk/Polytopia-ELO-Bot/pull/62	3	readability	2024-10-16 11:07:48	Update the postwin message and nova messages readability	
https://github.com/neo4j/graph-data-science-client/pull/741	1	readability	2024-08-30 11:25:10	minor readability changes	Co-Authored-By: Mats Rydberg  mats.rydberg@neotechnology.com>
https://github.com/neoave/mrack/pull/172	10	readability	2022-04-04 15:11:00	style: Increase readability of logs by using host	Adding a host name from metadata or host object  where it is possible to increase readability of  the log messages and better debugging with only  using the log content. Before this patch there  were logging messages that were describing the  error but from the log message we could not tell  which host was causing that.    Signed-off-by: Tibor Dudl k  tdudlak@redhat.com>
https://github.com/networkx/networkx/pull/5144	3	readability	2021-10-25 16:42:06	Refactor node_classification to improve conciseness and readability	This was something I noticed while working on #5139: the `node_classification` package was implemented in such a way that there were a lot of simple (one-or-few-liner) expressions that were wrapped up in "helper" functions. In principle this was done because the functionality was reused in both the `harmonic_function` and `local_and_global_consistency` functions, but IMO the code is improved by reducing the indirection introduced by all the utility functions. I also made a few other minor tweaks (while -> for, removing some local vars, use f-strings, etc.) and fixed the docstrings up a bit, but I did not fundamentally change how the functions are implemented, just reorganized them.    IMO it would make sense to refactor the `node_classification` package and convert it to a module, but this would require deprecation warnings so I will leave it to a follow-up PR. I also think there's an opportunity to improve the implementation by using sparse data structures throughout, but would also like to leave that to a follow-up PR since changing the implementation would require more careful review.
https://github.com/networkx/networkx/pull/6273	1	readability	2022-12-12 14:35:52	Update simple_paths.py to improve readability of the BFS.	Improve readability of the BFS.    Resolves https://github.com/networkx/networkx/issues/3912.
https://github.com/neuralmagic/compressed-tensors/pull/106	1	readability	2024-07-12 19:06:26	Update Quantization Scheme Standards for better readability	## Summary  Enhances the quantization module by expanding the quantization schemes, inline docs, and default values to improve readability and usability.    ## Details  - Added new quantization schemes for 4-bit weights and 8-bit activations (W4A8) and improved documentation for existing schemes.  - Updated the QuantizationArgs to include comprehensive default values.  - Added docs throughout to clarify the code    ## Test Plan  - Manual review  - Current automated tests
https://github.com/neuralmagic/deepsparse/pull/639	1	readability	2022-09-09 13:09:57	Small readability improvement for Pipeline.__call__	Moving to use `self.executor.map` for consistency with preprocessing. Internally executor.map does the same thing.
https://github.com/neuropsychology/NeuroKit/pull/871	1	readability	2023-08-10 18:59:03	[Docs] ecg_process: improve documentation and readability	# Description    This PR aims at updating and improving the documentation and code readability of the ecg_process() function.    # Proposed Changes    This PR does not change any external behaviour of the function. Just refactoring and documentation.    # Checklist    Here are some things to check before creating the PR. If you encounter any issues, do let us know :)    - [x] I have read the [CONTRIBUTING](https://github.com/neuropsychology/NeuroKit/blob/master/.github/CONTRIBUTING.rst#structure-and-code) file. (**ISSUE/PLEASE NOTE:** The section **Structure and code** says that "The maximum line length is **100 characters**." but in the section **Run code checks** the line length is specified as **120 characters**.)  - [x] My PR is targetted at the **dev branch** (and not towards the master branch).  - [x] I ran the [CODE CHECKS](https://github.com/neuropsychology/NeuroKit/blob/master/.github/CONTRIBUTING.rst#run-code-checks) on the files I added or modified and fixed the errors.  - [x] I have added the newly added features to **News.rst** (if applicable)
https://github.com/ni/nimi-python/pull/774	15	readability	2018-03-22 21:03:40	 Improve the logic and readability of the repeated capability conversion	- [X] This contribution adheres to [CONTRIBUTING.md](https://github.com/ni/nimi-python/blob/master/CONTRIBUTING.md).  - [X] ~~I've updated [CHANGELOG.md](https://github.com/ni/nimi-python/blob/master/CHANGELOG.md) if applicable.~~  - [X] I've added tests applicable for this pull request  ### What does this Pull Request accomplish?  * Make the convert repeated capabilities easier to read and to extend    * Use `singledispatch` along with `ABC`'s (Abstract Base Classes)    ### ~~List issues fixed by this Pull Request below, if any.~~    ### What testing has been done?  * Unit  * System
https://github.com/NOAA-EMC/WW3-tools/pull/63	1	readability	2024-05-13 14:27:40	Updated the default color palette to improve readability and visibility.	##  Changes Made:  Replaced the original color palette with a new set of colors.  The new colors have been selected to enhance readability and visibility.  ### Reasoning:   The original color palette lacked readability and visibility in certain contexts. The updated colors provide better contrast and are easier to distinguish.    ## Testing  Tested the new color palette in various visualization scenarios to ensure improved readability and visibility.    
https://github.com/nokia/moler/pull/550	3	readability	2024-10-30 06:06:03	Readability	
https://github.com/nu-radio/NuRadioMC/pull/751	1	readability	2024-11-21 09:26:17	Improving readability of  trigger module	
https://github.com/nvbn/thefuck/pull/1094	1	readability	2020-06-14 14:20:41	#N/A: Refactor for better readability	
https://github.com/NVIDIA/nim-anywhere/pull/22	2	readability	2024-08-07 21:59:16	Update naming for pipeline components to improve readability 	
https://github.com/NVIDIA/NVFlare/pull/347	1	readability	2022-03-24 23:29:14	Improve fed_(server|client).json readability	Fixes #346 
https://github.com/NVIDIA/NVFlare/pull/1965	1	readability	2023-08-31 16:43:37	Refactor format_log_message with more readability	### Description    This PR makes the log message from CoreCell more readable.  The new log message will look like `2023-08-30 16:51:28,587 - CoreCell - DEBUG - [ME=site-1.:ae98c47 O=server.:ae98c47 D=site-1.:ae98c47 F=server T=site-1.:ae98c47 CH=server_command TP=get_task SCH=? STP=?] trigger waiter - replies received from 1 targets for 26a7410a-e8d1-429c-8ae2-ddb0ac9bf9b6`    The fqcn of job cell is shortened so the uuid part is shown with last 7 characters with a leading `:`.  Other parts, if longer than 8, will be shortened in the similar way.    SCH and STP are Stream channel and Stream topic, respectively.    ### Types of changes    - Put an `x` in all the boxes that apply, and remove the not applicable items    - [x] Non-breaking change (fix or new feature that would not break existing functionality).  - [ ] Breaking change (fix or new feature that would cause existing functionality to change).  - [ ] New tests added to cover the changes.  - [x] Quick tests passed locally by running `./runtest.sh`.  - [ ] In-line docstrings updated.  - [ ] Documentation updated.  
https://github.com/nycdb/nycdb/pull/106	1	readability	2019-07-16 13:58:05	Use underscores in numeric literals to improve readability	Python 3.6 (our minimum supported version) introduced [underscores in numeric literals](https://www.python.org/dev/peps/pep-0515/) to help with readability, so this PR applies them to `verify.py` to improve readability.  
https://github.com/obss/sahi/pull/1009	1	readability	2024-04-08 15:19:14	Improve printout readability	Changes printout like `Performing prediction on 8 number of slices.` to `Performing prediction on 8 slices.`
https://github.com/official-stockfish/fishtest/pull/941	1	readability	2021-06-20 10:09:22	Improve readability	Functionally equivalent. In preparation for some future changes to the signup function
https://github.com/official-stockfish/fishtest/pull/1956	1	readability	2024-04-27 20:17:52	improve readability of itp code (no functional change)	also fix a stray unrelated typo    id put together a functional change that i was gonna suggest, but then i decided it wasnt worth suggesting. but since id done this cleanup anyways, may as well submit the cleanup
https://github.com/ohyicong/recaptcha_v2_solver/pull/12	3	readability	2021-08-30 13:51:50	Add readability and stability in the code	Hi again! Yesterday I took one of the Selenium courses and found out that the delay() function only needs to be called once when the driver is called to change its state.  Therefore, I decided to remove the extra lines of the delay call in the script, and at the same time correct the rest of the code.    I have replaced the "%" string formatting with f-strings, which is a shorter and more readable notation added in Python 3.6.    I replaced the file paths with os.path.join and comma-separated variables, this is a more stable and correct way to write the path, avoiding the use of "/" characters.    I removed driver.close () from the Mac OS script as it is not needed before driver.quit().    I changed the path to chromedriver for Mac OS by removing ".exe" from the file extension (since https://chromedriver.storage.googleapis.com/92.0.4515.107/chromedriver_mac64.zip has no extension).    I still can't test the code for Mac OS, but it seems to me that it should work (at least, it seems to me that it shouldn't have worked before due to trying to open the webdriver with the ".exe" extension).    Otherwise, everything works stably on Windows 10, patch.py downloads the driver in case of its absence, I guarantee that the rest of the code will work, with the exception of Mac OS.
https://github.com/onnela-lab/forest/pull/67	1	readability	2022-01-24 19:57:46	Update gps quality check for better readability	Update function `gps_quality_check` in `traj2stats` module to match PEP8 styling.
https://github.com/onnx/onnx/pull/5757	1	readability	2023-11-14 15:50:44	Add default for check_function & Use lexical_scope_ctx for readability	### Description    - Use `lexical_scope_ctx` instead of `ctx` in `checker.py`  - Provide default contexts in `check_function()`    ### Motivation and Context  Follow up to https://github.com/onnx/onnx/pull/5693    Close #5755     
https://github.com/open-mmlab/mmsegmentation/pull/2142	1	readability	2022-10-08 08:31:17	Improve structure and readability for FCNHead	Thanks for your contribution and we appreciate it a lot. The following instructions would make your pull request more healthy and more easily get feedback. If you do not understand some items, don't worry, just make the pull request and seek help from maintainers.    ## Motivation    The first conv in the previous implementation is unnecessary since the input channels can be determined when passing parameters.    ## Modification    The first conv is combined into the loops. Thus, the readability and structure are improved..    ## Checklist    1. Pre-commit or other linting tools are used to fix the potential lint issues.  2. The modification is covered by complete unit tests. If not, please add more unit test to ensure the correctness.  3. If the modification has potential influence on downstream projects, this PR should be tested with downstream projects, like MMDet or MMDet3D.  4. The documentation has been modified accordingly, like docstring or example tutorials.  
https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2945	2	readability	2024-11-05 08:22:00	opentelemetry-instrumentation-openai-v2: format test data for readability	# Description    Before this change, test data was hard to compare visually with assertions due to format. It is easier to do pull request reviews if you can easily read the data. For example, changing to YAML block scalar format.    ```diff     response:       body:  -      string: "{\\n  \\"id\\": \\"chatcmpl-AMTlCEj20ZcsgWKZt8EizFMDItWNf\\",\\n  \\"object\\":  -        \\"chat.completion\\",\\n  \\"created\\": 1729920978,\\n  \\"model\\": \\"gpt-4o-mini-2024-07-18\\",\\n  -        \\ \\"choices\\": [\\n    {\\n      \\"index\\": 0,\\n      \\"message\\": {\\n        \\"role\\":  -        \\"assistant\\",\\n        \\"content\\": \\"This is a test. How can I assist you  -        further?\\",\\n        \\"refusal\\": null\\n      },\\n      \\"logprobs\\": null,\\n  -        \\     \\"finish_reason\\": \\"stop\\"\\n    }\\n  ],\\n  \\"usage\\": {\\n    \\"prompt_tokens\\":  -        12,\\n    \\"completion_tokens\\": 12,\\n    \\"total_tokens\\": 24,\\n    \\"prompt_tokens_details\\":  -        {\\n      \\"cached_tokens\\": 0\\n    },\\n    \\"completion_tokens_details\\":  -        {\\n      \\"reasoning_tokens\\": 0\\n    }\\n  },\\n  \\"service_tier\\": \\"default\\",\\n  -        \\ \\"system_fingerprint\\": \\"fp_f59a81427f\\"\\n}\\n"  +      string: |-  +        {  +          "id": "chatcmpl-APfFNvBVQx43PNOIf1dWnEUT5u5fA",  +          "object": "chat.completion",  +          "created": 1730680117,  +          "model": "gpt-4o-mini-2024-07-18",  +          "choices": [  +            {  +              "index": 0,  +              "message": {  +                "role": "assistant",  +                "content": "This is a test. How can I assist you further?",  +                "refusal": null  +              },  +              "logprobs": null,  +              "finish_reason": "stop"  +            }  +          ],  +          "usage": {  +            "prompt_tokens": 12,  +            "completion_tokens": 12,  +            "total_tokens": 24,  +            "prompt_tokens_details": {  +              "cached_tokens": 0  +            },  +            "completion_tokens_details": {  +              "reasoning_tokens": 0  +            }  +          },  +          "service_tier": "default",  +          "system_fingerprint": "fp_0ba0d124f1"  +        }  ```    The upstream library has decided against custom serializers [here](https://github.com/kevin1024/vcrpy/issues/580). Instead, I used the [same change](https://github.com/block/goose/pull/146) I contributed to goose to solve this issue, which means fixture setup. While there is code visible to achieve this, I think it is worthwhile, and a change like this is better to do now vs later as test data accumulates.    ## Type of change    Please delete options that are not relevant.    - [ ] Bug fix (non-breaking change which fixes an issue)  - [ ] New feature (non-breaking change which adds functionality)  - [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)  - [ ] This change requires a documentation update    # How Has This Been Tested?    I deleted the existing test data, exported my `OPENAI_API_KEY` and ran the following:    ```bash  tox -e py312-test-instrumentation-openai-v2  ```    Doing so recreated the data. Then, I unexported my `OPENAI_API_KEY` and re-ran to ensure the data was used.    - [x] py312-test-instrumentation-openai-v2    # Does This PR Require a Core Repo Change?    - [ ] Yes. - Link to PR:   - [x] No.    # Checklist:    See [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.    - [ ] Followed the style guidelines of this project  - [ ] Changelogs have been updated  - [x] Unit tests have been added  - [ ] Documentation has been updated  
https://github.com/openai/baselines/pull/585	1	readability	2018-09-18 21:14:39	[Update running_mean_std.py] Rename common variable for a bit more readability	
https://github.com/openai/gym/pull/1733	1	readability	2019-11-08 22:22:51	[Acrobot example] Replace np.cos, np.sin, np.pi for readability	Remove the `np.` prefix as those two functions and this constant are imported directly.
https://github.com/OpenBB-finance/OpenBB/pull/3058	1	readability	2022-10-26 01:59:02	Enhance look and readability of `corr` heatmap (UX)	# Description    to run `corr  DATASET>`    Old:   ![image](https://user-images.githubusercontent.com/105685594/197910489-d302b806-d462-415f-b6b9-b39630a5436b.png)    New:   ![image](https://user-images.githubusercontent.com/105685594/197910499-6120d676-6600-4478-8e0f-1f2a2a06905b.png)    # How has this been tested?    * Please describe the tests that you ran to verify your changes.  * Provide instructions so we can reproduce.  * Please also list any relevant details for your test configuration.  - [x] Make sure affected commands still run in terminal  - [x] Ensure the SDK still works  - [x] Check any related reports      # Checklist:    - [x] Update [our Hugo documentation](https://openbb-finance.github.io/OpenBBTerminal/) following [these guidelines](https://github.com/OpenBB-finance/OpenBBTerminal/tree/main/website).  - [x] Update our tests following [these guidelines](https://github.com/OpenBB-finance/OpenBBTerminal/tree/main/tests).  - [x] Make sure you are following our [CONTRIBUTING guidelines](https://github.com/OpenBB-finance/OpenBBTerminal/blob/main/CONTRIBUTING.md).  - [x] If a feature was added make sure to add it to the corresponding [scripts file](https://github.com/OpenBB-finance/OpenBBTerminal/tree/main/scripts).      # Others  - [x] I have performed a self-review of my own code.  - [x] I have commented my code, particularly in hard-to-understand areas.  
https://github.com/OpenChemistry/mongochemserver/pull/163	1	readability	2019-10-28 15:15:27	Improve the readability of create_molecule()	This modifies some of the logic blocks to improve readability.    It also skips a conversion from cjson to cjson in Avogadro2, and  just keeps the cjson that was passed in.
https://github.com/openedx/edx-enterprise/pull/1901	6	readability	2023-10-06 10:15:02	ENT-7363: Fixed ChatGPT prompt and a few model modifications for better readability for admins.	__Jira Ticket:__ [ENT-7363](https://2u-internal.atlassian.net/browse/ENT-7363)    __Description:__  Fixed ChatGPT prompt and a few model modifications for better readability for admins.      **Merge checklist:**  - [x] Any new requirements are in the right place (do **not** manually modify the `requirements/*.txt` files)      - `base.in` if needed in production but edx-platform doesn't install it      - `test-master.in` if edx-platform pins it, with a matching version      - `make upgrade && make requirements` have been run to regenerate requirements  - [x] `make static` has been run to update webpack bundling if any static content was updated  - [x] `./manage.py makemigrations` has been run      - Checkout the [Database Migration](https://openedx.atlassian.net/wiki/spaces/AC/pages/23003228/Everything+About+Database+Migrations) Confluence page for helpful tips on creating migrations.      - *Note*: This **must** be run if you modified any models.        - It may or may not make a migration depending on exactly what you modified, but it should still be run.      - This should be run from either a venv with all the lms/edx-enterprise requirements installed or if you checked out edx-enterprise into the src directory used by lms, you can run this command through an lms shell.          - It would be `./manage.py lms makemigrations` in the shell.  - [x] [Version](https://github.com/openedx/edx-enterprise/blob/master/enterprise/__init__.py) bumped  - [x] [Changelog](https://github.com/openedx/edx-enterprise/blob/master/CHANGELOG.rst) record added  - [x] Translations updated (see docs/internationalization.rst but also this isn't blocking for merge atm)    **Post merge:**  - [ ] Tag pushed and a new [version](https://github.com/openedx/edx-enterprise/releases) released      - *Note*: Assets will be added automatically. You just need to provide a tag (should match your version number) and title and description.  - [ ] After versioned build finishes in [GitHub Actions](https://github.com/openedx/edx-enterprise/actions), verify version has been pushed to [PyPI](https://pypi.org/project/edx-enterprise/)      - Each step in the release build has a condition flag that checks if the rest of the steps are done and if so will deploy to PyPi.      (so basically once your build finishes, after maybe a minute you should see the new version in PyPi automatically (on refresh))  - [ ] PR created in [edx-platform](https://github.com/openedx/edx-platform) to upgrade dependencies (including edx-enterprise)      - This **must** be done after the version is visible in PyPi as `make upgrade` in edx-platform will look for the latest version in PyPi.      - Note: the edx-enterprise constraint in edx-platform **must** also be bumped to the latest version in PyPi.  
https://github.com/openfun/django-lti-toolbox/pull/7	4	readability	2023-08-24 13:34:07	  (lti_toolbox) Enhance code readability base LTI view classes	## Purpose  Avoid any confusion for newcomers to the project.    ## Proposition  - [x] Use `@abstractmethod` decorator when needed to make code consistent.  - [x] Update classes' documentation
https://github.com/opengisch/QFieldCloud/pull/771	1	readability	2023-08-18 12:28:01	Slight readability improvement on etag preparation for files	As of current `master` the `e_tag` property of `S3ObjectVersion` will evaluate to `None` in certain edge cases, causing Exceptions (see for example https://github.com/opengisch/qfieldcloud-private/pull/474). This PR ensures `S3ObjectVersion.e_tag` never lies about its type.
https://github.com/OpenMDAO/Aviary/pull/221	1	readability	2024-03-29 20:37:51	tweaked driver display settings to improve readability	### Summary    Adjusted settings to improve readability    ### Related Issues    - Resolves #    ### Backwards incompatibilities    None    ### New Dependencies    None
https://github.com/openml/docs/pull/38	2	readability	2024-10-26 20:41:05	Improved code readability and efficiency in `gen_python_ref_pages` and `github_scraper` modules	  This PR introduces the following enhancements:    1. Added type hints and return types:      Enhances code readability and maintainability.      Improves static type checking capabilities.    2. Optimized return_details function:      Replaced unnecessary conversion to list with a set data structure. `target_urls` are not being accessed by index after removing duplicates. Code in`github_scrapers`:        Old code: `target_urls = list(set(target_urls))`        New Code: `target_urls = set(target_urls)`       Reduces memory usage by avoiding redundant data storage.      By incorporating these changes, we can improve the overall quality and performance of the codebase.
https://github.com/OpenNMT/OpenNMT-py/pull/1281	7	readability	2019-02-11 14:03:45	Better buffering, readability in beam_search; random sampling class	I've made ``.view`` calls more literate. By that I mean avoiding ``-1``'s and avoiding referencing the original tensor for dimensions in favor of using hopefully well-named variables. I've tried to make some of the instance attribute uses more readable, too. IMO when dealing with stateful instance attribute tensors, using a buffer/``out`` approach is more readable. So that's what I've done. I'm seeing the same scores, speed (non-significant difference, anyways), and memory usage.    Also,  #1277  broke ``return_attention`` when not using a coverage penalty. This fixes it, and unit tests it.
https://github.com/OpenPLi/enigma2/pull/4016	1	readability	2024-06-12 15:57:50	[ScanSetup] more readability in the absence cable scanning utility	
https://github.com/openSUSE/opi/pull/130	25	readability	2023-05-19 11:28:54	small refactor: reuse code, increase readability	`bin/opi`  - update search regex: (**L24**)    - `\\d` for `0-9`    - `*` instead of `{0,}`    ---    `opi/__init__.py`  - saving the results of `get_cpu_arch()` in a variable to reuse them (**L307-320**)  - simplify *if* statement for setting the `weight` of a result (**L348**)  - deduplicate URL building for GPG key in `install_binary()` (**L394**)  - use default *math* function `log10()` instead of `log()` with parameter `10` (**L443**)  - `default_answer` for `ask_yes_or_no()` is now `'y'` (**L423**, plugins) ***  if not liked, I can undo the last commit***    ---    `opi/plugins/__init__.py`  - removing `(object)` inheritance as not needed in *python3*  - use `str.endswith()` instead of string comparison by range (**L23**)    ---    `opi/config/__init__.py`  - remove unused code    ---    `opi/plugins/yandex-browser.py`  - get last part of split string with `[-1]` instead of `[2]`    ---    - some minimal changes 
https://github.com/openvinotoolkit/training_extensions/pull/3606	5	readability	2024-06-13 01:10:08	Increase readability of pickling error log during HPO & fix minor bug	### Summary  This PR fixes [CSV-142423](https://jira.devtools.intel.com/browse/CVS-142423)  This PR includes    - Implement a function to find which objects can't be pickled.  - When pickling error is raised during HPO spawns new process, show which objects are problematic.  - Before returning best model weight after HPO, HPO modifies ModelCheckpoint related value in HPO model weight to prevent latent error in case where model weight HPO gave is final best weight after training.        Resolves #111 and #222.  Depends on #1000 (for series of dependent commits).    This PR introduces this capability to make the project better in this and that.    - Added this feature  - Removed that feature  - Fixed the problem #1234       ### How to test       Describe the testing procedure for reviewers, if changes are  not fully covered by unit tests or manual testing can be complicated.      ### Checklist       Put an 'x' in all the boxes that apply      - [x] I have added unit tests to cover my changes.   - [ ] I have added integration tests to cover my changes.   - [ ] I have ran e2e tests and there is no issues.  - [ ] I have added the description of my changes into CHANGELOG in my target branch (e.g., [CHANGELOG](https://github.com/openvinotoolkit/training_extensions/blob/develop/CHANGELOG.md) in develop).   - [ ] I have updated the documentation in my target branch accordingly (e.g., [documentation](https://github.com/openvinotoolkit/training_extensions/tree/develop/docs) in develop).  - [x] I have [linked related issues](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword).    ### License    - [ ] I submit _my code changes_ under the same [Apache License](https://github.com/openvinotoolkit/training_extensions/blob/develop/LICENSE) that covers the project.        Feel free to contact the maintainers if that's a concern.  - [ ] I have updated the license header for each file (see an example below).    ```python  # Copyright (C) 2024 Intel Corporation  # SPDX-License-Identifier: Apache-2.0  ```  
https://github.com/openwisp/openwisp-radius/pull/134	8	readability	2020-07-21 19:43:06	[minor] Improve readability + formatting	No functional change, it only seems easier to read this way. Merge if you feel this provides readability improvement.    Blocked: #135 
https://github.com/oppia/oppia/pull/4171	1	readability	2017-12-09 13:33:09	Improve readability of extensions.answer_summarizers.models_test	This PR replaces usages of constants with explicit variable building at each test method. This keeps future writers from having to scroll up 200+ lines just to see what values are actually being used.
https://github.com/opsmill/infrahub/pull/3754	1	readability	2024-07-03 05:58:50	Readability updates for infrastructure_edge script	This PR includes a minor readability update to the data load script, aside from the performance updates mentioned in #3733 I think there are a number of things we can do to improve the structure of this script. This begins with making the data easier to understand and reason around.
https://github.com/opsmill/infrahub/pull/3771	1	readability	2024-07-05 13:00:31	infrastructure_edge: Readability and performance improvements	In this iteration I've started to move out code from the global run() method and provide a way to batch tasks that doesn't depend on each other in a simpler way.    I also changed the randomness of the script with regards to how many IPv6 addresses were created. In the previous version we had for networks where we created a random number of hosts between 1 and 255, this make it harder to measure the time it took for the script to complete as it was completely random each time.    There are also some improvements with regards to how the profiles are assigned to the interfaces (here's an example where I don't think the current ".fetch()" approach works that great.    There's still a lot to do to improve both the speed and readability of the script but I don't want to change too much in one go.    Related to #3733.
https://github.com/opsmill/infrahub/pull/3778	1	readability	2024-07-08 09:21:55	infrastructure_edge: performance and readability cleanup	* Apply interface profiles without fetch (switch to add_relationship)  * Group related code together and move out to smaller functions
https://github.com/opsmill/infrahub/pull/3780	1	readability	2024-07-08 12:41:26	Readability improvements for P2P links	Fixes for readability, also we've had a few places where the number of sites had a set limit, i.e. you'd run into problems if the number of requested sites went below a certain level as part of the script was hardcoded. This PR includes a minor change to support the P2P link section to complete even if we are running with a lower number of sites.
https://github.com/packit/packit-service/pull/1191	1	readability	2021-08-09 07:07:11	Improve readability of 'set_status()'	Long ternary expressions in keyword arguments are hard to follow. Break  them out in local variables.    Signed-off-by: Hunor Csomort ni  csomh@redhat.com>
https://github.com/packit/packit-service/pull/1899	1	readability	2023-02-13 07:50:53	Some random readability improvements	Two small improvements which should improve code readability.
https://github.com/PaiGramTeam/PaiGram/pull/628	1	readability	2023-08-21 09:17:15	:art: Refactor `download_icon` for improved readability and efficiency	- Moved imports to the top of the file.  - Adjusted constant naming to adhere to Python naming conventions.  - Integrated task exception handling directly within the task function.  - Streamlined the gathering and processing of asyncio tasks.
https://github.com/pallets/flask/pull/3169	1	readability	2019-05-17 02:23:20	Fix dev-server warning message readability (#3168)	fixes #3168     New, more explicit warning message on `app.run(debug=True)`:  ![image](https://user-images.githubusercontent.com/13977519/57159683-cfef8f80-6de6-11e9-89c1-8884fab7f2e0.png)          Commit checklist:    * add tests that fail without the patch  * ensure all tests pass with ``pytest``  * add documentation to the relevant docstrings or pages  * add ``versionadded`` or ``versionchanged`` directives to relevant docstrings  * add a changelog entry if this patch changes code    Tests, coverage, and docs will be run automatically when you submit the pull  request, but running them yourself can save time.         
https://github.com/pandas-dev/pandas/pull/37718	1	readability	2020-11-09 18:57:09	TST: improve readability using dedent in test_to_string.py	- [ ] closes #xxxx  - [ ] tests added / passed  - [ ] passes `black pandas`  - [ ] passes `git diff upstream/master -u -- "*.py" | flake8 --diff`  - [ ] whatsnew entry    Improve readability of expected outputs using dedent in ``pandas/tests/io/formats/test_to_string.py``
https://github.com/pantsbuild/pants/pull/7036	1	readability	2019-01-08 00:10:30	Improve readability of integration test logging	### Problem    When an integration test fails, we log all relevant logs. But because we strip all whitespace (rather than just trailing whitespace and newlines), we lose the indentation of those logs.    ### Solution    Only strip trailing whitespace.    ### Result    Indentation is preserved:  ```  logs/exceptions.70779.log >>> pid: 70779  logs/exceptions.70779.log >>> Exception caught: (exceptions.TypeError)  logs/exceptions.70779.log >>>   File "/Users/stuhood/src/pants/src/python/pants/bin/pants_loader.py", line 80, in  module>  logs/exceptions.70779.log >>>     main()  logs/exceptions.70779.log >>>   File "/Users/stuhood/src/pants/src/python/pants/bin/pants_loader.py", line 76, in main  logs/exceptions.70779.log >>>     PantsLoader.run()   snip>  logs/exceptions.70779.log >>>   File "/Users/stuhood/src/pants/src/python/pants/engine/round_engine.py", line 49, in attempt  logs/exceptions.70779.log >>>     task.execute()  logs/exceptions.70779.log >>>   File "/Users/stuhood/src/pants/src/python/pants/backend/jvm/tasks/jvm_compile/jvm_compile.py", line 364, in execute  logs/exceptions.70779.log >>>     for vt in invalidation_check.all_vts}  logs/exceptions.70779.log >>>   File "/Users/stuhood/src/pants/src/python/pants/backend/jvm/tasks/jvm_compile/jvm_compile.py", line 364, in  dictcomp>  logs/exceptions.70779.log >>>     for vt in invalidation_check.all_vts}  logs/exceptions.70779.log >>>   File "/Users/stuhood/src/pants/src/python/pants/backend/jvm/tasks/jvm_compile/jvm_compile.py", line 334, in create_compile_context  logs/exceptions.70779.log >>>     self._compute_sources_for_target(target))  logs/exceptions.70779.log >>>  logs/exceptions.70779.log >>> Exception message: __init__() takes exactly 7 arguments (8 given)  ```
https://github.com/pantsbuild/pants/pull/9990	1	readability	2020-06-08 16:58:04	Use f-strings, improve code readability.	I am working on adding list of enum support to options, cleaning up the code as I try to figure out how things work.
https://github.com/pantsbuild/pants/pull/12384	1	readability	2021-07-20 21:01:18	Tweaks markers for readability (minor tweak missed in #12323)	# Rust tests and lints will be skipped. Delete if not intended.  [ci skip-rust]    # Building wheels and fs_util will be skipped. Delete if not intended.  [ci skip-build-wheels]
https://github.com/parafoxia/hikari-intro/pull/1	3	readability	2021-09-02 15:58:34	Refactor and readability improvements.	
https://github.com/pass-culture/pass-culture-main/pull/12873	17	readability	2024-06-24 09:56:56	(PC-30458)[API] Update redoc documentation for better readability	## But de la pull request    Ticket Jira : https://passculture.atlassian.net/browse/PC-30458    Fait dans cette PR :    - Dans toute la doc :      - Changement de la casse du p de pass Culture ("Pass Culture" -> "pass Culture")  - Docusaurus :     - Remplacement de "teenager" par "beneficiary"  - JSON Open API  :      - Changement de l'ordre des tags      - Tous les tags sont d sormais au pluriel     - Update de la description des routes     ## V rifications    - [ ] J'ai  crit les tests n cessaires  - [ ] J'ai [relu attentivement les migrations](https://www.notion.so/passcultureapp/Clarifier-les-pratiques-de-migration-de-BDD-5f8edeba57ed4a17b80c847a74def027), en particulier pour  viter les _locks_, et je pr viens les  quipes Sh rif et Data  - [ ] J'ai ajout  des screenshots pour d' ventuels changements graphiques
https://github.com/patched-codes/patchwork/pull/544	2	readability	2024-08-16 03:22:07	Change cmd.append() to cmd.extend() for improved readability and fix subprocess error handling	Fixes Issue #490   Change the usage of cmd.append() to cmd.extend() to improve readability and performance.    Currently, the CallCode2Prompt.py and ScanDepScan.py file uses multiple cmd.append() calls to add elements to the command list:  For e.g.  cmd.append("--filter")  cmd.append(self.filter)    This can be simplified to a single cmd.extend() call:    cmd.extend(["--filter", self.filter"])    Additionally, improved subprocess error handling to catch and handle subprocess.CalledProcessError and other exceptions more robustly.  
https://github.com/PennLINC/xcp_d/pull/530	4	readability	2022-10-14 15:48:20	Improve confound plot readability and fix moving registration plot	Attempting to fix issues with the Executive Summary    Changes proposed:    - Modify parameters of confounds plot to improve readability.  - Fix shifting registration plot that is currently only included in the executive summary. This plot was only showing the moving SVG, but not the target SVG, before.
https://github.com/PennyLaneAI/catalyst/pull/1194	5	readability	2024-11-20 14:23:04	[Frontend] Improve readability of conditional passes	**Context:** We are using the term `pipeline` a lot. We are also defining compilation pipelines at the module level and modifying them depending on configuration options.    **Description of the Change:** Change the compilation pipeline into stages and improve readability of passes that are conditional on compile time options.    **Benefits:** Readability.
https://github.com/PennyLaneAI/pennylane/pull/4379	1	readability	2023-07-24 17:07:14	Improve readability for `interfaces/jax_jit_tuple.py`	For ADR PR #67 https://github.com/PennyLaneAI/adrs/pull/67 with prototype PR #4368 I have been spending time going through `jax_jit_tuple.py` to figure out if and how we can integrate device jacobian products.      To better understand the file, I have made some stylistic improvements. So though a lot of things are moved around, the code is the exact same.    Some of these stylistic improvements include:    * A few more docstrings with examples and adding some explicit documentation on closure variables to docstrings.    * Eliminating some single line functions: `process_single_shape` and `_filter_zero_tangents`    * Switching some iterates and append patterns with function + tuple with generator pattern.    * Switch `_jac_shape_dtype_tuple` for a batch of tapes with `jac_shape_dtype_struct` for a single tape. The code that uses can then determine how it wants to nest a batch with a single tape.    * Extract out `_grad_transform_jac_via_callaback` and `_device_method_jac_via_callback` to being global functions with explicit argument lists, instead of depending on closure. This reduces nesting, allows the functions to be experimented on and tested independently, and makes the dependencies explicit. The previous syntax also called local variables like `params` the same thing as a parameter from outer scope.    * Extract a logical branch into `_grad_transform_jac_no_callback`. Then the three options all have the same syntax pattern.    * Extract code from the forward mode `execute_wrapper_jvp` into `_empty_jacs_for_shape` and `_switched_jacobian`.  I will freely admit I'm confused by the code of `_switched_jacobian`, but it works and passes tests.    * Got rid of the `switch_trainable` list to instead just check that quantity in each loop, instead of precomputing it. This way we don't have to remember what `switch_trainable` represents.    * A few more minor things I've forgotten about.
https://github.com/Pervasive-AI-Lab/LuckyMera/pull/2	5	readability	2023-11-13 09:02:00	new version of do_it with action iterable and more readability	
https://github.com/physiopy/phys2bids/pull/305	2	readability	2020-09-18 20:41:53	Refactor txt.py chtrig parameter to improve code readability	Closes #273    ## Proposed Changes   quick, very neat refactoring to lower the chances of confusion while reading the code:  - Delete [line 322](https://github.com/physiopy/phys2bids/blob/a2493bf383d3a7668c549099215bd3ddd60f8831/phys2bids/interfaces/txt.py#L322)  - Remove chtrig from [this definition's argoments](https://github.com/physiopy/phys2bids/blob/a2493bf383d3a7668c549099215bd3ddd60f8831/phys2bids/interfaces/txt.py#L254), since it's not used in the definition itself.  - Change `chtrig +1` in [this line](https://github.com/physiopy/phys2bids/blob/a2493bf383d3a7668c549099215bd3ddd60f8831/phys2bids/interfaces/txt.py#L152) and in [this line](https://github.com/physiopy/phys2bids/blob/a2493bf383d3a7668c549099215bd3ddd60f8831/phys2bids/interfaces/txt.py#L251) into `chtrig` only.  - Add explanation of `chtrig` indexing starting from 1 for human readability in all the docstrings.
https://github.com/PingjunChen/pyslide/pull/21	1	readability	2023-04-02 15:25:24	Increased readability for assertions	
https://github.com/PingjunChen/pyslide/pull/22	1	readability	2023-04-02 15:29:39	Added extra function to improve readability	
https://github.com/ppfeister/sylva/pull/3	2	readability	2024-07-21 21:20:28	Refactor spider_all function for improved efficiency and readability	- Refactored the spider_all function to enhance performance and code clarity.  - Replaced lists with sets for queries_made and new_queries to allow O(1) average time complexity for membership checks and automatic deduplication.  - Used set operations to simplify the logic for collecting and processing unique, spiderable queries.  - Ensured new queries were efficiently filtered and processed without reprocessing already made queries.  - Improved overall readability and maintainability of the function.    This change optimizes the function by leveraging set operations, making the code more concise and efficient.
https://github.com/PrefectHQ/prefect/pull/4341	11	readability	2021-05-14 14:06:37	Refactor `Agent` base class for readability	   Thanks for contributing to Prefect Core!      ## Summary     A sentence summarizing the PR      The git diff for this is hard to parse, but this should have nearly no functional changes. See the whole new file at https://github.com/PrefectHQ/prefect/blob/agent-cleanup/src/prefect/agent/agent.py.    I renamed a lot of opaque methods like `agent_process` (-> `_submit_deploy_flow_run_jobs`) and `agent_connect` (-> `_setup_api_connection`) to describe what they are doing. The interface that would generally be worked with has been moved to the top of the class. Many methods that should not be touched by subclasses or callers have been given a leading underscore. The `start` method has been simplified in an attempt to make it very clear what agent setup looks like.     ```python    def start():      try:          self._setup_api_connection()            # Call subclass hook          self.on_startup()            # Print some nice startup logs          self._show_startup_display()            # Start background tasks          self._start_heartbeat_thread()          if self.agent_address:              self._start_agent_api_server()            # Enter the main loop checking for new flows          with exit_handler(self) as exit_event:              self._enter_work_polling_loop(exit_event)        finally:            self.on_shutdown()          self._stop_agent_api_server()          self._stop_heartbeat_thread()  ```      ## Changes     What does this PR change?      The only functional changes should be  - If the API errors during setup, the agent exits immediately instead of attempting to query for flow runs. This means that token errors and such will be surfaced as a clear error instead of being logged and buried as a later process fails.      ## Importance     Why is this PR important?      Before tackling https://github.com/PrefectHQ/server/issues/213 I wanted to understand the base agent process. I found it incredibly difficult to parse so I began a refactor that should make it more maintainable in the future.      ## Checklist     PRs will not be reviewed unless these boxes are checked      This PR:    - [x] adds new tests (if appropriate)  - [x] adds a change file in the `changes/` directory (if appropriate)  - [x] updates docstrings for any new functions or function arguments, including `docs/outline.toml` for API reference docs (if appropriate)
https://github.com/privacyidea/privacyidea/pull/959	1	readability	2018-03-02 10:21:59	Statistics: Idea for improving readability	This is just an idea :)    Working on #958  a href='#crh-start'> /a> a href='#crh-data-%7B%22processed%22%3A%20%5B%22https%3A//github.com/privacyidea/privacyidea/pull/959%23issuecomment-369873420%22%5D%2C%20%22comments%22%3A%20%7B%22General%20Comment%22%3A%20%7B%22html_url%22%3A%20%22https%3A//github.com/privacyidea/privacyidea/pull/959%23issuecomment-369873420%22%2C%20%22comments%22%3A%20%5B%7B%22body%22%3A%20%22This%20looks%20totally%20good.%5Cr%5CnI%20did%20not%20manage%20to%20put%20the%20%60%60tight_layout%60%60%20at%20the%20right%20place.%5Cr%5Cn%5Cr%5Cn%22%2C%20%22created_at%22%3A%20%222018-03-02T09%3A43%3A20Z%22%2C%20%22user%22%3A%20%7B%22avatar_url%22%3A%20%22https%3A//avatars1.githubusercontent.com/u/1908620%3Fv%3D4%22%2C%20%22html_url%22%3A%20%22https%3A//github.com/cornelinux%22%7D%7D%5D%2C%20%22title%22%3A%20%22General%20Comment%22%7D%7D%7D'> /a>  a href='https://www.codereviewhub.com/'> img src='http://www.codereviewhub.com/site/github-bar.png' height=40> /a> - [x]  a href='#crh-comment-General Comment'> /a>  img src='http://www.codereviewhub.com/site/github-remaining.png' height=16 width=60>&nbsp; b> a href='https://github.com/privacyidea/privacyidea/pull/959#issuecomment-369873420'>General Comment /a> /b> -  a href='https://github.com/cornelinux'> img border=0 src='https://avatars1.githubusercontent.com/u/1908620?v=4' height=16 width=16> /a> This looks totally good. I did not manage to put the ``tight_layout`` at the right place.    a href='https://www.codereviewhub.com/privacyidea/privacyidea/pull/959?mark_as_completed=1'> img src='http://www.codereviewhub.com/site/github-mark-as-completed.png' height=26> /a>&nbsp; a href='https://www.codereviewhub.com/privacyidea/privacyidea/pull/959?approve=1'> img src='http://www.codereviewhub.com/site/github-approve.png' height=26> /a>&nbsp; a href='https://github.com/privacyidea/privacyidea/pull/959'> img src='http://www.codereviewhub.com/site/github-refresh.png' height=26> /a>  a href='#crh-end'> /a>
https://github.com/project-koku/koku/pull/5178	1	readability	2024-06-19 17:39:22	Improve our logging readability	## Jira Ticket    [COST-5168](https://issues.redhat.com/browse/COST-5168)    ## Description    This change will redefine the split_files statement in our context logging. So we dont have a sea of file names filling the logs.    ## Testing    1. Checkout Branch  2. Restart Koku  3. Hit endpoint or launch shell      1. You should see ...  4. Do more things...    ## Release Notes  - [x] proposed release note    ```markdown  * [COST-5168](https://issues.redhat.com/browse/COST-5168) Logging improvements  ```  
https://github.com/Project-MONAI/MONAI/pull/7249	1	readability	2023-11-22 05:06:18	add class label option to write metric report to improve readability  	add class label option to write metric report to improve readability, without that option in case of many classes the resulting report is very hard to interpret.      ### Types of changes    - Put an `x` in all the boxes that apply, and remove the not applicable items    - [x] Non-breaking change (fix or new feature that would not break existing functionality).  
https://github.com/prowler-cloud/prowler/pull/3227	5	readability	2023-12-28 07:51:01	chore:  hanged concatenation of strings to f-strings to improve readability	### Context   hanged concatenation of strings to f-strings to improve readability and unify with the rest code    ### Description   hanged concatenation of strings to f-strings to improve readability and unify with the rest code    ### License    By submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.  
https://github.com/prusa3d/Prusa-Link/pull/750	4	readability	2023-05-17 11:47:30	Improve log readability by tweaking message priority	
https://github.com/PTB-MR/mrpro/pull/380	22	readability	2024-08-27 07:17:46	Improve readability of dimension operations	closes #71    If anybody finds some more cases where the dimension operations could be improved please adapt or post the code line here in the PR.     Note: This PR is supposed to improve on the readability of dimension operations. Making them more general will be the aim of #359 
https://github.com/py-pdf/pypdf/pull/2775	1	readability	2024-07-26 10:15:35	STY: Increase readability	Add comments and tiny refactor.
https://github.com/py-pdf/pypdf/pull/2781	1	readability	2024-08-05 15:49:29	STY: Small readability increases	Also remove unused DEFAULT_ANNOTATION_FLAG.
https://github.com/py-pdf/pypdf/pull/2974	1	readability	2024-12-02 07:36:52	STY: Small increase of readability	Use enumerate more in PdfWriter.
https://github.com/py-pdf/pypdf/pull/2986	2	readability	2024-12-04 16:32:38	STY: Increase readability slightly	
https://github.com/py-pdf/pypdf/pull/2989	1	readability	2024-12-04 16:33:52	STY: Tiny readability improvement	
https://github.com/PyBites-Open-Source/pybites-tools/pull/32	1	readability	2022-05-05 08:27:57	fix double negative if-clause for better readability	
https://github.com/pyccel/pyccel/pull/1151	7	readability	2022-07-18 11:53:37	Improve pointer operations readability in generated C code	Change format `(*x).attribute` to `x->attribute`. Fix https://github.com/pyccel/pyccel/issues/1148.    
https://github.com/PyCQA/autoflake/pull/75	1	readability	2020-08-23 00:55:18	Fixing some readability issues.	- on `standard_paths function`:      * I used `os.path.isdir` instead of `try: ... except OSError: pass`  for checking if `lib-dynload` exists.    - on  `standard_package_names` function:      * I used `name.endswith` instead of using the complex expression `name.rsplit('.')[-1]`
https://github.com/pyhoneybot/honeybot/pull/196	1	readability	2023-06-28 04:17:06	improved structure and readability of main.py	1.Removed unnecessary import statements (import sys, import shutil, import getpass).    2.Encapsulated the code inside the BotCore class to provide better organization and encapsulation.    3.Replaced hardcoded configuration values with variables (self.server_url, self.port, self.name, etc.).    4.Utilized the os.path module for path-related operations instead of manually concatenating strings.    5.Updated the logging statements to use the logger instance.    6.Refactored the message_info method to handle exceptions and return a dictionary with all fields set to prevent None values.    7.Updated the methods method to return a dictionary of method references.    8.Added docstrings to functions and methods.    9.Fixed the indentation of the code to conform to Python style guidelines.    10.Replaced the print statements with logger statements for consistent logging.    11.Modified the load_plugins_from_folder method to handle different sources of plugin names (from configuration file or directory) and log errors appropriately.    12.Updated the load_plugins method to load plugins from the specified folders.    13.Refactored the run_plugins method to use the loaded plugins and pass the necessary arguments to the plugin's run method.    14.Renamed command_parser method to core_commands_parse for clarity.    15.Removed unused methods and variables (self.sp_command, self.core_plugins, pull).    16.Added missing exception handling in the quit method.    17.Cleaned up the code formatting and removed unnecessary comments.    ## Description    ## How Has This Been Tested?    ## Additional context    Add any other context or screenshots about the pull request here.    ## Checklist    - [x] I have read, understood and followed our [Contributing Guide](https://github.com/pyhoneybot/honeybot/blob/master/CONTRIBUTING.md)  - [ ] My code follows the code style of this project  - [ ] I have updated the documentation accordingly  - [ ] I added my country flag to the `README.md`    ## Code of Conduct    By submitting this issue, you agree to follow our [Code of Conduct](https://github.com/pyhoneybot/honeybot/blob/master/CODE_OF_CONDUCT.md)    - [x] I agree to follow this project's Code of Conduct  
https://github.com/pypa/pip/pull/5538	1	readability	2018-06-26 13:12:46	Improve readability of version checking caller	   
https://github.com/pypa/pip/pull/7905	1	readability	2020-03-26 21:13:02	Use set operations in tests for readability	I opted to use methods instead of operators partly because there is no operator equivalent for `isdisjoint()` (and partly because I prefer them).
https://github.com/pypa/pip/pull/11966	4	readability	2023-05-21 09:36:50	Add ireq.is_direct property, for readability	A light refactoring, for better readability. No feature change.
https://github.com/pytest-dev/pytest/pull/3679	2	readability	2018-07-13 00:31:07	Refactor parametrize() code for readability	Extract the parametrize() block of code into methods for better  readability and add some docs    Suggestions about the name of the functions and the docs are welcome!
https://github.com/pytest-dev/pytest/pull/8429	3	readability	2021-04-30 10:36:56	Improve pytest.approx error messages readability (Pull request)	closes #8335   
https://github.com/pytest-dev/pytest/pull/12170	2	readability	2024-03-31 13:15:03	Small performance/readability improvments when iterating dictionnary with ``keys()``	Based on pylint's message ``consider-iterating-dictionary``. I added a pylint  configuration (only manual, it's not launched automatically in pre-commit) as ruff is far  from implementing everything from pylint. The commit that does that could be removed  but I'm using it to target interesting issues.    Surprisingly using a dict or set comprehension instead of a new temp var is  actually consistently slower here, which was not intuitive for me. (This is the   reason I've been sitting on this change for so long).    ```python  from timeit import timeit    families = {1: {"testcase": [1, 2, 3, 5, 8]}}  attrs = {1: "a", 2: "b", 3: "c", 4: "d", 5: "e", 6: "f", 7: "g", 8: "h"}    class Old:      def old(self):          self.attrs = attrs          temp_attrs = {}          for key in self.attrs.keys():              if key in families[1]["testcase"]:                  temp_attrs[key] = self.attrs[key]          self.attrs = temp_attrs    class OldBis:      def old(self):          self.attrs = attrs          temp_attrs = {}          for key in self.attrs:              if key in families[1]["testcase"]:                  temp_attrs[key] = self.attrs[key]          self.attrs = temp_attrs    class New:      def new(self):          self.attrs = attrs          self.attrs = { # Even worse with k: v for k in self.attrs.items()              k: self.attrs[k] for k in self.attrs if k in families[1]["testcase"]          }    if __name__ == "__main__":      n = 1000000      print(f"Old: {timeit(Old().old, number=n)}")      print(f"Just removing the keys(): {timeit(OldBis().old, number=n)}")      print(f"List comp, no temp var: {timeit(New().new, number=n)}")  ```  Result:  Old: 0.9493889989680611  Just removing the keys(): 0.9042672360083088  List comp, no temp var: 0.9916125109884888    It's also true for the other example with similar benchmarks.
https://github.com/pytest-dev/pytest/pull/12665	2	readability	2024-08-01 22:26:50	Improve approx scalar repr method for better readability 	Closes #6985     - [ ] Include documentation when adding new features.  - [X] Include new tests or update existing tests when applicable.  - [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.  - [X] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number).  - [X] Create a new changelog file in the `changelog` folder, with a name like ` ISSUE NUMBER>. TYPE>.rst`.  - [ ] Add yourself to `AUTHORS` in alphabetical order.  
https://github.com/PyThaiNLP/pythainlp/pull/287	1	readability	2019-10-03 14:23:19	Improve readability of some thai characters	Problem: Some Thai character are unreadable    Solution: Use Unicode string with comments
https://github.com/python-event-sourcery/python-event-sourcery/pull/38	13	readability	2023-09-17 09:25:50	Refactor: tests readability	
https://github.com/python/cpython/pull/3791	1	readability	2017-09-27 15:12:31	Trivial readability improvement	Minor readability improvement for #3768 
https://github.com/python/cpython/pull/5091	1	readability	2018-01-12 09:18:44	bpo-32473: Improve ABCMeta._dump_registry() readability	       issue-number: bpo-32473   https://bugs.python.org/issue32473    /issue-number   
https://github.com/python/cpython/pull/20963	1	readability	2020-06-19 11:57:31	Improve readability of `formataddr` docstring	For me as a non native English speaker, the sentence with its embedded clause was very hard to understand.    modified:   Lib/email/utils.py  Automerge-Triggered-By: @csabella
https://github.com/python/cpython/pull/20977	1	readability	2020-06-19 12:15:58	[3.8] Improve readability of `formataddr` docstring (GH-20963)	For me as a non native English speaker, the sentence with its embedded clause was very hard to understand.    modified:   Lib/email/utils.py  Automerge-Triggered-By: @csabella (cherry picked from commit 66a65ba43cb3e68a43e32469c988dd7a6cff049c)   Co-authored-by: J rgen Gmach  juergen.gmach@googlemail.com>
https://github.com/python/cpython/pull/20978	1	readability	2020-06-19 12:18:45	[3.9] Improve readability of `formataddr` docstring (GH-20963)	For me as a non native English speaker, the sentence with its embedded clause was very hard to understand.    modified:   Lib/email/utils.py  Automerge-Triggered-By: @csabella (cherry picked from commit 66a65ba43cb3e68a43e32469c988dd7a6cff049c)   Co-authored-by: J rgen Gmach  juergen.gmach@googlemail.com>
https://github.com/python/cpython/pull/103372	2	readability	2024-02-02 22:13:01	gh-101599: changed argparse -h/-help flag for the sake of readability	    Thanks for your contribution!  Please read this comment in its entirety. It's quite important.    # Pull Request title    It should be in the following format:    ```  gh-NNNNN: Summary of the changes made  ```    Where: gh-NNNNN refers to the GitHub issue number.    Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue.    # Backport Pull Request title    If this is a backport PR (PR made against branches other than `main`),  please ensure that the PR title is in the following format:    ```  [X.Y]  title from the original PR> (GH-NNNN)  ```    Where: [X.Y] is the branch name, e.g. [3.6].    GH-NNNN refers to the PR number from `main`.            gh-issue-number: gh-101599   * Issue: gh-101599    /gh-issue-number   
https://github.com/python/cpython/pull/104649	1	readability	2023-05-19 13:30:03	Improve readability of `typing._ProtocolMeta.__instancecheck__`	This doesn't change behaviour at all. It _might_ improve performance slightly for `isinstance()` checks against concrete subclasses of protocols, but the difference wasn't that significant. This is mainly just a cleanup to improve readability, and make the code more maintainable.
https://github.com/python/cpython/pull/106652	1	readability	2023-07-11 23:08:28	gh-104683: Argument clinic: Minor readability improvements for `Destination.__init__`	This is a fairly trivial PR by itself, but it makes the diff for another PR I'm working on much more readable     gh-issue-number: gh-104683   * Issue: gh-104683    /gh-issue-number   
https://github.com/pytorch/vision/pull/2020	2	readability	2020-03-30 14:55:16	Improve code readability and docstring	I refactored some bits of the code while trying to understand it. Hopefully, it will be useful for others too.
https://github.com/pytorch/vision/pull/5484	3	readability	2022-02-25 21:04:54	Update attribute name for readability	Changing `_HAS_VIDEO_DECODER` to `_HAS_GPU_VIDEO_DECODER` for improved readability.  More information: https://github.com/pytorch/vision/pull/5019#discussion_r776807823  Partly addresses: https://github.com/pytorch/vision/issues/5148  
https://github.com/qodo-ai/pr-agent/pull/607	3	readability	2024-01-18 15:09:07	feat: Improve error handling and code readability in pr_agent tools	## **Type** Enhancement   ___  ## **Description** - Improved error handling in `pr_code_suggestions.py`, `pr_description.py`, and `pr_reviewer.py` by adding checks for data validity before processing. - Removed redundant comments in `pr_description.py` and `pr_reviewer.py`. - In case of missing PR diff or prediction, the initial comment is now removed in `pr_description.py` and `pr_reviewer.py`.   ___  ## **Changes walkthrough**  table> thead> tr> th> /th> th align="left">Relevant files /th> /tr> /thead> tbody> tr> td> strong>Error handling /strong> /td> td> table>  tr>    td>      details>        summary> strong>pr_code_suggestions.py /strong> dd> code>Improved error handling and comment clarity in PR code suggestions /code> /dd> /summary>  hr>        pr_agent/tools/pr_code_suggestions.py  - Added extra checks for data validity before processing. - Improved comment for clarity.       /details>    /td>    td> a href="https://github.com/Codium-ai/pr-agent/pull/607/files#diff-b57ba775e741d6f80bc4f8154b71330c011dae0ac43f3d0197e785b3e6b7117b">+3/-1 /a>&nbsp; &nbsp; &nbsp;  /td>   /tr>                       tr>    td>      details>        summary> strong>pr_description.py /strong> dd> code>Streamlined PR description preparation and improved error handling /code> /dd> /summary>  hr>        pr_agent/tools/pr_description.py  - Removed redundant comments. - Added error handling for missing PR diff. - Removed initial comment if prediction is not available.       /details>    /td>    td> a href="https://github.com/Codium-ai/pr-agent/pull/607/files#diff-66130451adce278a098a5770e2db52b12050205fcd4d80c13f813615d4449abb">+7/-15 /a>&nbsp; &nbsp;  /td>   /tr>                       tr>    td>      details>        summary> strong>pr_reviewer.py /strong> dd> code>Streamlined PR review preparation and improved error handling /code>&nbsp; &nbsp; &nbsp; &nbsp;  /dd> /summary>  hr>        pr_agent/tools/pr_reviewer.py  - Removed redundant comments. - Added error handling for missing PR diff. - Removed initial comment if prediction is not available.       /details>    /td>    td> a href="https://github.com/Codium-ai/pr-agent/pull/607/files#diff-8e265068e189a06852605cc694b03e92b523b4f8162077a2f3455ced4cdad8dc">+9/-18 /a>&nbsp; &nbsp;  /td>   /tr>                      /table> /td> /tr> /tr> /tbody> /table> hr>   details>  summary> strong>  Usage guide: /strong> /summary> hr>   **Overview:** The `describe` tool scans the PR code changes, and generates a description for the PR - title, type, summary, walkthrough and labels. The tool can be triggered [automatically](https://github.com/Codium-ai/pr-agent/blob/main/Usage.md#github-app-automatic-tools) every time a new PR is opened, or can be invoked manually by commenting on a PR.  When commenting, to edit [configurations](https://github.com/Codium-ai/pr-agent/blob/main/pr_agent/settings/configuration.toml#L46) related to the describe tool (`pr_description` section), use the following template: ``` /describe --pr_description.some_config1=... --pr_description.some_config2=... ``` With a [configuration file](https://github.com/Codium-ai/pr-agent/blob/main/Usage.md#working-with-github-app), use the following template: ``` [pr_description] some_config1=... some_config2=... ```    table> tr> td> details>  summary> strong> Enabling\\disabling automation  /strong> /summary> hr>  - When you first install the app, the [default mode](https://github.com/Codium-ai/pr-agent/blob/main/Usage.md#github-app-automatic-tools) for the describe tool is: ``` pr_commands = ["/describe --pr_description.add_original_user_description=true"                           "--pr_description.keep_original_user_title=true", ...] ``` meaning the `describe` tool will run automatically on every PR, will keep the original title, and will add the original user description above the generated description.   - Markers are an alternative way to control the generated description, to give maximal control to the user. If you set: ``` pr_commands = ["/describe --pr_description.use_description_markers=true", ...] ``` the tool will replace every marker of the form `pr_agent:marker_name` in the PR description with the relevant content, where `marker_name` is one of the following:   - `type`: the PR type.   - `summary`: the PR summary.   - `walkthrough`: the PR walkthrough.  Note that when markers are enabled, if the original PR description does not contain any markers, the tool will not alter the description at all.             /details> /td> /tr>   tr> td> details>  summary> strong> Custom labels  /strong> /summary> hr>  The default labels of the `describe` tool are quite generic: [`Bug fix`, `Tests`, `Enhancement`, `Documentation`, `Other`].  If you specify [custom labels](https://github.com/Codium-ai/pr-agent/blob/main/docs/DESCRIBE.md#handle-custom-labels-from-the-repos-labels-page-gem) in the repo's labels page or via configuration file, you can get tailored labels for your use cases. Examples for custom labels: - `Main topic:performance` - pr_agent:The main topic of this PR is performance - `New endpoint` - pr_agent:A new endpoint was added in this PR - `SQL query` - pr_agent:A new SQL query was added in this PR - `Dockerfile changes` - pr_agent:The PR contains changes in the Dockerfile - ...  The list above is eclectic, and aims to give an idea of different possibilities. Define custom labels that are relevant for your repo and use cases. Note that Labels are not mutually exclusive, so you can add multiple label categories. Make sure to provide proper title, and a detailed and well-phrased description for each label, so the tool will know when to suggest it.            /details> /td> /tr>   tr> td> details>  summary> strong> Utilizing extra instructions /strong> /summary> hr>  The `describe` tool can be configured with extra instructions, to guide the model to a feedback tailored to the needs of your project.  Be specific, clear, and concise in the instructions. With extra instructions, you are the prompter. Notice that the general structure of the description is fixed, and cannot be changed. Extra instructions can change the content or style of each sub-section of the PR description.  Examples for extra instructions: ``` [pr_description]  extra_instructions=""" - The PR title should be in the format: ' PR type>:  title>' - The title should be short and concise (up to 10 words) - ... """ ``` Use triple quotes to write multi-line instructions. Use bullet points to make the instructions more readable.    /details> /td> /tr>     tr> td> details>  summary> strong> More PR-Agent commands /strong> /summary> hr>   > To invoke the PR-Agent, add a comment using one of the following commands:   > - **/review**: Request a review of your Pull Request.    > - **/describe**: Update the PR title and description based on the contents of the PR.    > - **/improve [--extended]**: Suggest code improvements. Extended mode provides a higher quality feedback.    > - **/ask \\ QUESTION\\>**: Ask a question about the PR.    > - **/update_changelog**: Update the changelog based on the PR's contents.    > - **/add_docs** : Generate docstring for new components introduced in the PR.    > - **/generate_labels** : Generate labels for the PR based on the PR's contents.    > - **/analyze** : Automatically analyzes the PR, and presents changes walkthrough for each component.     >See the [tools guide](https://github.com/Codium-ai/pr-agent/blob/main/docs/TOOLS_GUIDE.md) for more details. >To list the possible configuration parameters, add a **/config** comment.         /details> /td> /tr>   /table>  See the [describe usage](https://github.com/Codium-ai/pr-agent/blob/main/docs/DESCRIBE.md) page for a comprehensive guide on using this tool.    /details> 
https://github.com/Quantco/datajudge/pull/89	4	readability	2023-08-28 08:03:17	Better readability for numbers in output	Closes #88     Adds a method for cutting decimal numbers at their first differing place (cf. issue for a better explanation of the problem).    I also added a method that rounds numbers to their order of magnitude so the difference in large numbers can be seen more easily. Otherwise, you sometimes have an output like `12389239823 rows instead of 12259385943`.  I just realized that the current method would round both to 120,000,... but an even _better_ solution would be to round them to their first differing order of magnitude as well, i.e. `12,300,000,000 rows instead of 12,200,000,000`.    I'll have to integrate them more though and add tests  
https://github.com/quotientbot/quotient/pull/108	2	readability	2023-05-26 19:32:28	Increase code readability	- Few minor improvements  - Avoid using bare `except`  - Simplify `if-else`  - Simplify logical expressions
https://github.com/RadioAstronomySoftwareGroup/pyradiosky/pull/167	1	readability	2022-02-15 15:35:40	Fix bug and improve readability of flat spectrum script	  - Provide a general summary of your changes in the Title above      ## Description    - Describe your changes in detail    - Fix a bug related to improper indexing into the redshift.  - Fix a bug related to improper ordering of maps along the frequency axis  - Improve readability and input checking  - Save out as a skyh5 file rather than a deprecated healvis-style hdf5 file    ## Motivation and Context    - Why is this change required? What problem does it solve?      - If it fixes an open issue, please link to the issue here. If this PR closes an issue, put the word 'closes' before the issue link to auto-close the issue when the PR is merged.    fixes #163     ## Checklists:    - Please remove the checklists that don't apply to your change type(s)     ### Bug Fix Checklist:    - Go over all the following points, and replace the space with an `x` in all the boxes that apply.      - If you're unsure about any of these, don't hesitate to ask. We're here to help!    - [x] I have read the [contribution guide](https://github.com/RadioAstronomySoftwareGroup/pyradiosky/blob/main/.github/CONTRIBUTING.md).  - [x] My code follows the code style of this project.  - [ ] My fix includes a new test that breaks as a result of the bug (if possible).  - [ ] My change includes a breaking change    - [ ] My change includes backwards compatibility and deprecation warnings (if possible).  - [ ] I have updated the [CHANGELOG](https://github.com/RadioAstronomySoftwareGroup/pyradiosky/blob/main/CHANGELOG.md).  
https://github.com/radis/radis/pull/235	1	readability	2021-05-29 16:12:15	Code readability	   Please be sure to check out our contributing guidelines,  https://github.com/radis/radis/blob/develop/CONTRIBUTING.md .      ### Description     Provide a general description of what your pull request does.      This pull request is to address ...       If the pull request closes any open issues you can add this.  If you replace  Issue Number> with a number, GitHub will automatically link it.  If this pull request is unrelated to any issues, please remove  the following line.      Fixes # Issue Number>
https://github.com/rany2/edge-tts/pull/260	1	readability	2024-10-09 08:19:01	Use f-strings on constants for better readability	It's not a very significant change, but I think it makes it easier to read/modify the url more easily
https://github.com/rapidsai/dependency-file-generator/pull/27	3	readability	2022-11-23 21:54:18	refactor: Add docstrings and more comments and make minor edits to improve code readability	This PR adds documentation of all functions to explain their purposes and what arguments are being passed around. It also adds more inline comments to explain various different scenarios that might arise, particularly around empty keys or various non-matching cases. Finally, it includes some minor changes to the code that improve readability and remove unnecessary operations.    BREAKING CHANGE: This PR changes the names of a few functions and removes one unused one. This tag is also being used to demarcate our intention to make our first major release when this PR is merged.
https://github.com/ray-project/ray/pull/30251	1	readability	2022-11-15 23:08:27	[AIR] [DOCS] Improve BatchPredictor docstring and code snippet examples. Removed angle brackets and use testcode and testoutput block format for better readability	Signed-off-by: Jules Damji  jules@anyscale.com>    This is our ongoing effort for project photon to improve code snippet readability and enhancements where necessary. testcode and testoutput allows our code snippets to be tested and run in the CI cycle. This ensures that code snippets are always runnable.  ## Checks    - [x ] I've signed off every commit(by using the -s flag, i.e., `git commit -s`) in this PR.  - [x ] I've run `scripts/format.sh` to lint the changes in this PR.
https://github.com/recommenders-team/recommenders/pull/607	1	readability	2019-03-05 12:27:09	DATA: refactor for better code readability	### Description  Refactor splitter code to enhance readability (DRY principle).    ### Related Issues  #537     ### Checklist:    - Go over all the following points, and put an `x` in all the boxes that apply.      - If you're unsure about any of these, don't hesitate to ask. We're here to help!    - [x] My code follows the code style of this project, as detailed in our [contribution guidelines](../CONTRIBUTING.md).  - [x] I have added tests.  - [ ] I have updated the documentation accordingly.        
https://github.com/RedHatInsights/insights-rbac/pull/820	1	readability	2023-03-07 13:48:51	response message update to improve readability	
https://github.com/reframe-hpc/reframe/pull/2491	2	readability	2022-04-04 12:00:37	[test] Use a Jupyter notebook as IPCMagic script for better readability 	
https://github.com/refuel-ai/autolabel/pull/90	5	readability	2023-05-02 03:42:36	Adding readability improvement to metrics	This PR implements one simple change: for each element in the metric array, it also adds an explicit "index" so that mapping to the appropriate completion rate is easy :)    Example:    Metric: accuracy: [(0.81, 'index=0'), (nan, 'index=1'), (1.0, 'index=2'), (1.0, 'index=3'), (0.6666666666666666, 'index=4'), (0.875, 'index=5'), (0.7, 'index=6'), (0.9, 'index=7'), (0.8709677419354839, 'index=8'), (0.9344262295081968, 'index=9'), (0.9193548387096774, 'index=10'), (0.9264705882352942, 'index=11'), (0.9130434782608695, 'index=12'), (0.9142857142857143, 'index=13'), (0.9014084507042254, 'index=14'), (0.9027777777777778, 'index=15'), (0.8904109589041096, 'index=16'), (0.8933333333333333, 'index=17'), (0.8701298701298701, 'index=18'), (0.875, 'index=19'), (0.8536585365853658, 'index=20'), (0.8588235294117647, 'index=21'), (0.8488372093023255, 'index=22'), (0.8539325842696629, 'index=23'), (0.8444444444444444, 'index=24'), (0.8478260869565217, 'index=25'), (0.8125, 'index=26'), (0.8144329896907216, 'index=27'), (0.8061224489795918, 'index=28'), (0.81, 'index=29')]    Metric: completion_rate: [(1.0, 'index=0'), (0.0, 'index=1'), (0.01, 'index=2'), (0.02, 'index=3'), (0.03, 'index=4'), (0.08, 'index=5'), (0.1, 'index=6'), (0.3, 'index=7'), (0.31, 'index=8'), (0.61, 'index=9'), (0.62, 'index=10'), (0.68, 'index=11'), (0.69, 'index=12'), (0.7, 'index=13'), (0.71, 'index=14'), (0.72, 'index=15'), (0.73, 'index=16'), (0.75, 'index=17'), (0.77, 'index=18'), (0.8, 'index=19'), (0.82, 'index=20'), (0.85, 'index=21'), (0.86, 'index=22'), (0.89, 'index=23'), (0.9, 'index=24'), (0.92, 'index=25'), (0.96, 'index=26'), (0.97, 'index=27'), (0.98, 'index=28'), (1.0, 'index=29')]  
https://github.com/refuel-ai/autolabel/pull/185	1	readability	2023-05-31 00:40:05	increased readability of progress bar	Moved metrics onto a separate line from the progress bar to improve readability of both in smaller windows
https://github.com/relari-ai/continuous-eval/pull/10	3	readability	2024-01-26 05:58:04	Add Flesch Kincaid readability test	
https://github.com/RemDelaporteMathurin/h-transport-materials/pull/214	30	readability	2023-05-08 17:48:05	Improve unit readability	Noticed there was a discrepancy in some newer scripts there is the use of:  ```python  u = htm.ureg  ```  However, in older scripts, this is not the case. Gone through and updated all the scripts to use the same format, improving the consistency in the repo and the readability of the units    Also removed some lines of code in headers which weren't used in certain scripts
https://github.com/rgaveiga/optionlab/pull/15	7	readability	2024-03-24 15:07:13	Refactor engine for simplicity and code readability 	
https://github.com/rl-institut/multi-vector-simulator/pull/415	2	readability	2020-07-03 21:21:51	Storage name readability and MaximumCap in energyStorages	Fix #273  Adresses #413     **Changes proposed in this pull request**:  - The label of storages will - as a general rule - be redefined as `storage label + subasset name` (#273)  - `MaximumCap` is removed from list of required parameters of `energyStorage` (#413)    The following steps were realized, as well (if applies):  - [x] Use in-line comments to explain your code  - [x] Write docstrings to your code  - [x] For new functionalities: Explain in readthedocs  - [ ] Write test(s) for your new patch of code  - [x] Update the CHANGELOG.md  - [x] Apply black (`black . --exclude docs/`)  - [ ] Check if benchmark tests pass locally (`EXECUTE_TESTS_ON=master pytest`)      *Please mark above checkboxes as following:*  - [ ] Open  - [x] Done    :x: Check not applicable to this PR     sub>*For more information on how to contribute check the [CONTRIBUTING.md](https://github.com/rl-institut/mvs_eland/blob/dev/CONTRIBUTING.md).* sub>  
https://github.com/rm-hull/sql_graphviz/pull/19	1	readability	2020-06-04 09:31:44	improved readability	I've improved the readability of the imports from pyparsing and the `grammar()` function.  
https://github.com/robotpilot/ros2-seminar-examples/pull/14	3	readability	2021-01-08 06:53:39	Changed QoS setting for readability	-             QoS             - https://github.com/ros2/rclpy/blob/foxy/rclpy/rclpy/qos.py  Signed-off-by: Pyo  pyo@robotis.com>
https://github.com/Rongronggg9/RSS-to-Telegram-Bot/pull/62	8	readability	2022-04-21 18:07:27	style(*): improve readability	> Negated conditions are more difficult to read than positive ones, so it is best to avoid them where we can. By swapping the `if` and `else` conditions around we can invert the condition and make it positive.
https://github.com/Rongronggg9/RSS-to-Telegram-Bot/pull/63	6	readability	2022-04-23 12:41:00	style(*): improve readability	
https://github.com/Rongronggg9/RSS-to-Telegram-Bot/pull/66	3	readability	2022-04-28 06:05:26	refactor(*): simplify condition, improve readability	
https://github.com/rpm-software-management/rpmlint/pull/1207	1	readability	2024-03-05 08:16:16	Refactored `is_utf8_bytestr` function in `pkg.py` for improved readability and safety	Previously, the `is_utf8_bytestr` function looked like the following:    ```python  def is_utf8_bytestr(s):      """Returns True whether the given text is UTF-8.      Due to changes in rpm, needs to handle both bytes and unicode."""      try:          if hasattr(s, 'decode'):              s.decode('utf-8')          elif hasattr(s, 'encode'):              s.encode('utf-8')          else:              unexpected = type(s).__name__              raise TypeError(                  f'Expected str/unicode/bytes, not {unexpected}')      except UnicodeError:          return False      return True  ```  Hypothetically, an object with any `type` passed to this function with an `encode`, or a `decode` method could return `True` instead of raising a `TypeError`. This may never happen in real life, but still I feel it can be written in a different way.    I've refactored the function to make it more **readable**, and **safer** by using the `isinstance` function in Python.    ```python  def is_utf8_bytestr(s):      """Returns True whether the given text is UTF-8.      Due to changes in rpm, needs to handle both bytes and unicode."""      if not isinstance(s, (bytes, str)):          unexpected = type(s).__name__          raise TypeError(f'Expected str/unicode/bytes, not {unexpected}')        try:          if isinstance(s, bytes):              s.decode('utf-8')      except UnicodeError:          return False        return True  ```    All tests are passing on my machine.
https://github.com/interactionresearchstudio/NaturewatchCameraServer/pull/18	4	understandability	2020-01-30 09:59:02	Several changes to remove redundancy, simplifly the code and enhance logging with the goal of increased understandability and easier debugging.	There are different ways to do this, the final formula I used I took from picamera (https://github.com/waveform80/picamera/blob/master/picamera/array.py). Due to the way the operator ~ works, this indeed yields the correct result independent of the size of the number given.
https://github.com/mlflow/mlflow/pull/9976	4	understandability	2023-10-19 19:24:54	Improve understandability of EvaluationMetric	 details> summary>&#x1F6E0 DevTools &#x1F6E0 /summary>   p>    [![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/prithvikannan/mlflow/pull/9976?quickstart=1)    #### Install mlflow from this PR    ```  pip install git+https://github.com/mlflow/mlflow.git@refs/pull/9976/merge  ```    #### Checkout with GitHub CLI    ```  gh pr checkout 9976  ```     /p>   /details>    ### Related Issues/PRs       Uncomment 'Resolve' if this PR can close the linked items.       Resolve   #xxx    ### What changes are proposed in this pull request?    Add a `metric_details` field to `EvaluationMetric` to hold long form context about the evaluation metric. This field will hold information about the judging prompt when the `EvaluationMetric` is created with `make_genai_metric()`, and can be set manually when used with `make_metric()`    Additionally, we will extend the documentation around the `eval_fn()` to demonstrate how to test out a custom metric before passing into `mlflow.evaluate()`    ### How is this PR tested?    - [ ] Existing unit/integration tests  - [ ] New unit/integration tests  - [ ] Manual tests       Attach code, screenshot, video used for manual testing here.      ### Does this PR require documentation update?    - [ ] No. You can skip the rest of this section.  - [ ] Yes. I've updated:    - [ ] Examples    - [ ] API references    - [ ] Instructions    ### Release Notes    #### Is this a user-facing change?    - [ ] No. You can skip the rest of this section.  - [ ] Yes. Give a description of this change to be included in the release notes for MLflow users.       Details in 1-2 sentences. You can just refer to another PR with a description if this PR is part of a larger change.      #### What component(s), interfaces, languages, and integrations does this PR affect?    Components    - [ ] `area/artifacts`: Artifact stores and artifact logging  - [ ] `area/build`: Build and test infrastructure for MLflow  - [ ] `area/docs`: MLflow documentation pages  - [ ] `area/examples`: Example code  - [ ] `area/gateway`: AI Gateway service, Gateway client APIs, third-party Gateway integrations  - [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry  - [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors  - [ ] `area/recipes`: Recipes, Recipe APIs, Recipe configs, Recipe Templates  - [ ] `area/projects`: MLproject format, project running backends  - [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs  - [ ] `area/server-infra`: MLflow Tracking server backend  - [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging    Interface    - [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server  - [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models  - [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry  - [ ] `area/windows`: Windows support    Language    - [ ] `language/r`: R APIs and clients  - [ ] `language/java`: Java APIs and clients  - [ ] `language/new`: Proposals for new client languages    Integrations    - [ ] `integrations/azure`: Azure and Azure ML integrations  - [ ] `integrations/sagemaker`: SageMaker integrations  - [ ] `integrations/databricks`: Databricks integrations        Insert an empty named anchor here to allow jumping to this section with a fragment URL  (e.g. https://github.com/mlflow/mlflow/pull/123#user-content-release-note-category).  Note that GitHub prefixes anchor names in markdown with "user-content-".        a name="release-note-category"> /a>    #### How should the PR be classified in the release notes? Choose one:    - [ ] `rn/none` - No description will be included. The PR will be mentioned only by the PR number in the "Small Bugfixes and Documentation Updates" section  - [ ] `rn/breaking-change` - The PR will be mentioned in the "Breaking Changes" section  - [ ] `rn/feature` - A new user-facing feature worth mentioning in the release notes  - [ ] `rn/bug-fix` - A user-facing bug fix worth mentioning in the release notes  - [ ] `rn/documentation` - A user-facing documentation change worth mentioning in the release notes  
https://github.com/ray-project/ray/pull/18292	8	understandability	2021-09-13 23:16:18	[core][usability] Disambiguate ObjectLostErrors for better understandability	   Thank you for your contribution! Please review https://github.com/ray-project/ray/blob/master/CONTRIBUTING.rst before opening a pull request.         Please add a reviewer to the assignee section when you create a PR. If you don't have the access to it, we will shortly find a reviewer and assign them to your PR.      ## Why are these changes needed?    This separates the ObjectLostError into several different errors, all of which result in the object being unreachable:  - ObjectLostError: object has no locations in distributed memory due to node failure  - OwnerDiedError: object's owner died  - ObjectReleasedError: object's owner is alive, but the object was already released, probably due to ref counting issue.  - ObjectReconstructionFailedError: only thrown if lineage reconstruction is enabled, and an object (or its dependency) failed to be reconstructed.    ## Related issue number    Closes #14580.    ## Checks    - [x] I've run `scripts/format.sh` to lint the changes in this PR.  - [ ] I've included any doc changes needed for https://docs.ray.io/en/master/.  - [ ] I've made sure the tests are passing. Note that there might be a few flaky tests, see the recent failures at https://flakey-tests.ray.io/  - Testing Strategy     - [ ] Unit tests     - [ ] Release tests     - [ ] This PR is not tested :(  
