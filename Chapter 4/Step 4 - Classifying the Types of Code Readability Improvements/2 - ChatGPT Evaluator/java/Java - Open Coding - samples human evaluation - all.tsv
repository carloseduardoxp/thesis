id	URL	number files	keyword	merged at	developer description	code before	code after	human label
1	https://github.com/wso2/carbon-identity-framework/pull/6167	1	readability	2024-12-02 05:19:29	Rename variable for readability	 for (ExternalClaim claim : externalClaimsInDB) {             if (claim.getClaimURI().equals(claimURI)) {	for (ExternalClaim externalClaimInDB : externalClaimsInDB) {             if (externalClaimInDB.getClaimURI().equals(externalClaimURI)) {	Improve Naming
2	https://github.com/datastax/jvector/pull/388	3	readability	2025-01-23 21:41:25	Change variable names to improve readability	var efConstructionGrid = List.of(100);	var searchDepthConstructionGrid = List.of(100);	Improve Naming
3	https://github.com/elastic/elasticsearch/pull/74386	5	readability	2021-06-22 10:56:10	Rename a few variables for readability	private volatile State indexState;	private volatile State state;	Improve Naming
4	https://github.com/apache/rocketmq/pull/8183	1	readability	2024-05-23 12:15:20	Modify variable names to enhance readability	String group = commandLine.getOptionValue('g');	String subGroup = commandLine.getOptionValue('g');	Improve Naming
5	https://github.com/GoogleCloudPlatform/opentelemetry-operations-java/pull/233	2	readability	2023-04-18 17:53:41	Rename method & variables for better readability	private void recordPoint(MetricData metric, PointData point, Point builtPoint) {	private void recordPointInTimeSeries(MetricData metric, PointData point, Point builtPoint) {	Improve Naming
6	https://github.com/open-telemetry/opentelemetry-java-examples/pull/527	1	readability	2024-11-14 23:57:53	Rename variable for improved readability	unusedInstrumentType -> 100);	instrumentType -> 100);	Improve Naming
7	https://github.com/NRG948/NRGRobot2025/pull/163	2	readability	2025-03-01 18:39:01	Improves swerve variable naming for better readability.	SwerveModuleParameters swerveModule,	SwerveModuleParameters moduleParams,	Improve Naming
8	https://github.com/grpc/grpc-java/pull/11886	3	readability	2025-02-11 01:14:07	Improve variable names	Map<FilterChain, AtomicReference<ServerRoutingConfig>> filterChainRouting = new HashMap<>();	ImmutableMap.Builder<FilterChain, AtomicReference<ServerRoutingConfig>> routingConfigs = ImmutableMap.builder();	Improve Naming
9	https://github.com/quarkus-qe/quarkus-test-suite/pull/492	10	readability	2022-01-21 11:42:11	Rename some customer cases test names in order to improve readability	public void correctContentType() {	public void ensureContentTypeIsCaseInsensitive() {	Improve Naming
10	https://github.com/zowe/api-layer/pull/726	4	readability	2020-06-25 11:36:19	rename CORS related tests for improved readability	class GatewayCorsTest extends AcceptanceTestWithBasePath {	class GatewaySpecificEndpointsCorsDisabledTest extends AcceptanceTestWithBasePath {	Improve Naming
11	https://github.com/firebase/firebase-android-sdk/pull/5761	9	readability	2024-03-06 16:24:23	Rename field for better readability	public abstract String getCookieOverride();	  public abstract String getPseudonymousId();	Improve Naming
12	https://github.com/mfvanek/pg-index-health/pull/31	13	readability	2020-02-10 06:34:35	Renamed some members for better readability.	Set<PgConnection> getConnectionsToReplicas();	Set<PgConnection> getConnectionsToAllHostsInCluster();	Improve Naming
13	https://github.com/quarkus-qe/quarkus-test-suite/pull/493	9	readability	2022-01-21 14:42:11	Rename some customer cases test names in order to improve readability	public void correctContentType() {	 public void ensureContentTypeIsCaseInsensitive() {	Improve Naming
14	https://github.com/kolmafia/kolmafia/pull/1506	5	readability	2023-02-07 14:46:39	Rename `checkEffectConstraints` to what it does	public static boolean checkEffectConstraints(int effectId) {	public static boolean cannotGainEffect(int effectId) {	Improve Naming
15	https://github.com/microsoft/typespec/pull/6679	1	readability	2025-03-26 02:48:50	Renaming ProxyMethodMapper::createCustomHeaderMethod to createNoCustomHeaderMethod	final ProxyMethod customHeaderProxyMethod	final ProxyMethod noCustomHeaderMethod	Improve Naming
16	https://github.com/hyperledger/besu/pull/8507	1	readability	2025-04-02 07:32:01	renaming method in test to help readability	private List<AccessListEntry> createAccessList() {	private List<AccessListEntry> generateRandomAccessList() {	Improve Naming
17	https://github.com/FormidableLabs/react-native-app-auth/pull/899	1	readability	2023-09-06 14:58:27	Improve readability of method arguments be renaming `headers` argument to `customHeaders`	final ReadableMap headers,	final ReadableMap customHeaders,	Improve Naming
18	https://github.com/hyperledger/besu/pull/4566	32	readability	2022-11-02 10:38:23	Rename method AbstractPendingTransactionsSorter::signalInvalidTransaction to better express its semantic	.signalInvalidTransaction(transaction)	.signalInvalidAndGetDependentTransactions(transaction)	Improve Naming
19	https://github.com/firebase/firebase-android-sdk/pull/4518	3	readability	2023-01-04 19:39:58	The latch's name made it seem like it was a mock	CountDownLatch mockConnectionLatch = new CountDownLatch(1);	CountDownLatch countDownLatch = new CountDownLatch(1);	Improve Naming
20	https://github.com/RumbleDB/rumble/pull/486	4	readability	2020-02-27 15:31:56	ForClauseLocalToRowClosure is renamed to ForClausedLocalTupleToRowClosure (clarity for additions to coming with RumbleML)	public class ForClauseLocalToRowClosure implements Function<Item, Row> {	public class ForClauseLocalTupleToRowClosure implements Function<Item, Row> {	Improve Naming
21	https://github.com/Consensys/linea-tracer/pull/354	1	readability	2023-12-01 06:04:03	readability fixes method name	 initTraceService();	getTraceService();	Improve Naming
22	https://github.com/runelite/runelite/pull/2714	2	readability	2018-05-19 17:44:21	Rename 2 methods for clarity	public void onRemoveFriend(RemovedFriend removedFriend)	        public void onRemoveFriend(RemovedFriend event)	Improve Naming
23	https://github.com/dita-ot/dita-ot/pull/3300	5	readability	2019-05-11 14:29:32	Change `file` key on `param` to `path` because the value may be either a file or a directory path.	public URI file;	            public URI path;	Improve Naming
24	https://github.com/siddhi-io/siddhi/pull/852	14	readability	2018-07-02 11:11:46	- `PostStateProcessor#setNextEveryStatePerProcessor` -> `PostStateProcessor#setNextEveryStatePreProcessor`  - `StreamPostStateProcessor#nextStatePerProcessor` -> `StreamPostStateProcessor#nextStatePreProcessor`  - `StreamPostStateProcessor#nextEveryStatePerProcessor` -> `StreamPostStateProcessor#nextEveryStatePreProcessor`	void setNextStatePreProcessor(PreStateProcessor nextStatePerProcessor);	    void setNextStatePreProcessor(PreStateProcessor nextStatePreProcessor);	Improve Naming
25	https://github.com/prestodb/presto/pull/18313	18	readability	2022-09-12 14:55:52	Removed dir abbreviation and replaced with directory	Path dataDir = 	Path dataDirectory =	Improve Naming
26	https://github.com/apache/hive/pull/5107	32	readability	2024-03-06 09:40:52	use underscore for better readability	NEWTABLEDEFAULTPARA	NEW_TABLE_DEFAULT_PARA	Improve Naming
27	https://github.com/apache/hive/pull/4919	344	readability	2024-01-03 11:13:25	use underscore for better readability	CLIPROMPT	CLI_PROMPT	Improve Naming
28	https://github.com/alibaba/nacos/pull/9108	7	readability	2022-09-07 08:24:22	Rename DefaultClientConfig > DefaultGrpcClientConfig	DefaultClientConfig 	DefaultGrpcClientConfig 	Improve Naming
29	https://github.com/EternalCodeTeam/DiscordOfficer/pull/106	25	readability	2023-08-21 22:40:17	Follow reviewers suggestions	private final boolean isPassed;	    private final boolean passed;	Improve Naming
30	https://github.com/microsoft/typespec/pull/6497	13	readability	2025-03-21 04:55:47	rename AsyncResponseTypeFactory to ResponseTypeFactory	final class AsyncResponseTypeFactory {	final class ResponseTypeFactory {	Improve Naming
31	https://github.com/apache/accumulo/pull/1271	1	easier to read	2019-07-16 19:01:08	Rename codecClazz to codecClazzProp to make it clearer 	CompressionCodec createNewCodec(final String codecClazz, final String defaultClazz,	 CompressionCodec createNewCodec(final String codecClazzProp, final String defaultClazz,	Improve Naming
32	https://github.com/apache/accumulo/pull/188	26	clarity	2016-11-29 14:26:11	Replace meaningless method names	private static Key nk(String row, String cf, String cq, String cv, long ts) {	private static Key newKey(String row, String cf, String cq, String cv, long ts) {	Improve Naming
33	https://github.com/farin/JCloisterZone/pull/240	26	readability	2017-08-29 07:56:10	Minor code changes and renames	Array<Cloister> oppositeCloiters = cloisters.filter(c -> c.isShrine() ^ cloister.isShrine());	 Array<Cloister> oppositeCloisters = cloisters.filter(c -> c.isShrine() ^ cloister.isShrine());	Improve Naming
34	https://github.com/elastic/elasticsearch/pull/59951	34	understandability	2020-07-21 12:27:58	Rename binary_soft_classification evaluation to outlier_detection	public class BinarySoftClassification implements Evaluation {	public class OutlierDetection implements Evaluation {	Improve Naming
35	https://github.com/MovingBlocks/Terasology/pull/4132	8	readability	2020-08-29 07:29:27	rename RelevanceSystem's methods	relevanceSystem.updateRelevanceEntity(entity, JomlUtil.from(chunkDistance));	relevanceSystem.updateRelevanceEntityDistance(entity, JomlUtil.from(chunkDistance));	Improve Naming
36	https://github.com/apache/jena/pull/1171	4	clarity	2022-01-23 22:38:29	Renaming and tidy up to increase clarity.	private static StringBuilder format(StringBuilder result, List <Param> parameters) {	 private static StringBuilder formatEncodeHTTP(StringBuilder result, List <Param> parameters) {	Improve Naming
37	https://github.com/netty/netty/pull/9538	1	clarity	2019-09-05 07:12:17	Also rename the method to better describe what it's for.	private void remove0(AbstractChannelHandlerContext ctx) {	private synchronized void atomicRemoveFromHandlerList(AbstractChannelHandlerContext ctx) {	Improve Naming
38	https://github.com/gradle/gradle/pull/14636	7	\N	2020-09-29 14:19:15	Renamed DependendencySubstitutions.hasRules to .rulesMayAddProjectDependency,since this better reflects the method intent	public boolean hasRules() {	    public boolean rulesMayAddProjectDependency() {	Improve Naming
39	https://github.com/gradle/gradle/pull/22047	21	\N	2022-09-20 11:13:50	Rename UnitOfWork.loadRestoredOutput() to loadAlreadyProducedOutput()	public Object loadRestoredOutput(File workspace) {	public Object loadRestoredOutput(File workspace) {	Improve Naming
40	https://github.com/apache/accumulo/pull/2381	2	readability	2021-12-13 14:17:36	Renamed variable names to enhance readability.	List<Text> endRows = _listSplits(tableName);	final List<Text> existingSplits = _listSplits(tableName);	Improve Naming
41	https://github.com/apache/accumulo/pull/793	5	readability	2018-12-12 22:57:50	Rename method to maxDurability	static Durability chooseDurability(Durability dur1, Durability dur2) {	  static Durability maxDurability(Durability dur1, Durability dur2) {	Improve Naming
42	https://github.com/hazelcast/hazelcast/pull/21413	4	clarity	2022-05-13 13:54:50	Rename method and classes for better clarity	private final ReentrantLock lock = new ReentrantLock();	    private final ReentrantLock clusterServiceLock = new ReentrantLock();	Improve Naming
43	https://github.com/idempiere/idempiere/pull/2129	743	readability	2023-12-08 12:02:49	Mark deprecated variables and methods.	public class UpdateRoleMenu extends SvrProcess{	@Deprecated public class UpdateRoleMenu extends SvrProcess{	Include Modifiers and Annotations
44	https://github.com/idempiere/idempiere/pull/1984	197	readability	2023-08-29 09:40:20	Mark deprecated variables and methods.	public class UpdateRoleMenu extends SvrProcess{	@Deprecated public class UpdateRoleMenu extends SvrProcess{	Include Modifiers and Annotations
45	https://github.com/idempiere/idempiere/pull/1819	38	readability	2023-05-03 11:54:00	Mark deprecated variables and methods.	public class UpdateRoleMenu extends SvrProcess{	@Deprecated public class UpdateRoleMenu extends SvrProcess{	Include Modifiers and Annotations
46	https://github.com/idempiere/idempiere/pull/1774	27	readability	2023-04-11 11:35:39	Mark deprecated variables and methods.	public class UpdateRoleMenu extends SvrProcess{	@Deprecated public class UpdateRoleMenu extends SvrProcess{	Include Modifiers and Annotations
47	https://github.com/idempiere/idempiere/pull/1755	119	readability	2023-03-28 17:36:32	Mark deprecated variables and methods.	public class UpdateRoleMenu extends SvrProcess{	@Deprecated public class UpdateRoleMenu extends SvrProcess{	Include Modifiers and Annotations
48	https://github.com/idempiere/idempiere/pull/1774	27	readability	2023-04-11 11:35:39	Mark deprecated variables and methods.	public class UpdateRoleMenu extends SvrProcess{	@Deprecated public class UpdateRoleMenu extends SvrProcess{	Include Modifiers and Annotations
49	https://github.com/idempiere/idempiere/pull/1690	51	readability	2023-02-27 13:23:20	Mark deprecated variables and methods.	public class UpdateRoleMenu extends SvrProcess{	@Deprecated public class UpdateRoleMenu extends SvrProcess{	Include Modifiers and Annotations
50	https://github.com/idempiere/idempiere/pull/1675	22	readability	2023-02-15 11:33:19	Mark deprecated variables and methods.	public class UpdateRoleMenu extends SvrProcess{	@Deprecated public class UpdateRoleMenu extends SvrProcess{	Include Modifiers and Annotations
51	https://github.com/idempiere/idempiere/pull/1666	53	readability	2023-02-09 13:39:59	Mark deprecated variables and methods.	public class UpdateRoleMenu extends SvrProcess{	@Deprecated public class UpdateRoleMenu extends SvrProcess{	Include Modifiers and Annotations
52	https://github.com/apache/kafka/pull/8363	6	readability	2020-03-28 23:38:13	Maybe it will improve the readability if @Override annotation is applied over the run() method since Sender class implements Runnable		@Override	Include Modifiers and Annotations
53	https://github.com/apolloconfig/apollo/pull/5293	25	readability	2024-12-14 06:12:34	`@Override` to the method in the implementation class	public String toString() {	@Override   public String toString() {	Include Modifiers and Annotations
54	https://github.com/apache/iotdb/pull/4374	15	readability	2021-11-13 04:31:08	@OverRide can improve code readability and help compiler check method relationship between superclass and subclass.		@Override	Include Modifiers and Annotations
55	https://github.com/TeamNewPipe/NewPipe/pull/7562	9	readability	2021-12-23 22:54:29	Add annotations to methods and parameters.		@Override	Include Modifiers and Annotations
56	https://github.com/jenkinsci/jenkins/pull/4845	12	readability	2020-07-17 14:14:47	missing NonNull	public void write(byte[] b) throws IOException {	                public void write(@NonNull byte[] b) throws IOException {	Include Modifiers and Annotations
57	https://github.com/gdg-x/frisbee/pull/681	1	readability	2016-10-05 20:49:26	Use support annotations to avoid NullPointerException.	private Intent parseDeepLinkId(String deepLinkId) {	 private Intent parseDeepLinkId(@NonNull String deepLinkId) {	Include Modifiers and Annotations
58	https://github.com/runelite/runelite/pull/2714	2	readability	2018-05-19 17:44:21	add Nullable tag	private String getFriendNote(String friend)	Nullable         private String getFriendNote(String displayName)	Include Modifiers and Annotations
59	https://github.com/netty/netty/pull/12869	30	readability	2022-10-06 20:57:38	Start to use @VisibleForTesting in Netty 5 to make it easier to users to understand what to expect.		visiblefortesting	Include Modifiers and Annotations
60	https://github.com/EternalCodeTeam/DiscordOfficer/pull/106	25	readability	2023-08-21 22:40:17	Add @FunctionalInterface		@FunctionalInterface	Include Modifiers and Annotations
61	https://github.com/prestodb/presto/pull/9539	3	readability	2017-12-12 22:31:27	Add GuardedBy and make synchronization more obviously correct		@GuardedBy("this")	Include Modifiers and Annotations
62	https://github.com/eXist-db/exist/pull/5256	1	readability	2024-03-21 20:02:34	use final variables where possible	private boolean caseSensitive = true;	private final boolean caseSensitive;	Include Modifiers and Annotations
63	https://github.com/elastic/elasticsearch/pull/124322	4	readability	2025-03-08 14:04:01	This can be final	private Set<String> indexHistory = new LinkedHashSet<>();	private final Set<String> indexHistory = new LinkedHashSet<>();	Include Modifiers and Annotations
64	https://github.com/DataLinkDC/dinky/pull/1155	12	readability	2022-10-28 05:15:36	refactor: simple code	private static ConsolePool instance = new ConsolePool();	private static final ConsolePool instance = new ConsolePool();	Include Modifiers and Annotations
65	https://github.com/undertow-io/undertow/pull/850	1	readability	2020-09-11 08:28:10	No impact, this simply marks an immutable field final for readability.	private int encoderHeaderTableSize;	    private final int encoderHeaderTableSize;	Include Modifiers and Annotations
66	https://github.com/TeamNewPipe/NewPipe/pull/7562	9	readability	2021-12-23 22:54:29	Make class variables static if possible.	protected final boolean DEBUG = MainActivity.DEBUG;	protected static final boolean DEBUG = MainActivity.DEBUG;	Include Modifiers and Annotations
67	https://github.com/apache/lucene/pull/13532	1	readability	2024-07-12 08:49:32	* consistently use this. in constructor	vectorIndex =	      this.vectorIndex =	Include Modifiers and Annotations
68	https://github.com/jenkinsci/configuration-as-code-plugin/pull/116	1	readability	2018-02-20 09:42:35	move config variable name to constant	File defaultConfig = new File("./jenkins.yaml");	File defaultConfig = new File(DEFAULT_JENKINS_YAML_PATH);	Extract Literals to Constants
69	https://github.com/OpenRefine/OpenRefine/pull/2893	12	\N	2020-07-14 18:12:46	Reused the hardcoded constraint & parameter IDs from the scrutinizer classes into the test classes respectively.	when(fetcher.getConstraintsByType(propertyIdValue, "Q19474404")).thenReturn(statementList);	when(fetcher.getConstraintsByType(propertyIdValue, SINGLE_VALUE_CONSTRAINT_QID)).thenReturn(statementList);	Extract Literals to Constants
70	https://github.com/elastic/elasticsearch/pull/36819	17	readability	2018-12-19 12:15:05	This PR replaces the usage of 0 with a constant, to improve readability and so it can be tracked and if needed, replaced.	primaryTerm = 0;	primaryTerm = UNASSIGNED_PRIMARY_TERM;	Extract Literals to Constants
71	https://github.com/grpc/grpc-java/pull/7944	3	readability	2021-03-08 17:14:22	Added some constants to make assertions for the same values easier to read/conceptualize	assertThat(ldsUpdateCaptor.getValue().virtualHosts).hasSize(2);	assertThat(ldsUpdateCaptor.getValue().virtualHosts).hasSize(VHOST_SIZE);	Extract Literals to Constants
72	https://github.com/spring-cloud/spring-cloud-netflix/pull/1686	8	readability	2017-02-16 17:48:49	Substituting @value("${local.server.port}") with @LocalServerPort	@Value("${local.server.port}") private int port;	import org.springframework.boot.context.embedded.LocalServerPort; @LocalServerPort private int port;	Extract Literals to Constants
73	https://github.com/slackapi/java-slack-sdk/pull/1025	5	readability	2022-07-19 00:39:31	facilitate the understanding of http status codes in tests	assertThat(response.getStatus(), is(equalTo(200)));	        assertThat(response.getStatus(), is(equalTo(HttpStatus.OK_200)));	Clarify Numeric Constants
74	https://github.com/apache/pulsar/pull/8052	4	readability	2020-11-11 06:50:43	hard-coded Http values to constants	Assert.assertEquals(e.getStatusCode(), 412);	Assert.assertEquals(e.getStatusCode(), HttpStatus.PRECONDITION_FAILED_412);	Extract Literals to Constants
75	https://github.com/runelite/runelite/pull/2714	2	readability	2018-05-19 17:44:21	Finalize local vars and add KEY_PREFIX constant	configManager.unsetConfiguration(CONFIG_GROUP, "note_" + friend);	configManager.setConfiguration(CONFIG_GROUP, KEY_PREFIX + displayName, note);	Extract Literals to Constants
76	https://github.com/apache/dolphinscheduler/pull/12660	1	readability	2022-11-03 01:29:04	setPerm(Constants.AUTHORIZE_WRITABLE_PERM) in grantProjectbyCode()	 projectUser.setPerm(7);	            projectUser.setPerm(Constants.AUTHORIZE_WRITABLE_PERM);	Extract Literals to Constants
77	https://github.com/Pi4J/pi4j/pull/254	2	readability	2022-11-28 10:46:30	 I struggled quite a bit to understand what the parameter value `3` of the `gpioCfgInterfaces` call actually means. So in my first commit I m suggesting to dissolve the magic value `3` by using new constants that I m adding to `PiGpioConst`. I ve taken the constants from https://github.com/joan2937/pigpio/blob/master/pigpio.h. 	int rslt = PIGPIO.gpioCfgInterfaces(3);	            int rslt = PIGPIO.gpioCfgInterfaces(PI_IF_DISABLE_FIFO | PI_IF_DISABLE_SOCK);	Extract Literals to Constants
78	https://github.com/firebase/firebase-android-sdk/pull/4518	3	readability	2023-01-04 19:39:58	Inlining more of the setup makes it more readable	executorService.awaitTermination(100, TimeUnit.MILLISECONDS);	executorService.awaitTermination(AWAIT_TERMINATION_TIMEOUT_MS, TimeUnit.MILLISECONDS);	Extract Literals to Constants
79	https://github.com/apache/kafka/pull/17464	1	readability	2024-10-15 08:13:27	Replace hardcoded "member-1" strings with existing MEMBER_ID constant	 sharePartition.acknowledge("member-1", Collections.singletonList(	sharePartition.acknowledge(MEMBER_ID, Collections.singletonList(	Extract Literals to Constants
80	https://github.com/TeamNewPipe/NewPipe/pull/7562	9	readability	2021-12-23 22:54:29	Use constants for some Strings. Introduce constants for some Strings that indicate no data in Tab class	 this(-1, "<no-url>", "<no-name>");	this(-1, NO_URL, NO_NAME);	Extract Literals to Constants
81	https://github.com/quelea-projection/Quelea/pull/489	1	readability	2021-10-09 22:25:05	Replaced magic constant on CreateTimerPanel with a specific variable for readability	durationTextField.setText(td.getTimeToFinish().get(Calendar.HOUR) + ":" + (td.getTimeToFinish().get(Calendar.MINUTE) > 9 ? "" : "0") + td.getTimeToFinish().get(Calendar.MINUTE) + (td.getTimeToFinish().get(Calendar.AM_PM) == 0 ? "am" : "pm"));	durationTextField.setText(td.getTimeToFinish().get(Calendar.HOUR) + ":" + (td.getTimeToFinish().get(Calendar.MINUTE) > 9 ? "" : "0") + td.getTimeToFinish().get(Calendar.MINUTE) + (td.getTimeToFinish().get(Calendar.AM_PM) == Calendar.AM ? "am" : "pm"));	Extract Literals to Constants
82	https://github.com/apache/iotdb/pull/275	1	readability	2019-07-19 13:15:00	replace two methods with constant value for readability	.get(tsFileResource.getFile().getPath(), tsFileResource.isClosed());	.get(tsFileResource.getFile().getPath(), true);	Extract Literals to Constants
83	https://github.com/hyperledger/besu/pull/3667	1	readability	2022-04-01 01:55:23	 I think the constant name could easier to read	if (accumulatedTime > 10 * 1000L) {	    if (accumulatedTime > TEN_SECONDS) {	Extract Literals to Constants
84	https://github.com/cgeo/cgeo/pull/7431	4	readable	2019-03-30 22:12:31	use assertj more readable (left to right)	Assert.assertTrue(connector.canHandle("TR12"));	assertThat(connector.canHandle("TR12")).isTrue();	Clarify Test Intent
85	https://github.com/jenkinsci/plugin-installation-manager-tool/pull/134	7	readability	2020-07-18 07:21:41	Improve the readability of tests.	assertEquals(pluginDir, cfg.getPluginDir());         assertEquals(jenkinsWar.toString(), cfg.getJenkinsWar());         assertEquals(1, cfg.getPlugins().size());         assertEquals(displayUrlPlugin.toString(), cfg.getPlugins().get(0).toString());	assertThat(cfg.getPluginDir()).isEqualTo(pluginDir);         assertThat(cfg.getJenkinsWar()).isEqualTo(jenkinsWar.toString());         assertThat(cfg.getPlugins()).containsExactly(displayUrlPlugin);	Clarify Test Intent
86	https://github.com/jenkinsci/plugin-installation-manager-tool/pull/124	1	readability	2020-07-09 18:49:34	Don't mock Files.exists	mockStatic(Files.class);          when(Files.exists(any(Path.class))).thenReturn(false);         assertEquals(false, pluginList.fileExists(pluginFile));	File notExistingFile = new File("/file/that/does/not/exist.yaml");         assertEquals(false, pluginList.fileExists(notExistingFile));	Clarify Test Intent
87	https://github.com/jenkinsci/subversion-plugin/pull/213	12	readability	2018-04-20 08:11:01	simplified JUnit expressions I could start by improving some unit tests. 	assertTrue(r == SVNRevision.HEAD);	 assertSame(r, SVNRevision.HEAD);	Clarify Test Intent
88	https://github.com/openmrs/openmrs-module-fhir2/pull/123	7	readability	2020-03-23 15:45:26	Converted test assertion methods to assertThat() to improve code readability	assertEquals(omrsLocation.getAddress3(), ADDRESS_3);	import static org.assertj.core.api.Assertions.assertThat; assertThat(omrsLocation.getAddress3(), equalTo(ADDRESS_3));	Clarify Test Intent
89	https://github.com/opensearch-project/OpenSearch/pull/2503	1	readability	2022-03-19 08:22:04	Use Hamcrest matchers and assertThat() in ReindexRenamedSettingTests to improve readability. Reason: The order of the assertEquals() arguments in ReindexRenamedSettingTests class is reversed.	 assertTrue(	import static org.assertj.core.api.Assertions.assertThat; assertThat(	Clarify Test Intent
90	https://github.com/gchq/Gaffer/pull/3014	9	readability	2023-11-13 17:33:49	Improve assertions readability with assertJ	assertEquals(Iterable.class, outputClass);	assertThat(outputClass).isEqualTo(Iterable.class);	Clarify Test Intent
91	https://github.com/projectnessie/nessie/pull/1271	18	readability	2021-05-21 15:58:17	Introduce AssertJ for better test code readability when it comes to testing as it's very expressive and makes the code easy to read. 	assertEquals("Ref not found",         assertThrows(NessieNotFoundException.class,             () -> paginator.generateStream("ref", OptionalInt.empty())).getMessage());	import static org.assertj.core.api.Assertions.assertThat;     assertThatThrownBy(() -> paginator.generateStream("ref", OptionalInt.empty()))         .isInstanceOf(NessieNotFoundException.class)         .hasMessage("Ref not found");	Clarify Test Intent
92	https://github.com/apache/pulsar/pull/4799	134	readability	2019-07-25 16:14:03	Usage of appropriate assert statements	 assertEquals(cache1.insert(EntryImpl.create(1, 1, new byte[4])), true);	assertTrue(cache1.insert(EntryImpl.create(1, 1, new byte[4])));	Clarify Test Intent
93	https://github.com/awslabs/aws-java-nio-spi-for-s3/pull/251	6	readability	2023-11-02 18:52:53	Replace assertTrue(x instanceof b) with assertThat().isInstanceOf	assertTrue(basicFileAttributes instanceof S3BasicFileAttributes);	import static org.assertj.core.api.Assertions.assertThat; assertThat(basicFileAttributes).isInstanceOf(S3BasicFileAttributes.class);	Clarify Test Intent
94	https://github.com/jenkinsci/jenkins/pull/6060	48	readability	2021-12-18 19:04:33	Replace old-style JTH assertions with newer methods for improved readability.	 b = j.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0).get());	 b = j.buildAndAssertStatus(Result.FAILURE, p);	Replace Generic with Specialized API
95	https://github.com/apache/dubbo/pull/5996	1	readability	2021-03-15 00:23:45	use Collections.singletonList instead of Arrays.asList	import static java.util.Arrays.asList;  return protocols(asList(protocolConfig));	import static java.util.Collections.singletonList; return protocols(singletonList(protocolConfig));	Replace Generic with Specialized API
96	https://github.com/iluwatar/java-design-patterns/pull/589	1	\N	2017-06-14 17:19:44	Refactored the Functional Interface to the Specialized Primitive Functional Interface	static List<Object[]> prepareParameters(final BiFunction<Integer, Integer, Integer> resultCalc) {	static List<Object[]> prepareParameters(final IntBinaryOperator resultCalc) {	Replace Generic with Specialized API
98	https://github.com/jenkinsci/jenkins/pull/4845	12	readability	2020-07-17 14:14:47	Arrays.asList` to `Collections.singletonList	args = Arrays.asList("help"); // default to help	            args = Collections.singletonList("help"); // default to help	Replace Generic with Specialized API
99	https://github.com/jenkinsci/jenkins/pull/4846	18	readability	2020-07-17 14:15:16	Arrays.asList to Collections.singletonList	wr.setRequestParameters(Arrays.asList(new NameValuePair("newName", "bar")));	        wr.setRequestParameters(Collections.singletonList(new NameValuePair("newName", "bar")));	Replace Generic with Specialized API
100	https://github.com/grpc/grpc-java/pull/10641	1	readability	2023-11-02 17:06:40	code readability refactoring	Collection<ClassInfo> classInfos = ClassPath.from(loader).getTopLevelClassesRecursive("io.grpc");	import com.google.common.collect.ImmutableSet; ImmutableSet<ClassInfo> classInfos = ClassPath.from(loader).getTopLevelClassesRecursive("io.grpc");	Replace Generic with Specialized API
101	https://github.com/apache/hudi/pull/1575	26	readability	2020-04-30 16:19:40	Reorder HoodieTimeline#compareTimestamp arguments for better readability reads nicely as (instantTime1, GREATER_OR_EQUAL, instantTime2) etc	 if (sourceLatestCommit != null         && HoodieTimeline.compareTimestamps(targetLatestCommit, sourceLatestCommit, HoodieTimeline.GREATER)) {       return getString(target, targetTimeline, source, sourceCount, targetCount, sourceLatestCommit); }	 if (sourceLatestCommit != null         && HoodieTimeline.compareTimestamps(targetLatestCommit, HoodieTimeline.GREATER_THAN, sourceLatestCommit)) {       return getString(target, targetTimeline, source, sourceCount, targetCount, sourceLatestCommit); }	Replace Generic with Specialized API
102	https://github.com/apache/dubbo/pull/9361	1	readability	2021-12-16 08:14:09	Improve the readability of the getOrder method `Ordered.LOWEST_PRECEDENCE + 1` is equal to `Ordered.HIGHEST_PRECEDENCE`, using `Ordered.HIGHEST_PRECEDENCE` is more readable.	return Ordered.LOWEST_PRECEDENCE + 1;	        return Ordered.HIGHEST_PRECEDENCE;	Clarify Numeric Constants
103	https://github.com/HubSpot/jinjava/pull/285	2	\N	2019-05-03 12:34:00	Rearrange for readability	builder.append(TokenScannerSymbols.TOKEN_EXPR_START_CHAR).append(TokenScannerSymbols.TOKEN_TAG_CHAR).append(" ")         .append(getEndName())         .append(" ").append(TokenScannerSymbols.TOKEN_TAG_CHAR).append(TokenScannerSymbols.TOKEN_EXPR_END_CHAR);	String endTag = String.format(         "%s%s %s %s%s",         TokenScannerSymbols.TOKEN_EXPR_START_CHAR,         TokenScannerSymbols.TOKEN_TAG_CHAR,         getEndName(),         TokenScannerSymbols.TOKEN_TAG_CHAR,         TokenScannerSymbols.TOKEN_EXPR_END_CHAR     );     builder.append(endTag);	Extract Variable
104	https://github.com/apache/accumulo/pull/2250	1	easier to read	2021-08-31 12:04:00	Split up some single lines of code to make it easier to read	var sjob =             executors.get(job.getExecutor()).submit(myId, job, compactable, completionCallback);	CompactionExecutor executor = executors.get(job.getExecutor());         var submittedJob = executor.submit(myId, job, compactable, completionCallback);	Extract Variable
105	https://github.com/eclipse-collections/eclipse-collections/pull/1135	1	readability	2021-09-07 02:55:24	Improving code readability - Extracting actual and expected variables, so the types are visible in the tests.	Assert.assertEquals(                 SMALL_INTERVAL.toList(),                 this.smallData.stream().collect(Collectors2.toImmutableList()));	MutableList<Integer> expected = SMALL_INTERVAL.toList();         ImmutableList<Integer> actual = this.smallData.stream().collect(Collectors2.toImmutableList());         Assert.assertEquals(expected, actual);	Extract Variable
106	https://github.com/eclipse-ditto/ditto/pull/908	1	readability	2020-12-08 16:35:25	Handle Integer.MIN_VALUE explicitly in PubSubFactory.hashForPubSub.	return Math.max(0, Math.abs(hashKey.toString().hashCode()));	final int stringHashCode = hashKey.toString().hashCode();         if (stringHashCode == Integer.MIN_VALUE) {             return 0;         } else {             return Math.abs(stringHashCode);         }	Extract Variable
107	https://github.com/apache/accumulo/pull/4097	1	readability	2023-12-20 21:33:09	Rewrites sliding window code to be more readable.	var loops = Math.max(1, sortedFiles.size() - maxFilesToCompact + 1);     for (int i = 0; i < loops; i++) {       var filesToCompact = findDataFilesToCompact(           sortedFiles.subList(i, Math.min(sortedFiles.size(), maxFilesToCompact) + i), ratio);	int windowStart = 0;     int windowEnd = Math.min(sortedFiles.size(), maxFilesToCompact);      while (windowEnd <= sortedFiles.size()) {       var filesToCompact =           findDataFilesToCompact(sortedFiles.subList(windowStart, windowEnd), ratio);	Extract Variable
108	https://github.com/mars-sim/mars-sim/pull/1404	1	readability	2024-09-07 10:14:56	introduce boolean for more readability	if (tt > -40 && tt < 40) {	boolean isTempUnsafe = tt > -40 && tt < 40; if (isTempUnsafe) {	Extract Variable
109	https://github.com/MegaMek/mekhq/pull/6138	1	readability	2025-03-04 19:10:12	Cleaned up updatePartInUseData method by restructuring conditional logic for better readability. Reduced nesting and eliminated redundant checks to streamline execution.		// Ignore units set to salvage             if (unit.isSalvage()) {                 return;             }	Apply Early Return
110	https://github.com/eXist-db/exist/pull/5256	1	readability	2024-03-21 20:02:34	return early		if (!(expr instanceof VariableReference || expr instanceof Function)) {             return null;         }	Apply Early Return
111	https://github.com/batfish/batfish/pull/1860	1	readability	2018-07-11 22:58:26	invert ifs and exit early		if (!settings.canExecute()) {       return Arrays.asList(BfConsts.SVC_FAILURE_KEY, "Non-executable command");     }	Apply Early Return
112	https://github.com/elastic/elasticsearch/pull/124322	4	readability	2025-03-08 14:04:01	Add early return null cases		 if (context == null) {             return false;         }	Apply Early Return
113	https://github.com/civiform/civiform/pull/9948	1	readability	2025-03-12 17:04:16	Cleanup largely by removing unnecessary else{} blocks to return-early checks.		 if (versionRepository.get().isDraftProgram(programId)) {       return;     }	Apply Early Return
114	https://github.com/SweetRazory/WaystonesPlus/pull/9	16	readability	2023-07-06 05:45:06	as a part of which early returns are introduced where suitable	if (waystoneTypes != null) {	if (waystoneTypes == null) return;	Apply Early Return
115	https://github.com/prestodb/presto/pull/13780	1	readability	2019-12-02 22:28:55	Invert if condition for better readability	if (!determinismEvaluator.isDeterministic(expression)) {	if (determinismEvaluator.isDeterministic(expression)) {	Prefer Positive Conditions
116	https://github.com/runelite/runelite/pull/2714	2	readability	2018-05-19 17:44:21	Invert 2 null checks for better readability	if (!Strings.isNullOrEmpty(note))	                if (Strings.isNullOrEmpty(note))	Prefer Positive Conditions
117	https://github.com/RPTools/maptool/pull/2141	58	clean up	2020-08-03 12:23:39	removed empty block	if (waypointCheck.isEmpty()) { } else {	if (!waypointCheck.isEmpty()) {	Prefer Positive Conditions
118	https://github.com/gradle/gradle/pull/22047	21	\N	2022-09-20 11:13:50	Simplify condition	if (work.getExecutionBehavior() != INCREMENTAL) {	        if (work.getExecutionBehavior() == NON_INCREMENTAL) {	Prefer Positive Conditions
119	https://github.com/apache/gravitino/pull/4297	2	readability	2024-07-30 01:46:02	Change the trinomial operator usage code to make it easier to understand 	paimonSchema.comment =           comment == null               ? (properties == null ? null : properties.get(PaimonSchemaPropertiesMetadata.COMMENT))               : comment;	if (comment != null) {         paimonSchema.comment = comment;       } else if (properties != null) {         paimonSchema.comment = properties.get(PaimonSchemaPropertiesMetadata.COMMENT);       } else {         paimonSchema.comment = null;       }	Replace Ternary with If-Else
120	https://github.com/hyperledger/besu/pull/1382	1	readability	2020-09-15 12:51:36	Remove ternary operator for better readability	out.writeBytes(transaction.getTo().isPresent() ? transaction.getTo().get() : Bytes.EMPTY);	out.writeBytes(transaction.getTo().map(Bytes::copy).orElse(Bytes.EMPTY));	Replace Ternary with If-Else
121	https://github.com/RPTools/maptool/pull/2141	58	clean up	2020-08-03 12:23:39	overly complicated boolean expressions simplified	macroPathTrusted = context == null ? false : context.isTrusted();	macroPathTrusted = context != null && context.isTrusted();	Replace Ternary with If-Else
122	https://github.com/camel-tooling/camel-language-server/pull/102	1	readability	2018-07-03 12:46:09	Write ternary with if-else to improve readability	return item -> filterString != null && filterString.trim().length()>0 ? item.getName().startsWith(filterString) : true;	return item -> {    if (filterString != null && filterString.trim().length()>0) {     return item.getName().startsWith(filterString);    } else {     return true;    }   };	Replace Ternary with If-Else
123	https://github.com/apache/druid/pull/6377	31	readability	2018-10-15 03:49:39	Use NodeType enum instead of Strings	private static final List<String> NODE_TYPES = Arrays.asList(       DruidNodeDiscoveryProvider.NODE_TYPE_BROKER,       DruidNodeDiscoveryProvider.NODE_TYPE_OVERLORD,       DruidNodeDiscoveryProvider.NODE_TYPE_HISTORICAL,       DruidNodeDiscoveryProvider.NODE_TYPE_PEON,       DruidNodeDiscoveryProvider.NODE_TYPE_ROUTER,       DruidNodeDiscoveryProvider.NODE_TYPE_MM	private static final List<NodeType> NODE_TYPES = Arrays.asList(       NodeType.BROKER,       NodeType.OVERLORD,       NodeType.HISTORICAL,       NodeType.PEON,       NodeType.ROUTER,       NodeType.MIDDLE_MANAGER	Extract Literals to Enum
124	https://github.com/crate/crate/pull/4076	11	readable	2016-09-16 13:55:04	Use Enum as mode for ReplacingSymbolVisitor	super(true);	        super(ReplaceMode.MUTATE);	Extract Literals to Enum
125	https://github.com/kolmafia/kolmafia/pull/1506	5	readability	2023-02-07 14:46:39	Make `checkConstraints` return an enum describing what each number means	int checkConstraints(Modifiers mods) {     // Return value:     // -1: item violates a constraint, don't use it     // 0: item not relevant to any constraints     // 1: item meets a constraint, give it special handling     if (mods == null) return 0;	enum Constraint {     /** Item violates a constraint, don't use it */     VIOLATES,     /** Item not relevant to any constraints */     IRRELEVANT,     /** Item meets a constraint, give it special handling */     MEETS   }	Extract Literals to Enum
126	https://github.com/typetools/checker-framework/pull/3918	5	readability	2020-11-23 17:06:40	Change boolean to enum for readability	return runAnalysisFor(node, true);	return runAnalysisFor(node, Analysis.BeforeOrAfter.BEFORE);	Extract Literals to Enum
127	https://github.com/apache/geode/pull/2920	3	readability	2018-12-06 01:09:43	Make private field actually private.	StringBuilder all = null;	  private StringBuilder all = null;	Restrict Field Visibility
128	https://github.com/TeamNewPipe/NewPipe/pull/7562	9	readability	2021-12-23 22:54:29	Make PlayerHolder.bound private	public boolean bound;	private boolean bound;	Restrict Field Visibility
129	https://github.com/Azure/azure-sdk-for-java/pull/35796	6	readability	2023-07-11 14:12:06	making few methods that don't need to be package-internal as private.	Mono<OffsetDateTime> renewSessionLock(String sessionId) {	    private Mono<OffsetDateTime> renewSessionLock(String sessionId) {	Restrict Field Visibility
130	https://github.com/NightscoutFoundation/xDrip/pull/1205	3	readability	2020-01-26 20:44:05	Added _ separator in numbers to ease reading	final BgReading existing = BgReading.getForPreciseTimestamp(recordTimestamp, 10000);	final BgReading existing = BgReading.getForPreciseTimestamp(recordTimestamp, 10_000);	Clarify Numeric Constants
131	https://github.com/farin/JCloisterZone/pull/240	26	readability	2017-08-29 07:56:10	Convert some int literals to binary for clarity of the mechanism	public static final Location N = new Location("N", 3 << 8);	public static final Location N = new Location("N", 0b00000011 << 8);	Clarify Numeric Constants
132	https://github.com/JanusGraph/janusgraph/pull/788	23	legibility	2017-12-03 10:06:28	Make long constants end in L for legibility	private static final long ETERNAL_CACHE_EXPIRATION = 1000l*3600*24*365*200; //200 years	private static final long ETERNAL_CACHE_EXPIRATION = 1000L *3600*24*365*200; //200 years	Clarify Numeric Constants
133	https://github.com/elastic/elasticsearch/pull/55915	1	readability	2020-04-29 14:23:43	Remove unnecessary instance variable in QueryStringQueryParser	private MappedFieldType currentFieldType;  private Query getRangeQuerySingle(String field, String part1, String part2,                                       boolean startInclusive, boolean endInclusive, QueryShardContext context) {         currentFieldType = context.fieldMapper(field); }	private Query getRangeQuerySingle(String field, String part1, String part2,                                       boolean startInclusive, boolean endInclusive, QueryShardContext context) {      MappedFieldType currentFieldType = context.fieldMapper(field); }	Extract field into local variable
134	https://github.com/virtualcell/vcell/pull/164	3	readability	2022-07-18 14:17:14	minor reorganization to reduce static variables and clarify flow of control for Omex exporting.	public class VcmlOmexConverter { private static boolean bForceVCML = false;                // set by the -vcml CL argument, means we export to omex as vcml (if missing, default we try sbml first)         private static boolean bForceSBML = false;                // set by the -sbml CL argument, means we export to omex strictly as sbml (mutually exclusive with -vcml)         private static boolean bHasDataOnly = false;        // we only export those simulations that have at least some results; set by -hasDataOnly CL argument         private static boolean bMakeLogsOnly = false;        // we do not build omex files, we just write the logs         private static boolean bNonSpatialOnly = false;        // we only export non-spatial }	public static void convertFiles(CLIDatabaseService cliDatabaseService, CLIHandler cliHandler) throws IOException, SQLException, DataAccessException {  boolean bForceSBML = cliHandler.shouldForceSbml();                 boolean bForceVCML = cliHandler.shouldForceVcml();                 boolean bHasDataOnly = cliHandler.isHasDataOnly();                 boolean bMakeLogsOnly = cliHandler.isMakeLogsOnly();                 boolean bNonSpatialOnly = cliHandler.isNonSpacialOnly(); }	Extract field into local variable
135	https://github.com/grpc/grpc-java/pull/7944				Added helpers for single-resource sendResponse(), verifyRequest(), etc, to skip single-element collection so it's a bit easier to read	protected abstract void verifyRequest(Node node, String versionInfo, List<String> resources,         ResourceType type, String nonce);	protected abstract void verifyRequest(         ResourceType type, List<String> resources, String versionInfo, String nonce, Node node);      protected void verifyRequest(         ResourceType type, String resource, String versionInfo, String nonce, Node node) {       verifyRequest(type, ImmutableList.of(resource), versionInfo, nonce, node);     }	Introduce Named Overloads 
136	https://github.com/HubSpot/jinjava/pull/946				replace the boolean that was added as a parameter with a separate method with a different name which internally references a private method that uses the boolean flag.	return expressionResolver.resolveExpression(expression, false);	    return expressionResolver.resolveExpressionSilently(expression);	Introduce Named Overloads 
137	https://github.com/apache/geode/pull/2920	3	readability	2018-12-06 01:09:43	Don't return a bare list.	 final List<?> expectedStrings = ExpectedStrings.create("dunit");	      final List<Pattern> expectedStrings = ExpectedStrings.create("dunit");	Use domain-specific types to clarify intent
138	https://github.com/apache/hudi/pull/2319	1	readability	2020-12-15 06:35:24	Improve code readability by passing in the fileComparisonsRDD in bloom index	JavaPairRDD<String, String> partitionRecordKeyPairRDD) {	final JavaRDD<Tuple2<String, HoodieKey>> fileComparisonsRDD) {	Use domain-specific types to clarify intent
139	https://github.com/elastic/elasticsearch/pull/124322	4	readability	2025-03-08 14:04:01	These are generic-ed off in the other instanceof checks, these ones don't need to be different.	else if (context instanceof List) {	 } else if (context instanceof List<?>) {	Make generics explicit in type checks
140	https://github.com/jenkinsci/jenkins/pull/4846	18	readability	2020-07-17 14:15:16	some deprecations fixed around StandardCharsets.UTF_8	FileUtils.writeStringToFile(f, FileUtils.readFileToString(f).replaceAll("Hello World", "Good Evening"));	FileUtils.writeStringToFile(f, FileUtils.readFileToString(f, StandardCharsets.UTF_8).replaceAll("Hello World", "Good Evening"), StandardCharsets.UTF_8);	Replace Deprecated Code
141	https://github.com/jenkinsci/jenkins/pull/4845	12	readability	2020-07-17 14:14:47	Added a break to a for loop	for (int i=pos; !more && i<node.children.size(); i++)                     if (node.children.get(i).tagName.equals(child.tagName))                                  more = true;	for (int i = pos; i < node.children.size(); i++) {                     if (node.children.get(i).tagName.equals(child.tagName)) {                         more = true;                         break;                     }	Add a break to a for loop
142	https://github.com/EternalCodeTeam/DiscordOfficer/pull/106	25	readability	2023-08-21 22:40:17	Use custom exception	throw new RuntimeException(sqlException);	  throw new DataAccessException("Failed to execute database action", sqlException);	prefer specific exception handling
143	https://github.com/Consensys/linea-tracer/pull/354	1	readability	2023-12-01 06:04:03	use abstract list type for method param	 protected void assertTransactionsInSeparateBlocks(Web3j web3j, ArrayList<String> hashes)	  protected void assertTransactionsInSeparateBlocks(Web3j web3j, List<String> hashes)	Use abstract type
144	https://github.com/RPTools/maptool/pull/2141	58	clean up	2020-08-03 12:23:39	readability improvement with boolean expression	owner &= !gmOnly	 owner = gmOnly ? false : owner;	Replace Condition with ternary
145	https://github.com/grpc/grpc-java/pull/7756	1	clarity	2020-12-23 21:08:02	Improve code clarity by using Arrays.copyOf()	byte[] dest = new byte[wi];       System.arraycopy(escapedBytes, 0, dest, 0, wi);        return dest;	return Arrays.copyOf(escapedBytes, wi);	Prefer Built-in Methods
146	https://github.com/jenkinsci/plugin-installation-manager-tool/pull/117	1	readability	2020-07-07 20:17:16	improve readability by removing boilerplate code.	List<Plugin> expectedPlugins = new ArrayList<>();         expectedPlugins.add(new Plugin("workflow-scm-step", "2.4", null, null));         expectedPlugins.add(new Plugin("workflow-step-api", "2.20", null, null));          List<String> expectedPluginInfo = convertPluginsToStrings(expectedPlugins);	List<String> expectedPluginInfo = convertPluginsToStrings(                 new Plugin("workflow-scm-step", "2.4", null, null),                 new Plugin("workflow-step-api", "2.20", null, null));	Simplify Object Construction and Conversion
147	https://github.com/grpc/grpc-java/pull/6128	1	readability	2019-09-06 21:41:11	clean up some ImmutableMaps	ImmutableMap.Builder<XdsLocality, LocalityLbInfo> builder = ImmutableMap.builder();           for (Map.Entry<XdsLocality, LocalityLbInfo> entry : localityMap.entrySet()) {             if (!entry.getKey().equals(locality)) {               builder.put(entry);             }           }           localityMap = builder.build();	Map<XdsLocality, LocalityLbInfo> copy = new LinkedHashMap<>(localityMap);           copy.remove(locality);           localityMap = ImmutableMap.copyOf(copy);	Prefer Built-in Methods
148	https://github.com/apache/druid/pull/10003	1	readability	2020-06-10 16:32:01	Improve readability of the test by simplifying its parameters generator. The parameters generator uses CompressionStrategy.noNoneValues() instead of CompressionStrategyTest.compressionStrategies() which wrapped each CompressionStrategy in a single element array.	final Iterable<CompressionStrategy> compressionStrategies = Iterables.transform(         CompressionStrategyTest.compressionStrategies(),         (Object[] input) -> (CompressionStrategy) input[0]     ); Sets.newHashSet(compressionStrategies),	Sets.newHashSet(CompressionStrategy.noNoneValues()),	Prefer Built-in Methods
149	https://github.com/jenkinsci/plugin-installation-manager-tool/pull/118	3	readability	2020-07-07 21:10:03	Improve readability by removing boilerplate code.	txtRequestedPlugins = new ArrayList<>();         txtRequestedPlugins.add(new Plugin("google-api-client-plugin",                 "latest", "https://updates.jenkins.io/latest/google-api-client-plugin.hpi", null));         txtRequestedPlugins.add(new Plugin("git", "latest", null, null));         txtRequestedPlugins.add(new Plugin("job-import-plugin", "2.1", null, null));         txtRequestedPlugins.add(new Plugin("docker", "latest", null, null));         txtRequestedPlugins.add(new Plugin("cloudbees-bitbucket-branch-source", "2.4.4", null, null));         txtRequestedPlugins.add(new Plugin("script-security", "latest",                 "http://ftp-chi.osuosl.org/pub/jenkins/plugins/script-security/1.56/script-security.hpi", null));         txtRequestedPlugins.add(new Plugin("workflow-step-api",                 "2.19-rc289.d09828a05a74", null, "org.jenkins-ci.plugins.workflow"));         txtRequestedPlugins.add(new Plugin("matrix-project", "latest", null, null));         txtRequestedPlugins.add(new Plugin("junit", "experimental", null, null));         txtRequestedPlugins.add(new Plugin("credentials", "2.2.0",                 "http://ftp-chi.osuosl.org/pub/jenkins/plugins/credentials/2.2.0/credentials.hpi", null));         txtRequestedPlugins.add(new Plugin("blueocean", "latest", null, null));	txtRequestedPlugins = asList(             new Plugin("google-api-client-plugin",                     "latest", "https://updates.jenkins.io/latest/google-api-client-plugin.hpi", null),             new Plugin("git", "latest", null, null),             new Plugin("job-import-plugin", "2.1", null, null),             new Plugin("docker", "latest", null, null),             new Plugin("cloudbees-bitbucket-branch-source", "2.4.4", null, null),             new Plugin("script-security", "latest",                     "http://ftp-chi.osuosl.org/pub/jenkins/plugins/script-security/1.56/script-security.hpi", null),             new Plugin("workflow-step-api",                     "2.19-rc289.d09828a05a74", null, "org.jenkins-ci.plugins.workflow"),             new Plugin("matrix-project", "latest", null, null),             new Plugin("junit", "experimental", null, null),             new Plugin("credentials", "2.2.0",                     "http://ftp-chi.osuosl.org/pub/jenkins/plugins/credentials/2.2.0/credentials.hpi", null),             new Plugin("blueocean", "latest", null, null)         );	Prefer Built-in Methods
150	https://github.com/DataLinkDC/dinky/pull/1155	12	readability	2022-10-28 05:15:36	Asserts.java simple and format.	"".equals(str);	str.isEmpty();	Prefer Built-in Methods
151	https://github.com/apache/kafka/pull/8577	3	readability	2020-05-02 00:18:44	using the min, max might make the code a little easier to read.    	if (binNumber > maxBinNumber) {                 return maxBinNumber;             }             return binNumber;	return Math.min(binNumber, maxBinNumber);	Prefer Built-in Methods
152	https://github.com/TEAMMATES/teammates/pull/8258	2	readability	2018-01-28 08:40:49	Use functional programming to improve code readability I refactored methods to use Java 8's streams API to improve readability.	StringBuilder sb = new StringBuilder();         for (int i = 0; i < length; i++) {             sb.append(character);         }         return sb.toString();	return String.join("", Collections.nCopies(length, String.valueOf(character)));	Prefer Built-in Methods
153	https://github.com/apache/iotdb/pull/2103	10	readability	2020-11-22 09:40:29	Use min or max method of Math to improve readability	return multiSeriesCost > maxCost ? maxCost : multiSeriesCost;	return Math.min(multiSeriesCost, maxCost);	Prefer Built-in Methods
154	https://github.com/jenkinsci/subversion-plugin/pull/213	12	readability	2018-04-20 08:11:01	replaced iteartion with bulk operation	for (List<String> path : paths) {             result.add(path);         }	result.addAll(Arrays.asList(paths));	Prefer Built-in Methods
155	https://github.com/apache/iotdb/pull/2375	1	readability	2020-12-29 13:46:05	Use TimeUnit instead of plain number to improve readability	private int connectionTimeoutInMS = 20 * 1000;	  private int connectionTimeoutInMS = (int) TimeUnit.SECONDS.toMillis(20);	Clarify Numeric Constants
157	https://github.com/apache/accumulo/pull/4737	1	readability	2024-09-11 17:19:12	Also converted the longs to use the `NanoTime` object.	protected final long idleReportingPeriodNanos;   private volatile long idlePeriodStartNanos = 0L;	protected final long idleReportingPeriodMillis;   private volatile Timer idlePeriodTimer = null;	Use domain-specific types to clarify intent
158	https://github.com/apolloconfig/apollo/pull/5293	25	readability	2024-12-14 06:12:34	 Modify the equals compare method	if (Objects.isNull(tableName) || tableName.equals("")) {	if (Objects.isNull(tableName) || Objects.equals(tableName, "")) {	Prefer Built-in Methods
159	https://github.com/apolloconfig/apollo/pull/5293	25	readability	2024-12-14 06:12:34	 Use an empty collection instead of null return value	return null;	    return Collections.emptyList();	Prefer Built-in Methods
160	https://github.com/apache/accumulo/pull/1590	159	readable	2020-04-21 11:39:57	Using Collection.size() to test for emptiness works, but using Collection.isEmpty() makes the code more readable 	if (getOverrides().size() > 0) {	    if (!getOverrides().isEmpty()) {	Prefer Built-in Methods
161	https://github.com/awslabs/aws-java-nio-spi-for-s3/pull/251	6	readability	2023-11-02 18:52:53	Use collection.isEmpty() when possible	options.size() == 0) {	options.isEmpty()) {	Prefer Built-in Methods
162	https://github.com/camel-tooling/camel-language-server/pull/413	2	readability	2020-07-02 13:59:05	Use isEmpty() for improved readability	assertThat(completionItems).hasSize(0);	 assertThat(completionItems).isEmpty();	Prefer Built-in Methods
163	https://github.com/TeamNewPipe/NewPipe/pull/7562	9	readability	2021-12-23 22:54:29	Simplify if conditions.	&& infoListAdapter.getItemsList().size() > 0	&& !infoListAdapter.getItemsList().isEmpty()	Prefer Built-in Methods
164	https://github.com/eXist-db/exist/pull/5668	91	readability	2025-03-16 20:47:23	use isEmpty() where possible - readability	if( buffer.length() > 0 ) {	if(!buffer.isEmpty()) {	Prefer Built-in Methods
165	https://github.com/jenkinsci/subversion-plugin/pull/213	12	readability	2018-04-20 08:11:01	removed unnecessary unboxing	return revisionState.revisions.get(url).longValue();	return revisionState.revisions.get(url);	Simplify Object Construction and Conversion
166	https://github.com/apache/hive/pull/2103	1	readability	2021-03-27 03:31:35	Remove redundant code and improve readability	 job.setNumReduceTasks(rWork != null ? rWork.getNumReduceTasks().intValue() : 0);	    job.setNumReduceTasks(rWork != null ? rWork.getNumReduceTasks() : 0);	Simplify Object Construction and Conversion
167	https://github.com/apache/geode/pull/2920	3	readability	2018-12-06 01:09:43	Properly declare testExpectStrs, expectedExceptions to be lists of patterns.	for (Object expectedException : expectedExceptions) {       Pattern p = (Pattern) expectedException;       if (p.matcher(line).find()) {	 for (Pattern expectedException : expectedExceptions) {       if (expectedException.matcher(line).find()) {	Simplify Object Construction and Conversion
168	https://github.com/eclipse-jkube/jkube/pull/1046	1	readability	2021-10-25 12:37:12	Changed the sort method interface for easy readability	Collections.sort(profiles, Collections.<Profile>reverseOrder());	profiles.sort(Collections.reverseOrder());	Simplify Object Construction and Conversion
169	https://github.com/eclipse-jkube/jkube/pull/1046	1	readability	2021-10-25 12:37:12	Changed Collections.sort(profiles, Collections. Profile>reverseOrder()); to    profiles.sort(Collections.reverseOrder()); for easy understanding.	Collections.sort(profiles, Collections.<Profile>reverseOrder());	        profiles.sort(Collections.reverseOrder());	Simplify Object Construction and Conversion
170	https://github.com/elastic/elasticsearch/pull/71620	4	readability	2021-04-13 13:07:20	Cleaning up double wrapping in unmodifiableList.	SnapshotsInProgress.TYPE, SnapshotsInProgress.of(unmodifiableList(updatedSnapshotEntries))).build() :	                                SnapshotsInProgress.TYPE, SnapshotsInProgress.of(updatedSnapshotEntries)).build() :	Simplify Object Construction and Conversion
171	https://github.com/iluwatar/java-design-patterns/pull/1025	12	readability	2019-10-20 16:01:03	Added var for local variables in cases var is improving readability	StringBuilder builder = new StringBuilder();	var builder = new StringBuilder();	Simplify Object Construction and Conversion
172	https://github.com/Unleash/unleash-client-java/pull/130	3	readability	2021-03-16 13:53:37	chore: Use getOrDefault instead of Optional.ofNullable.orElse to aid in readability	final String groupId = Optional.ofNullable(parameters.get(GROUP_ID)).orElse("");	final String groupId = parameters.getOrDefault(GROUP_ID, "");	Simplify Object Construction and Conversion
173	https://github.com/elastic/elasticsearch/pull/81743	26	readability	2021-12-15 13:34:27	use pattern matching for instanceof where applicable	 if (node instanceof LeafNode) {                 leafSize = ((LeafNode) node).leafValue.length;	if (node instanceof LeafNode leafNode) {                 leafSize = leafNode.leafValue.length;	Simplify Object Construction and Conversion
174	https://github.com/elastic/elasticsearch/pull/81635	45	readability	2021-12-13 18:56:07	Replace instanceof / cast with Java 17 instanceof pattern matching.	if (named instanceof FieldAttribute) {             FieldAttribute fa = (FieldAttribute) named;	if (named instanceof FieldAttribute fa) {	Simplify Object Construction and Conversion
175	https://github.com/graphql-java/graphql-java/pull/1094	13	readability	2018-06-24 21:42:47	This moves all the wrapper type construction in the code and tests to use the static constructor.	return new GraphQLList(buildDirectiveInputType(getArrayValueWrappedType(arrayValue)));	return list(buildDirectiveInputType(getArrayValueWrappedType(arrayValue)));	Simplify Object Construction and Conversion
176	https://github.com/apache/accumulo/pull/793				Remove unnecessary object manipulation across method calls	Map<CommitSession,TabletMutations> sendables = new HashMap<>(); TabletMutations tMutations = new TabletMutations(commitSession.getLogId(), commitSession.getWALogSeq(), mutations, durability); sendables.put(commitSession, tMutations);	  Map<CommitSession,List<Mutation>> sendables = new HashMap<>(); sendables.put(commitSession, mutations);	Simplify Object Construction and Conversion
177	https://github.com/eclipse-jkube/jkube/pull/3356	1	readability	2024-09-02 13:55:44	``stream().forEach()`` replaced with ``forEach()`` for better readability	inputMap.entrySet().stream().forEach(entry -> result.put(entry.getKey(), sortValuesYamlRecursive(entry.getValue())));	      inputMap.forEach((key, value) -> result.put(key, sortValuesYamlRecursive(value)));	Prefer Idiomatic Iteration
178	https://github.com/cgeo/cgeo/pull/7629	69	\N	2019-06-03 18:33:00	use lambda functions for Schedulers.io()	changeLogLink.setOnClickListener(new OnClickListener() {                  @Override                 public void onClick(final View v) {                     startUrl("https://github.com/cgeo/cgeo/releases");                 }             });	changeLogLink.setOnClickListener(v -> startUrl("https://github.com/cgeo/cgeo/releases"));	Replace Anonymous Class With Functional Style
179	https://github.com/gradle/gradle/pull/11892	66	readable	2020-01-15 08:59:26	code is definitely much more readable without all the anonymous inner class boilerplate.	ComponentModuleMetadataProcessor NO_OP = new ComponentModuleMetadataProcessor() {         @Override         public ModuleReplacementsData getModuleReplacements() {             return ModuleReplacementsData.NO_OP;         }     };	ComponentModuleMetadataProcessor NO_OP = () -> ModuleReplacementsData.NO_OP;	Replace Anonymous Class With Functional Style
180	https://github.com/rstudio/rstudio/pull/1529	3	readability	2017-09-26 23:52:28	try out Java8 lambdas to get a feel for them (terminal code)	activateTerminal(new Display.DisplaySelectedCallback()       {          @Override          public void displaySelected()          {             ensureTerminal(text);             Scheduler.get().scheduleDeferred(new ScheduledCommand()             {                @Override                public void execute()                {                   suppressAutoFocus_ = false;                }             });          }	activateTerminal(() -> {          ensureTerminal(text);          Scheduler.get().scheduleDeferred(() -> { suppressAutoFocus_ = false; });	Replace Anonymous Class With Functional Style
181	https://github.com/apache/pulsar/pull/4703	28	readability	2019-07-21 23:28:30	The anonymous classes were converted to lambda in the places where it improves readability and decreases the lines of code.	executor.execute(new Runnable() {             @Override             public void run() {                 try {                     for (int i = 0; i < N; i++) {                         c1.markDelete(position);                     }                     counter.countDown();                 } catch (Exception e) {                     e.printStackTrace();	executor.execute(() -> {             try {                 for (int i = 0; i < N; i++) {                     c1.markDelete(position);                 }                 counter.countDown();             } catch (Exception e) {                 e.printStackTrace();	Replace Anonymous Class With Functional Style
182	https://github.com/apache/pulsar/pull/4683	4	readability	2019-07-08 16:16:06	Predicates and Functions were converted to lambda	return topicNames.stream().filter(new Predicate<TopicName>() {             @Override             public boolean test(TopicName topicName) {                 return topicName.getNamespace().equals(ns);             }         }).map(new Function<TopicName, String>() {             @Override             public String apply(TopicName topicName) {                 return topicName.toString();             }         }).collect(Collectors.toList());	return topicNames.stream()             .filter(topicName -> topicName.getNamespace().equals(ns))             .map(TopicName::toString).collect(Collectors.toList());	Replace Anonymous Class With Functional Style
184	https://github.com/apache/parquet-java/pull/641	16	readability	2019-10-07 07:36:06	Introduce Lambdas  to improve on readability and reduce boilerplate code.	IllegalArgumentException.class, new Runnable() {             @Override             public void run() {               new AvroSchemaConverter().convert(message(type));             }           });	 IllegalArgumentException.class, () -> new AvroSchemaConverter().convert(message(type)));	Replace Anonymous Class With Functional Style
185	https://github.com/apache/accumulo/pull/793	5	readability	2018-12-12 22:57:50	Replaced code with lambdas	write(commitSession, false, new Writer() {       @Override       public LoggerOperation write(DfsLogger logger) throws Exception {         return logger.minorCompactionStarted(seq, commitSession.getLogId(), fullyQualifiedFileName,             durability);       }     });	write(Collections.singletonList(commitSession), false, logger -> logger         .minorCompactionStarted(seq, commitSession.getLogId(), fullyQualifiedFileName, durability),         writeRetryFactory.createRetry());	Replace Anonymous Class With Functional Style
186	https://github.com/apache/accumulo/pull/501	5	readability	2018-12-12 22:57:50	Improve some comparators using Java 8	private static final Comparator<TraceRunnable> comparator = new Comparator<TraceRunnable>() {     @SuppressWarnings("unchecked")     @Override     public int compare(TraceRunnable o1, TraceRunnable o2) {       return ((Comparable<Runnable>) o1.getRunnable()).compareTo(o2.getRunnable());     }   };	@SuppressWarnings("unchecked")   private static final Comparator<TraceRunnable> ELEMENT_COMPARATOR = (o1,       o2) -> ((Comparable<Runnable>) o1.getRunnable()).compareTo(o2.getRunnable());	Replace Anonymous Class With Functional Style
187	https://github.com/dsldevkit/dsl-devkit/pull/941	1	readability	2024-05-27 11:12:14	Slightly improve readability and performance using lambas	getCache().get(LAZY_CROSS_REFERENCES_RESOLVED, this, new Provider<LazyResolutionFlag>() {             @Override             public LazyResolutionFlag get() {               return lazyLinking;             }           });	getCache().get(LAZY_CROSS_REFERENCES_RESOLVED, this, () -> lazyLinking);	Replace Anonymous Class With Functional Style
188	https://github.com/oracle/tribuo/pull/336	8	readability	2023-04-28 16:00:32	Use of lambda expression to improve readability.	new com.google.protobuf.Internal.EnumLiteMap<EventType>() {             public EventType findValueByNumber(int number) {               return EventType.forNumber(number);             }           };	EventType::forNumber;	Replace Anonymous Class With Functional Style
189	https://github.com/apache/geode/pull/2920	3	readability	2018-12-06 01:09:43	Inline constant-true method call. 	Runtime.getRuntime().addShutdownHook(new Thread() {       public void run() { processManager.killVMs();       }     });	Runtime.getRuntime().addShutdownHook(new Thread(processManager::killVMs));	Replace Anonymous Class With Functional Style
190	https://github.com/AxonFramework/AxonFramework/pull/776	6	\N	2019-01-23 13:34:18	Use of forEach to remove uggly generic loop	for (Class<?> parameter : gatewayMethod.getParameterTypes()) {             if (CommandCallback.class.isAssignableFrom(parameter)) {                 return true;             }         }         return false;	return Stream.of(gatewayMethod.getParameterTypes())                 .anyMatch(CommandCallback.class::isAssignableFrom);	Prefer Idiomatic Iteration
191	https://github.com/apache/pulsar/pull/4683	4	readability	2019-07-08 16:16:06	Predicates and Functions were converted to lambda	fooFunctions.put("field2", integer -> String.valueOf(integer));	fooFunctions.put("field2", String::valueOf);	Replace Lambda With Method Reference
192	https://github.com/apache/hudi/pull/2962	4	readability	2021-05-19 01:13:38	Using streams instead of loops for input/output	while ((line = br.readLine()) != null) {         LOG.info(line);       }	br.lines().forEach(LOG::info);	Prefer Idiomatic Iteration
193	https://github.com/DataLinkDC/dinky/pull/1155	12	readability	2022-10-28 05:15:36	Asserts.java simple and format.	boolean isNull = true;         for (String item : str) {             if (isNotNullString(item)) {                 isNull = false;             }         }         return isNull;	return Arrays.stream(str).allMatch(Asserts::isNullString);	Prefer Idiomatic Iteration
194	https://github.com/jenkinsci/subversion-plugin/pull/213	12	readability	2018-04-20 08:11:01	introduce lambdas	r.executeOnServer(new Callable<Object>() {             public Object call() throws Exception {                 assertFalse("Shouldn't be accessible to anonymous user",b.hasPermission(action.getPermission()));                 return null;             }	r.executeOnServer(() -> {             assertFalse("Shouldn't be accessible to anonymous user",b.hasPermission(action.getPermission()));             return null;	Replace Anonymous Classes With Lambda
195	https://github.com/elastic/elasticsearch/pull/28737	1	readability	2018-02-20 13:03:24	Replace CAS loop by updateAndGet to improve readability	do {                 deOptimizeTimestamp = maxUnsafeAutoIdTimestamp.get();                 if (deOptimizeTimestamp >= index.getAutoGeneratedIdTimestamp()) {                     break;                 }             } while (maxUnsafeAutoIdTimestamp.compareAndSet(deOptimizeTimestamp,                 index.getAutoGeneratedIdTimestamp()) == false);	maxUnsafeAutoIdTimestamp.updateAndGet(curr -> Math.max(index.getAutoGeneratedIdTimestamp(), curr));	Prefer Idiomatic Iteration
196	https://github.com/trinodb/trino/pull/9958	2	readability	2021-11-17 12:30:32	Use more functional style to improve code readability	if (node.getOrderBy().isPresent()) {                 process(node.getOrderBy().get(), indent);             }	node.getOrderBy().ifPresent(orderBy -> process(orderBy, indent));	Prefer Idiomatic Iteration
197	https://github.com/apache/geode/pull/2920	3	readability	2018-12-06 01:09:43	Reduce loops to streams.	 for (Pattern expectedException : expectedExceptions) {       if (expectedException.matcher(line).find()) {         return true;       }     }     for (Pattern testExpectStr : testExpectStrs) {       if (testExpectStr.matcher(line).find()) {         return true;       }     }     return false;	return expectedExceptions.stream().anyMatch(expected -> expected.matcher(line).find())         || testExpectStrs.stream().anyMatch(testExpected -> testExpected.matcher(line).find());	Prefer Idiomatic Iteration
198	https://github.com/trinodb/trino/pull/13941	266	readability	2022-09-05 14:20:03	Use of Optional.orElseThrow allows to verify the optional is not empty before assigning to a variable. This subsequently removes need for Optional.get() calls.	Optional<QualifiedName> prefix = statement.getName().getPrefix();         if (prefix.isEmpty()) {             throw semanticException(MISSING_TABLE, statement, "Table must be specified");         }	        QualifiedName prefix = statement.getName().getPrefix()                 .orElseThrow(() -> semanticException(MISSING_TABLE, statement, "Table must be specified"));	Prefer Idiomatic Iteration
199	https://github.com/MegaMek/megamek/pull/3583	1	readability	2022-04-20 16:11:54	 improves array parsing readability.	final String[] values = value.split(",");         final double[] doubles = new double[values.length];         for (int i = 0; i < values.length; i++) {             doubles[i] = Double.parseDouble(values[i]);         }         return doubles;	        return Arrays.stream(value.split(",")).mapToDouble(Double::parseDouble).toArray();	Prefer Idiomatic Iteration
200	https://github.com/magefree/mage/pull/9574	3	readable	2022-09-26 13:48:14	It simply flattens the functions, simplifies them when possible, and reorders them to group similar pieces (e.g. all of the inner classes, or all of the static methods) together.	if (cardPlugin != null) {       if (previewable) {             mageActionCallback.refreshSession();             mageActionCallback.setCardPreviewComponent(bigCard);       }       mageCard = cardPlugin.getMageCard(card, dimension, gameId, mageActionCallback, false, !MageFrame.isLite() && loadImage, renderMode, needFullPermanentRender); } else {       throw new IllegalArgumentException("Card's plugin must be loaded"); }	if (cardPlugin == null) {      throw new IllegalArgumentException("Card's plugin must be loaded"); } if (previewable) {      mageActionCallback.refreshSession();      mageActionCallback.setCardPreviewComponent(bigCard); } mageCard = cardPlugin.getMageCard(card, dimension, gameId, mageActionCallback, false, !MageFrame.isLite() && loadImage, renderMode, needFullPermanentRender);	Reduce Conditional Nesting
201	https://github.com/apache/accumulo/pull/2381	2	readability	2021-12-13 14:17:36	Replaced while-loop with if-loop after determining while-loop was only run at most once each time.	for (int i = 0; i < endRows.size() && j < maxSplits; i++) {       pos += r;       while (pos > 1) {         subset.add(endRows.get(i));         j++;         pos -= 1;       }	if (existingSplits.size() <= maxSplits) {       return existingSplits;	Reduce Conditional Nesting
202	https://github.com/apache/accumulo/pull/1604	2	readability	2020-05-06 11:40:39	ReplicationClient.java and ThriftServerBindsBeforeZooKeeperLockIT.java contain instances of 'while' loops which never loop. In the case of ReplicationClient, the loop is always entered but either returns or throws an exception. ThriftServerBindsBeforeZooKepperLockIT contains three 'while' blocks that never loop. Each of the outer 'while' blocks contan another 'while' which does loop until a condition is met resulting in a 'return' case being satisfied. The outer loop does not appear to be necessary in each of these cases. These loops have been removed to increase readability of the code.	while (true) {       int freePort = PortUtils.getRandomFreePort();       String monitorUrl = "http://localhost:" + freePort;       Process monitor = null;       try {         LOG.debug("Starting standby monitor on {}", freePort);         monitor = startProcess(cluster, ServerType.MONITOR, freePort);	int freePort = PortUtils.getRandomFreePort();     String monitorUrl = "http://localhost:" + freePort;     Process monitor = null;     try {       LOG.debug("Starting standby monitor on {}", freePort);       monitor = startProcess(cluster, ServerType.MONITOR, freePort);	Reduce Conditional Nesting
203	https://github.com/SweetRazory/WaystonesPlus/pull/9	16	readability	2023-07-06 05:45:06	excessive nesting through conditional statements (if-else) are refactored to reduce complexity and improve readability			Reduce Conditional Nesting
204	https://github.com/grpc/grpc-java/pull/11886	3	readability	2025-02-11 01:14:07	Reduce nesting  	if (hcm.virtualHosts() != null) {         ImmutableMap<Route, ServerInterceptor> interceptors = generatePerRouteInterceptors(                 hcm.httpFilterConfigs(), hcm.virtualHosts());         return new AtomicReference<>(ServerRoutingConfig.create(hcm.virtualHosts(),interceptors)); } else {         RouteDiscoveryState rds = routeDiscoveryStates.get(hcm.rdsName());         checkNotNull(rds, "rds");         AtomicReference<ServerRoutingConfig> serverRoutingConfigRef = new AtomicReference<>();         if (rds.savedVirtualHosts != null) {           ImmutableMap<Route, ServerInterceptor> interceptors = generatePerRouteInterceptors(               hcm.httpFilterConfigs(), rds.savedVirtualHosts);           ServerRoutingConfig serverRoutingConfig =               ServerRoutingConfig.create(rds.savedVirtualHosts, interceptors);           serverRoutingConfigRef.set(serverRoutingConfig);         } else {           serverRoutingConfigRef.set(ServerRoutingConfig.FAILING_ROUTING_CONFIG);         }         savedRdsRoutingConfigRef.put(filterChain, serverRoutingConfigRef);         return serverRoutingConfigRef; }	if (hcm.virtualHosts() != null) {         interceptors = generatePerRouteInterceptors(hcm.httpFilterConfigs(), hcm.virtualHosts());         return new AtomicReference<>(ServerRoutingConfig.create(hcm.virtualHosts(), interceptors)); }  RouteDiscoveryState rds = routeDiscoveryStates.get(hcm.rdsName());  checkNotNull(rds, "rds");  ServerRoutingConfig routingConfig; ImmutableList<VirtualHost> savedVhosts = rds.savedVirtualHosts; if (savedVhosts != null) {     interceptors = generatePerRouteInterceptors(hcm.httpFilterConfigs(), savedVhosts);     routingConfig = ServerRoutingConfig.create(savedVhosts, interceptors); } else {      routingConfig = ServerRoutingConfig.FAILING_ROUTING_CONFIG; }  AtomicReference<ServerRoutingConfig> routingConfigRef = new AtomicReference<>(routingConfig); savedRdsRoutingConfigRef.put(filterChain, routingConfigRef); return routingConfigRef; }	Reduce Conditional Nesting
205	https://github.com/eXist-db/exist/pull/5256	1	readability	2024-03-21 20:02:34	less indentation	if (this.lowercaseValue == null) {             if (this.value != null) {                 this.lowercaseValue = this.value.toLowerCase();             }	if (lowercaseValue == null && value != null) {             lowercaseValue = value.toLowerCase();         }	Reduce Conditional Nesting
206	https://github.com/eclipse-jkube/jkube/pull/2547	1	readability	2024-01-23 09:42:56	Extraction of Nested Logic	for (NamedTagEventList list : tags) {                 List<TagEvent> items = list.getItems();                 if (items == null || items.isEmpty()) {                     continue TAG_EVENT_LIST;	if (latestTag != null && StringUtils.isNotBlank(latestTag.getImage())) {                     String image = latestTag.getImage();                     log.info("Found tag on ImageStream " + imageStreamName + " tag: " + image);                     return image;	Reduce Conditional Nesting
207	https://github.com/elastic/elasticsearch/pull/105680	1	readability	2024-02-21 10:36:26	This commit regroups the conditions 	if (executor.isShutdown() == false && r instanceof AbstractRunnable abstractRunnable) {             if (abstractRunnable.isForceExecution()) {                 if (executor.getQueue() instanceof SizeBlockingQueue<Runnable> sizeBlockingQueue) {                     try {                         sizeBlockingQueue.forcePut(r);                     } catch (InterruptedException e) {                         Thread.currentThread().interrupt();                         throw new IllegalStateException("forced execution, but got interrupted", e);                     }                     if ((executor.isShutdown() && sizeBlockingQueue.remove(r)) == false) {                         return;                     } // else fall through and reject the task since the executor is shut down                 } else {                     throw new IllegalStateException("expected but did not find SizeBlockingQueue: " + executor);	 if (executor.isShutdown() == false && isForceExecution(r)) {             if (executor.getQueue() instanceof SizeBlockingQueue<Runnable> sizeBlockingQueue) {                 try {                     sizeBlockingQueue.forcePut(r);                 } catch (InterruptedException e) {                     Thread.currentThread().interrupt();                     throw new IllegalStateException("forced execution, but got interrupted", e);                 }                 if ((executor.isShutdown() && sizeBlockingQueue.remove(r)) == false) {                     return;                 } // else fall through and reject the task since the executor is shut down             } else {                 throw new IllegalStateException("expected but did not find SizeBlockingQueue: " + executor);             }	Reduce Conditional Nesting
208	https://github.com/apache/eventmesh/pull/3433	1	readability	2023-03-13 02:29:08	 Improve code readability by removing the nested if loop	if (!Objects.equals(sessionState, session.sessionState)) {             return false;         }         return true;	        return Objects.equals(sessionState, session.sessionState);	Collapse Boolean Return
209	https://github.com/apache/commons-lang/pull/418	1	clarity	2019-04-24 12:25:29	Changing switch statement to if/else statement for greater clarity	switch (c[pos.getIndex()]) {             case QUOTE:	if (c[pos.getIndex()] == QUOTE) {	Replace Switch with If-Else
210	https://github.com/apache/shardingsphere/pull/26698	3	readability	2023-06-29 13:20:40	Fix sonar issues of Replace this "switch" statement by "if" statements to increase readability.	switch (itemType) {             case BroadcastRuleNodePathProvider.TABLES:                 return new BroadcastTableEventCreator();             default:                 throw new UnsupportedOperationException(itemType);	if (itemType.equals(BroadcastRuleNodePathProvider.TABLES)) {             return new BroadcastTableEventCreator();         }         throw new UnsupportedOperationException(itemType);	Replace Switch with If-Else
211	https://github.com/wildfly-security/wildfly-elytron/pull/1968	1	readability	2023-09-22 22:48:21	Replacing switch statement by if statements to increase readability	switch (name) {             case SecurityVaultData.PICKETBOX_CLASS_NAME: return SecurityVaultData.class;             default: return super.resolveClass(desc);	if (name.equals(SecurityVaultData.PICKETBOX_CLASS_NAME)) {             return SecurityVaultData.class;         } else {             return super.resolveClass(desc);	Replace Switch with If-Else
212	https://github.com/wildfly-security/wildfly-elytron/pull/2015	1	readability	2024-03-08 18:01:48	Changed switch to if-else to increase readability for Elytro	switch (reader.getLocalName()) {                     case "rule": {                         rulesList.add(ruleParseFunction.apply(reader, configurations));                         break;                     }                     default: throw reader.unexpectedElement();	if (reader.getLocalName().equals("rule")) {                     rulesList.add(ruleParseFunction.apply(reader, configurations));                 } else {                     throw reader.unexpectedElement();	Replace Switch with If-Else
213	https://github.com/apache/shardingsphere/pull/26698	3	readability	2023-06-29 13:20:40	Fix sonar issues of Replace this "switch" statement by "if" statements to increase readability.	switch (itemType) {             case BroadcastRuleNodePathProvider.TABLES:                 return new BroadcastTableEventCreator();             default:                 throw new UnsupportedOperationException(itemType);	if (itemType.equals(BroadcastRuleNodePathProvider.TABLES)) {             return new BroadcastTableEventCreator();         }         throw new UnsupportedOperationException(itemType);	Replace Switch with If-Else
214	https://github.com/wildfly-security/wildfly-elytron/pull/1968	1	readability	2023-09-22 22:48:21	Replacing switch statement by if statements to increase readability	switch (name) {             case SecurityVaultData.PICKETBOX_CLASS_NAME: return SecurityVaultData.class;             default: return super.resolveClass(desc);	if (name.equals(SecurityVaultData.PICKETBOX_CLASS_NAME)) {             return SecurityVaultData.class;         } else {             return super.resolveClass(desc);	Replace Switch with If-Else
215	https://github.com/wildfly-security/wildfly-elytron/pull/2015	1	readability	2024-03-08 18:01:48	Changed switch to if-else to increase readability for Elytro	switch (reader.getLocalName()) {                     case "rule": {                         rulesList.add(ruleParseFunction.apply(reader, configurations));                         break;                     }                     default: throw reader.unexpectedElement();	if (reader.getLocalName().equals("rule")) {                     rulesList.add(ruleParseFunction.apply(reader, configurations));                 } else {                     throw reader.unexpectedElement();	Replace Switch with If-Else
216	https://github.com/alibaba/nacos/pull/8022	1	readability	2022-03-30 01:25:11	Improve the code readability of TimerContext replace if with switch case	if (StringUtils.equals(level, LoggerUtils.DEBUG)) {             LoggerUtils.printIfDebugEnabled(logger, "{} cost time : {} ms", name, contextTime);         }         if (StringUtils.equals(level, LoggerUtils.INFO)) {             LoggerUtils.printIfInfoEnabled(logger, "{} cost time : {} ms", name, contextTime);         }         if (StringUtils.equals(level, LoggerUtils.TRACE)) {             LoggerUtils.printIfTraceEnabled(logger, "{} cost time : {} ms", name, contextTime);         }         if (StringUtils.equals(level, LoggerUtils.ERROR)) {             LoggerUtils.printIfErrorEnabled(logger, "{} cost time : {} ms", name, contextTime);         }         if (StringUtils.equals(level, LoggerUtils.WARN)) {             LoggerUtils.printIfWarnEnabled(logger, "{} cost time : {} ms", name, contextTime);         }	switch (level) {             case LoggerUtils.DEBUG:                 LoggerUtils.printIfDebugEnabled(logger, "{} cost time : {} ms", name, contextTime);                 break;             case LoggerUtils.INFO:                 LoggerUtils.printIfInfoEnabled(logger, "{} cost time : {} ms", name, contextTime);                 break;             case LoggerUtils.TRACE:                 LoggerUtils.printIfTraceEnabled(logger, "{} cost time : {} ms", name, contextTime);                 break;             case LoggerUtils.ERROR:                 LoggerUtils.printIfErrorEnabled(logger, "{} cost time : {} ms", name, contextTime);                 break;             case LoggerUtils.WARN:                 LoggerUtils.printIfWarnEnabled(logger, "{} cost time : {} ms", name, contextTime);                 break;             default:                 LoggerUtils.printIfErrorEnabled(logger, "level not found , {} cost time : {} ms", name, contextTime);                 break;         }	Replace If-Else with Switch
217	https://github.com/HouariZegai/Calculator/pull/28	1	readability	2021-01-04 21:41:50	Changing if-else-if ladder to switch statement for better readability	if (opt == '+') {             return x + y;         } else if (opt == '-') {             return x - y;         } else if (opt == '*') {             return x * y;         } else if (opt == '/') {             return x / y;         } else if (opt == '%') {             return x % y;         } else if (opt == '^') {             return Math.pow(x, y);         }	switch (opt){             case '+': return x + y;             case '-': return x - y;             case '*': return x * y;             case '/': return x / y;             case '%': return x % y;             case '^': return Math.pow(x , y);             default:                 inText.setFont(inText.getFont().deriveFont(Font.PLAIN));                 return y;         }	Replace If-Else with Switch
218	https://github.com/apache/geode/pull/2920	3	readability	2018-12-06 01:09:43	Approve ExpectedStrings by way of inspections -- ifs to switch, 	 if (type.equals("junit") || type.equals("java") || type.equals("query")) {	switch (type) {       case "junit":       case "java":       case "query":	Replace If-Else with Switch
219	https://github.com/heremaps/xyz-hub/pull/336	2	readability	2020-10-14 14:48:38	 code readability on viz.starselection	if( event.getSelection() != null && "*".equals( event.getSelection().get(0) ) )        event.setSelection(null); else if( event.getSelection() == null && !bDefaultSelectionHandling )        event.setSelection(Arrays.asList("id","type"));	if( event.getSelection() == null && !bDefaultSelectionHandling && !bSelectionStar )       event.setSelection(Arrays.asList("id","type"));	Unwrap unnecessary else
220	https://github.com/apache/doris/pull/7302	1	readability	2021-12-09 14:35:46	modify the control flow code to improve code readability. We can modify if and else to improve code readability.	if (cmd.hasOption('s') || cmd.hasOption("stat")) {                     BDBToolOptions bdbOpts = new BDBToolOptions(false, dbName, true, "", "", 0);                     return new CommandLineOptions(false, "", bdbOpts);                 } else {                     String fromKey = "";                     String endKey = "";                     int metaVersion = 0;                     if (cmd.hasOption('f') || cmd.hasOption("from")) {                         fromKey = cmd.getOptionValue("from");                         if (Strings.isNullOrEmpty(fromKey)) {                             System.err.println("from key is missing");                             System.exit(-1);                         }                     }                 } }	if (cmd.hasOption('s') || cmd.hasOption("stat")) {           BDBToolOptions bdbOpts = new BDBToolOptions(false, dbName, true, "", "", 0);           return new CommandLineOptions(false, "", bdbOpts); } String fromKey = ""; String endKey = ""; int metaVersion = 0; if (cmd.hasOption('f') || cmd.hasOption("from")) {        fromKey = cmd.getOptionValue("from");        if (Strings.isNullOrEmpty(fromKey)) {        System.err.println("from key is missing");        System.exit(-1); }	Unwrap unnecessary else
221	https://github.com/apache/geode/pull/2920	3	readability	2018-12-06 01:09:43	Unwrap unnecessary else.	Matcher m = ExpectedExceptionPattern.matcher(line);       if (m.find()) {         if (m.group(1).equals("add")) {           expectedExceptions.add(Pattern.compile(m.group(2)));         } else {           // assume add and remove are the only choices           expectedExceptions.remove(Pattern.compile(m.group(2)));         }         return null;       }	Matcher expectedExceptionMatcher = ExpectedExceptionPattern.matcher(line);     if (expectedExceptionMatcher.find()) {       expectedExceptionMatcherHandler(expectedExceptionMatcher);       return null;	Unwrap unnecessary else
222	https://github.com/spring-projects/spring-amqp/pull/2859	12	readability	2024-10-16 13:57:57	Improve condition for more readability some codebase conditions are too complex and we can make it simple for readability purpose.	if (value != null) {       accessor = new DirectFieldAccessor(value); } else if (i == tokens.length - 1) {       return null; } else {       throw new IllegalArgumentException("intermediate property '" + tokens[i] + "' is null"); }	if (value != null) {      accessor = new DirectFieldAccessor(value);      continue;  } if (i == tokens.length - 1) {         return null; } throw new IllegalArgumentException("intermediate property '" + tokens[i] + "' is null");	Unwrap unnecessary else
223	https://github.com/EternalCodeTeam/DiscordOfficer/pull/106	25	readability	2023-08-21 22:40:17	Fix checkstyle issues.	if (add) {        experience.addPoints(points); } else {        experience.removePoints(points); }	if (add) {        experience.addPoints(points); } return this.saveExperience(experience);	Unwrap unnecessary else
224	https://github.com/trinodb/trino/pull/13941	266	readability	2022-09-05 14:20:03	Remove redundant else	else {             return values.getSingleValue();         }	        return values.getSingleValue();	Unwrap unnecessary else
225	https://github.com/civiform/civiform/pull/10198	7	readability	2025-04-03 17:55:08	Move Transactions into try-with-resource	Transaction transaction = database.beginTransaction();     try {	    try (Transaction transaction = database.beginTransaction()) {	Prefer Structured Resource Management
226	https://github.com/aaberg/sql2o/pull/286	1	\N	2018-03-20 11:05:40	converted auto closable resources to use try with resources	 ResultSetIterable<T> iterable = null;         try {             iterable = executeAndFetchLazy(factory);	 try (ResultSetIterable<T> iterable = executeAndFetchLazy(factory)) {	Prefer Structured Resource Management
227	https://github.com/apache/accumulo/pull/1546	12	\N	2020-03-05 16:22:57	Implement the try-with-resources construct available in Java 7+ where applicable.	Scanner scanner = null;           try {             scanner = new Scanner(new File(value), UTF_8);	try (Scanner scanner = new Scanner(new File(value), UTF_8)) {	Prefer Structured Resource Management
228	https://github.com/jenkinsci/docker-workflow-plugin/pull/186	1	readability	2019-10-04 12:32:21	Use try-with-resource in 'Dockerfile#parse()'	 try {             // encoding probably irrelevant since image/tag names must be ASCII             BufferedReader r = new BufferedReader(new InputStreamReader(is, "ISO-8859-1"));	try (InputStream is = dockerfilePath.read();              BufferedReader r = new BufferedReader(new InputStreamReader(is, "ISO-8859-1"))) {	Prefer Structured Resource Management
229	https://github.com/jenkinsci/subversion-plugin/pull/213	12	readability	2018-04-20 08:11:01	use try with resources	InputStream is = zip.openStream();         try {             new FilePath(target).unzipFrom(is);         } finally {             is.close();         }	try (InputStream is = zip.openStream()) {             new FilePath(target).unzipFrom(is); }	Prefer Structured Resource Management
230	https://github.com/apache/hadoop/pull/5309	4	readability	2023-02-04 02:29:20	Use try-resource.	try {       in = fs.open(sourceFile);	 try (FSDataInputStream in = fs.open(sourceFile)) {	Prefer Structured Resource Management
231	https://github.com/apache/pulsar-manager/pull/229	10	readability	2019-12-07 00:37:27	Remove redundant local variables from services' implementation	Page<SubscriptionStatsEntity> subscriptionStatsEntities = subscriptionsStatsMapper.findByTopicStatsId(topicStatsId, timestamp);         return subscriptionStatsEntities;	return subscriptionsStatsMapper.findByTopicStatsId(topicStatsId, timestamp);	Inline redundant return variables
232	https://github.com/codecentric/chaos-monkey-spring-boot/pull/536	5	readability	2025-01-31 14:23:37	use objectmapper in both directions, enhance readability	ObjectMapper mapper = new ObjectMapper();         return mapper.convertValue(this, AssaultPropertiesUpdate.class);	        return new ObjectMapper().convertValue(this, AssaultPropertiesUpdate.class);	Inline redundant return variables
233	https://github.com/wso2/carbon-identity-framework/pull/4782	5	readability	2023-08-02 05:12:02	Improve Readability in Admin Service Clients	String serviceURL = null; serviceURL = builder.append(TenantDataManager.getPropertyValue(Constants.SERVICES_URL)).append	String serviceURL = builder.append(TenantDataManager.getPropertyValue(Constants.SERVICES_URL)).append	Inline redundant return variables
234	https://github.com/runelite/runelite/pull/2714	2	readability	2018-05-19 17:44:21	Simplify setHoveredFriend to allow clearer variable names	target = Text.removeTags(target); String targetNote = getFriendNote(target); if (targetNote != null) {        hoveredFriend = new HoveredFriend(target, targetNote); }	final String note = getFriendNote(displayName); if (note != null) {    hoveredFriend = new HoveredFriend(displayName, note); }	Inline redundant return variables
235	https://github.com/jacoco/jacoco/pull/949	11	readability	2019-09-30 09:24:05	Use ASMs new Iterable API for better readability	AbstractInsnNode i = methodNode.instructions.getFirst(); while (i != null) {     filter(i, output);     i = i.getNext(); }	for (final AbstractInsnNode i : methodNode.instructions) {     filter(i, output); }	Inline redundant return variables
236	https://github.com/crate/crate/pull/5392	4	readability	2017-04-21 15:48:37	This commit removes the querySymbol-extension logic because QueriedDocTableFetchPushDown already handles _score columns itself.	List<Symbol> orderBySymbols = ImmutableList.<Symbol>of(a, x); List<Symbol> outputs = ImmutableList.<Symbol>of(bothFun); FetchRequiredVisitor.Context context = context(orderBySymbols); assertThat(FetchRequiredVisitor.INSTANCE.process(outputs, context), is(false));	List<Symbol> orderBySymbols = ImmutableList.of(a, x); List<Symbol> outputs = ImmutableList.of(bothFun); assertThat(FetchFeasibility.isFetchFeasible(outputs, orderBySymbols), is(false));	Inline redundant return variables
238	https://github.com/civiform/civiform/pull/10198	7	readability	2025-04-03 17:55:08	Replace functional anonymous methods with method references	.map(q -> questionRepository.getQuestionDefinition(q))	        .map(questionRepository::getQuestionDefinition)	Replace Lambda With Method Reference
239	https://github.com/fabric8io/kubernetes-client/pull/3409	1	readability	2021-08-31 05:56:30	replace lambda with a method reference for better readability	 .filter(a -> a.getClassRef().getName().equals("PrinterColumn")).map(a -> a.getParameters()) 	      .filter(a -> a.getClassRef().getName().equals("PrinterColumn")).map(AnnotationRef::getParameters)	Replace Lambda With Method Reference
240	https://github.com/awslabs/aws-java-nio-spi-for-s3/pull/251	6	readability	2023-11-02 18:52:53	Replace one liner lambdas with expression lambdas	.objects().stream().map(objectIdentifier -> objectIdentifier.key()).collect(Collectors.toList());	.objects().stream().map(ObjectIdentifier::key).collect(Collectors.toList());	Replace Lambda With Method Reference
241	https://github.com/apache/uniffle/pull/488	9	readability	2023-01-16 08:45:03	Improve readability by replacing lambda with method reference	 (Function<String, Boolean>) tid -> markFailedTask(tid));	(Function<String, Boolean>) this::markFailedTask);	Replace Lambda With Method Reference
242	https://github.com/magefree/mage/pull/9574	3	readable	2022-09-26 13:48:14	It simply flattens the functions, simplifies them when possible, and reorders them to group similar pieces (e.g. all of the inner classes, or all of the static methods) together.	 if (this.cardWidth != other.cardWidth) {                 return false;             }             if (this.cardHeight != other.cardHeight) {                 return false;             }             if (this.cardXOffset != other.cardXOffset) {                 return false;             }             if (this.cardYOffset != other.cardYOffset) {                 return false;             }             if (this.hasImage != other.hasImage) {                 return false;             }             if (this.isSelected != other.isSelected) {                 return false;             }             if (this.isChoosable != other.isChoosable) {                 return false;             }             if (this.isPlayable != other.isPlayable) {                 return false;             }             if (this.canAttack != other.canAttack) {                 return false;             }             return this.canBlock == other.canBlock;	            return Objects.equals(this.border, that.border)                     && this.width == that.width                     && this.height == that.height                     && this.cardWidth == that.cardWidth                     && this.cardHeight == that.cardHeight                     && this.cardXOffset == that.cardXOffset                     && this.cardYOffset == that.cardYOffset                     && this.hasImage == that.hasImage                     && this.isSelected == that.isSelected                     && this.isChoosable == that.isChoosable                     && this.isPlayable == that.isPlayable                     && this.canAttack == that.canAttack                     && this.canBlock == that.canBlock;	Collapse Boolean Return
243	https://github.com/RPTools/maptool/pull/2141	58	clean up	2020-08-03 12:23:39	redundant 'if' statements	if (StringUtil.isEmpty(val.toString())) {       return false;     }      return true;	 return !StringUtil.isEmpty(val.toString());	Collapse Boolean Return
244	https://github.com/apache/geode/pull/2920	3	readability	2018-12-06 01:09:43	collapse simple bool return.	if (type.equals("junit") || type.equals("java") || type.equals("query")         || type.equals("dunit")) {       return true;     } else {       return false;     }	return type.equals("junit") || type.equals("java") || type.equals("query")         || type.equals("dunit");	Collapse Boolean Return
245	https://github.com/DataLinkDC/dinky/pull/1155	12	readability	2022-10-28 05:15:36	Asserts.java simple and format.	if (isNull(str1) && isNull(str2)) {             return true;         } else if (isNull(str1) || isNull(str2)) {             return false;         } else {             return str1.equalsIgnoreCase(str2);         }	return (str1 == null && str2 == null) || (str1 != null && str1.equalsIgnoreCase(str2));	Collapse Boolean Return
246	https://github.com/awslabs/aws-java-nio-spi-for-s3/pull/251	6	readability	2023-11-02 18:52:53	Unnecessary types	return new DirectoryStream<Path>() {	 return new DirectoryStream<>() {	Favour Diamond Operators
247	https://github.com/jenkinsci/jenkins/pull/4845	12	readability	2020-07-17 14:14:47	Diamond operator	List<String> r = new ArrayList<String>();	        List<String> r = new ArrayList<>();	Favour Diamond Operators
248	https://github.com/jenkinsci/subversion-plugin/pull/213	12	readability	2018-04-20 08:11:01	removed redundant Typedefinition	is((SortedSet) new TreeSet<String>(Arrays.asList("trunk"))));	is((SortedSet) new TreeSet<>(Arrays.asList("trunk"))));	Favour Diamond Operators
249	https://github.com/mockito/mockito/pull/1231	1	readability	2019-01-18 18:44:48	Replace string concatination inside an append call with a chained append calls to make the code a tad easier to read	sb.append("[Mockito] Unused stubbings of: " + mock).append("\n");	sb.append("[Mockito] Unused stubbings of: ").append(mock).append("\n");	Improve String Formatting
250	https://github.com/opensearch-project/flow-framework/pull/943	25	readability	2024-11-11 18:54:50	I have replaced string concatenation with Log4j ParameterizedMessage in 40 files.	 String errorMessage = "Workflow validation failed for template " + templateWithUser.name();	String errorMessage = ParameterizedMessageFactory.INSTANCE.newMessage(                     "Workflow validation failed for template {}",                     templateWithUser.name()                 ).getFormattedMessage();	Improve String Formatting
251	https://github.com/oracle/tribuo/pull/336	8	readability	2023-04-28 16:00:32	Remove null check as instanceof handles null case	if (o == null || !(o instanceof ClusteringInfo)) return false;	        if (!(o instanceof ClusteringInfo)) return false;	Remove Unused Method/ chunk of code
252	https://github.com/RPTools/maptool/pull/2141	58	clean up	2020-08-03 12:23:39	pointless boolean expressions eliminated	if (ok == true) {	          if (ok) {	Remove Unused Method/ chunk of code
253	https://github.com/apache/pulsar/pull/4683	4	readability	2019-07-08 16:16:06	Add static import statements for Assert to improve the readability of the tests	Assert.assertEquals(new HashSet<>(schemas), new HashSet<>(Arrays.asList(expectedSchemas)));	 assertEquals(new HashSet<>(schemas), new HashSet<>(Arrays.asList(expectedSchemas)));	Simplify Import Statements
254	https://github.com/apache/pulsar/pull/4799	134	readability	2019-07-25 16:14:03	Remove Assert. in the tests to improve readability. Simplified assert statements in the tests. Switch to usage of static imports in tests.	 Assert.assertTrue(ServiceConfiguration.class.isInstance(returnValue));	import static org.testng.Assert.assertTrue; assertTrue(returnValue instanceof ServiceConfiguration);	Simplify Import Statements
255	https://github.com/apache/hadoop/pull/5309	4	readability	2023-02-04 02:29:20	Remove YarnException and IOException, because they are all subclasses of Throwable.	} catch (IOException e) {           return onExceptionRaised(container, event, e);         } catch (Throwable t) {           return onExceptionRaised(container, event, t);	} catch (Throwable e) {	Remove unnecessary Throws
256	https://github.com/JanusGraph/janusgraph/pull/4759	1	readability	2025-02-16 12:49:31	Replaces manual exception handling with the testing framework's built-in features (e.g., assertThrows), improving readability, 	        try {             l1.registerReader(ReadMarker.fromIdentifierOrNow("other"));             fail();         } catch (IllegalArgumentException ignored) {}         try {             l1.registerReader(ReadMarker.fromTime(Instant.now().minusMillis(100)));             fail();         } catch (IllegalArgumentException ignored) {}	assertThrows(IllegalArgumentException.class, () -> l1.registerReader(ReadMarker.fromIdentifierOrNow("other"))); assertThrows(IllegalArgumentException.class, () -> l1.registerReader(ReadMarker.fromTime(Instant.now().minusMillis(100))));	Prefer Built-in Methods
257	https://github.com/rstudio/rstudio/pull/1529	3	readability	2017-09-26 23:52:28	remove unnecessary braces	Scheduler.get().scheduleDeferred(() -> { suppressAutoFocus_ = false; });	Scheduler.get().scheduleDeferred(() -> suppressAutoFocus_ = false);	Inline Lambda Block
258	https://github.com/iluwatar/java-design-patterns/pull/2108	1	easier to read	2022-10-22 17:38:49	This PR adds lombok to the step-builder pattern, making the code cleaner and easier to read/maintain	@Getter @Setter		Refactor to Lombok
259	https://github.com/JakeWharton/timber/pull/304	1	readability	2018-03-08 18:53:08	Replaced for loops with for each for better code readability.	for (int i = 0, count = forest.length; i < count; i++) {         forest[i].v(message, args);	for (Tree tree : forest){        tree.v(message, args);	Replace for loop or iterator with for-each
260	https://github.com/iluwatar/java-design-patterns/pull/1475	9	\N	2020-08-05 14:59:52	Its better to use enums instead of switch	switch (currentWeather) {       case COLD:         LOGGER.info("The orcs are freezing cold.");         break;       case RAINY:         LOGGER.info("The orcs are dripping wet.");         break;       case SUNNY:         LOGGER.info("The sun hurts the orcs' eyes.");         break;       case WINDY:         LOGGER.info("The orc smell almost vanishes in the wind.");         break;       default:         break;     }	LOGGER.info("The orcs are facing " + currentWeather.getDescription() + " weather now");	Remove Duplicate Code
261	https://github.com/netty/netty/pull/8732	1	readability	2019-01-18 18:44:48	Extract duplicate code			Remove Duplicate Code
262	https://github.com/jenkinsci/plugin-installation-manager-tool/pull/126	1	readability	2020-07-10 14:14:59	Extract method "assertConfigHasPlugins"	assertEquals(requestedPlugins.size(), cfg.getPlugins().size());          List<String> cfgPluginInfo = new ArrayList<>();         List<String> requestedPluginInfo = new ArrayList<>();          for (Plugin p : cfg.getPlugins()) {             cfgPluginInfo.add(p.toString());         }         for (Plugin p : requestedPlugins) {             requestedPluginInfo.add(p.toString());         }          Collections.sort(cfgPluginInfo);         Collections.sort(requestedPluginInfo);          assertEquals(requestedPluginInfo, cfgPluginInfo);  assertEquals(requestedPlugins.size(), cfg.getPlugins().size());          List<String> cfgPluginInfo = new ArrayList<>();         List<String> requestedPluginInfo = new ArrayList<>();          for (Plugin p : cfg.getPlugins()) {             cfgPluginInfo.add(p.toString());         }         for (Plugin p : requestedPlugins) {             requestedPluginInfo.add(p.toString());         }          Collections.sort(cfgPluginInfo);         Collections.sort(requestedPluginInfo);          assertEquals(requestedPluginInfo, cfgPluginInfo);	assertConfigHasPlugins(cfg, requestedPlugins);	Remove Duplicate Code
263	https://github.com/netty/netty/pull/8720	1	readability	2019-01-16 09:56:08	cleanup: extract duplicate code 	if (oldState == ST_NOT_STARTED) {             try {                 doStartThread();             } catch (Throwable cause) {                 STATE_UPDATER.set(this, ST_TERMINATED);                 terminationFuture.tryFailure(cause);                  if (!(cause instanceof Exception)) {                     // Also rethrow as it may be an OOME for example                     PlatformDependent.throwException(cause);                 }                 return terminationFuture;             }	if (ensureThreadStarted(oldState)) {             return terminationFuture;	Remove Duplicate Code
264	https://github.com/graphhopper/graphhopper/pull/1219	12	easier to read	2017-11-17 06:50:02	This PR removes the duplicated point at ViaInstructions. 			Remove Duplicate Code
265	https://github.com/HubSpot/jinjava/pull/528	1	easier to read	2020-11-10 22:03:53	Also, many of the values in that constructor are the default values in the Builder class so they can be omitted, which removes a fair bit of duplicate code.			Remove Duplicate Code
266	https://github.com/RPTools/maptool/pull/2141	58	clean up	2020-08-03 12:23:39	hoisted common expressions out of if/else blocks	if (propList.length() == 0) {      propList.append(decoded); } else {      propList.append(" ; ");      propList.append(decoded); }	if (propList.length() != 0) {     propList.append("" ; "");     propList.append(decoded); }	Unwrap unnecessary else
267	https://github.com/apache/accumulo/pull/1271	1	easier to read	2019-07-16 19:01:08	Refactor Compression.java in order to remove duplicate code and restructure the class to make it easier to read overall.			Remove Duplicate Code
268	https://github.com/netty/netty/pull/9538	1	clarity	2019-09-05 07:12:17	Reduce verbosity and more idiomatic use of keyword.	synchronized (this) {                     remove0(ctx);                 } synchronized (this) {                     remove0(ctx);                 } synchronized (this) {                     remove0(ctx);                 } synchronized (this) {                     remove0(ctx);                 }	atomicRemoveFromHandlerList(ctx); private synchronized void atomicRemoveFromHandlerList(AbstractChannelHandlerContext ctx) {         AbstractChannelHandlerContext prev = ctx.prev;         AbstractChannelHandlerContext next = ctx.next;         prev.next = next; } 	Remove Duplicate Code
269	https://github.com/mars-sim/mars-sim/pull/1404	1	readability	2024-09-07 10:14:56	PR refactors duplicate code 			Remove Duplicate Code
270	https://github.com/trinodb/trino/pull/371	3	readability	2019-03-05 11:04:19	merge `testInvalidQueryTypeConfiguration`, `testNonExistentGroup` with    other `testInvalid` test cases			Remove Duplicate Code
271	https://github.com/getodk/javarosa/pull/347	2	readability	2018-07-25 21:33:00	Improve readability and remove duplication in ItemsetBinding.initReferences			Remove Duplicate Code
272	https://github.com/apache/gravitino/pull/4335	1	readability	2024-08-05 07:44:48	Improved removed loop code. Readability and no unnecessary repetition compared to existing code	for (int level = 0; level < namespace.levels().length; level++) {       String name = namespace.level(level);       switch (level) {         case 0:           parentEntityId = MetalakeMetaService.getInstance().getMetalakeIdByName(name);           continue;         case 1:           parentEntityId =               CatalogMetaService.getInstance()                   .getCatalogIdByMetalakeIdAndName(parentEntityId, name);           continue;         case 2:           parentEntityId =               SchemaMetaService.getInstance().getSchemaIdByCatalogIdAndName(parentEntityId, name);           break;       }	if (namespace.levels().length >= 1) {       parentEntityId = MetalakeMetaService.getInstance().getMetalakeIdByName(namespace.level(0));     }      if (namespace.levels().length >= 2) {       parentEntityId =           CatalogMetaService.getInstance()               .getCatalogIdByMetalakeIdAndName(parentEntityId, namespace.level(1));     }      if (namespace.levels().length >= 3) {       parentEntityId =           SchemaMetaService.getInstance()               .getSchemaIdByCatalogIdAndName(parentEntityId, namespace.level(2));	Reduce Conditional Nesting
273	https://github.com/SweetRazory/WaystonesPlus/pull/9	16	readability	2023-07-06 05:45:06	Unnecessary blank lines through files are removed along with extraneous comment lines	//    public Location getLocation() { //        return location; //    }		Remove Commented Code
274	https://github.com/idempiere/idempiere/pull/2517	51	readability	2024-11-06 11:28:57	Remove commented code.	// .append(" WHERE t.IsActive='Y'") // R/O		Remove Commented Code
275	https://github.com/idempiere/idempiere/pull/2283	498	readability	2024-04-02 21:04:16	Remove commented code.	else // From Sales Rep of Document -> Sales Region		Remove Commented Code
276	https://github.com/idempiere/idempiere/pull/2179	373	readability	2024-01-10 11:58:51	Remove commented code.	// System.out.println("getLogData - " + events.length);		Remove Commented Code
277	https://github.com/idempiere/idempiere/pull/2129	743	readability	2023-12-08 12:02:49	Remove commented code.			Remove Commented Code
278	https://github.com/idempiere/idempiere/pull/1984	197	readability	2023-08-29 09:40:20	Remove commented code.			Remove Commented Code
279	https://github.com/idempiere/idempiere/pull/1819	38	readability	2023-05-03 11:54:00	Remove commented code.			Remove Commented Code
280	https://github.com/idempiere/idempiere/pull/1774	27	readability	2023-04-11 11:35:39	Remove commented code.			Remove Commented Code
281	https://github.com/idempiere/idempiere/pull/1666	53	readability	2023-02-09 13:39:59	Remove commented code.			Remove Commented Code
282	https://github.com/idempiere/idempiere/pull/1675	22	readability	2023-02-15 11:33:19	Remove commented code.			Remove Commented Code
283	https://github.com/idempiere/idempiere/pull/1690	51	readability	2023-02-27 13:23:20	Remove commented code.			Remove Commented Code
284	https://github.com/idempiere/idempiere/pull/1755	119	readability	2023-03-28 17:36:32	Remove commented code.			Remove Commented Code
285	https://github.com/idempiere/idempiere/pull/1774	27	readability	2023-04-11 11:35:39	Remove commented code.			Remove Commented Code
286	https://github.com/apache/rocketmq/pull/9202	1	readability	2025-02-24 00:44:36	Cleanup improves code readability and maintainability	//                if( convertStringExpressions ) { //                    ComparisonExpression.CONVERT_STRING_EXPRESSIONS.remove(); //                }		Remove Commented Code
287	https://github.com/apache/pulsar/pull/4799	134	readability	2019-07-25 16:14:03	Cleanup unused imports	import org.apache.bookkeeper.mledger.ManagedLedger; import org.apache.bookkeeper.mledger.ManagedLedgerFactory;		Remove Unused Imports
288	https://github.com/MovingBlocks/Terasology/pull/4867	7	readability	2021-10-30 22:54:57	Remove Unused Imports	import org.terasology.engine.config.RenderingConfig;		Remove Unused Imports
289	https://github.com/microsoft/typespec/pull/6497	13	readability	2025-03-21 04:55:47	removing static import in ProxyMethodParameterProcessor	import static com.microsoft.typespec.http.client.generator.core.mapper.CollectionUtil.toImmutableList;  ClientMapper.getClientResponseClassType(operation, ClientModels.getInstance().getModels(), settings);		Remove Unused Imports
290	https://github.com/DataLinkDC/dinky/pull/1155	12	readability	2022-10-28 05:15:36	chore: remove unused import	import cn.hutool.core.util.StrUtil;		Remove Unused Imports
291	https://github.com/TheAlgorithms/Java/pull/5526	2	readability	2024-10-05 09:47:53	Remove unused import	import java.util.Scanner;		Remove Unused Imports
292	https://github.com/netty/netty/pull/8732	1	readability	2019-01-18 18:44:48	remove unnecessary throws	 protected Map<Class<?>, String> initialValue() throws Exception {	protected Map<Class<?>, String> initialValue() {	Remove unnecessary Throws
293	https://github.com/RPTools/maptool/pull/2141	58	clean up	2020-08-03 12:23:39	useless throws declarations 	public BackupManager(File backupDir, long maxBackupSize) throws IOException {	public BackupManager(File backupDir, long maxBackupSize) {	Remove unnecessary Throws
294	https://github.com/apache/rocketmq/pull/4279	1	readability	2022-05-19 06:29:11	Remove redundant exception to improve readability	public void resetOffsetByTimeStamp(long timeStamp)         throws RemotingException, MQBrokerException, InterruptedException, MQClientException {		Remove unnecessary Throws
295	https://github.com/awslabs/aws-java-nio-spi-for-s3/pull/251	6	readability	2023-11-02 18:52:53	Declared exceptions that are not thrown	public void checkAccessWhenAccessDenied() throws Exception {		Remove unnecessary Throws
296	https://github.com/apache/rocketmq/pull/9202	1	readability	2025-02-24 00:44:36	fix: cleanup dead code patterns. Unreachable throw statements clutter code and may cause static analysis warnings	throw new Error("Missing return statement in function");	 return left;	Remove unnecessary Throws
297	https://github.com/apache/pulsar/pull/10344	38	readability	2021-04-25 21:58:41	It's better to avoid specifying the time limit and rely on the default value that is 10 seconds.	 Awaitility.await().atMost(3, TimeUnit.SECONDS).until(() ->	Awaitility.await().until(() ->	Remove Useless Parameter
298	https://github.com/apache/hive/pull/2114	6	readability	2021-03-25 11:10:07	The ReadEntity, and WriteEntity parameters in TaskCompiler#optimizeOperatorPlan are passed in this method and various subsequent ones but they are never actually used so they can be removed.	protected void optimizeOperatorPlan(ParseContext pCtx, Set<ReadEntity> inputs,       Set<WriteEntity> outputs) throws SemanticException {	protected void optimizeOperatorPlan(ParseContext pCtx) throws SemanticException {	Remove Useless Parameter
299	https://github.com/MovingBlocks/Terasology/pull/4132	8	readability	2020-08-29 07:29:27	remove unused constructor parameter	ChunkCache chunkCache, RelevanceSystem relevanceSystem) {	ChunkCache chunkCache) {	Remove Useless Parameter
300	https://github.com/apache/lucene/pull/13532	1	readability	2024-07-12 08:49:32	* remove unnecessary readFields parameter   	readFields(meta, state.fieldInfos);	        readFields(meta);	Remove Useless Parameter
301	https://github.com/apache/hive/pull/2206	2	readability	2021-04-26 14:48:52	Refactor HiveProject removing unused fields	private final List<Integer>        virtualCols;		Remove Unused Field or Variable
302	https://github.com/iluwatar/java-design-patterns/pull/1811	2	readability	2021-09-07 18:43:47	Introducing a new static flag to prevent instantiation via reflection is unnecessary. 	private static boolean flag = true;		Remove Unused Field or Variable
303	https://github.com/strimzi/strimzi-kafka-operator/pull/11343	1	readability	2025-04-14 10:48:58	removes some variables that are only used once, again to improve readability.			Remove Unused Field or Variable
304	https://github.com/TheAlgorithms/Java/pull/5523	2	readability	2024-10-05 12:43:42	remove main method	public static void main(String[] args) {         String str1 = "DSGSHSRGSRHTRD";         String str2 = "DATRGAGTSHS";         String lcs = getLCS(str1, str2);          // Print LCS         if (lcs != null) {             System.out.println("String 1: " + str1);             System.out.println("String 2: " + str2);             System.out.println("LCS: " + lcs);             System.out.println("LCS length: " + lcs.length());         }		Remove Unused Method/ chunk of code
305	https://github.com/apache/geode/pull/2920	3	readability	2018-12-06 01:09:43	Remove now-unused method.			Remove Unused Method/ chunk of code
306	https://github.com/elastic/elasticsearch/pull/71620	4	readability	2021-04-13 13:07:20	Removing unused and incorrectly documented constructor from SnapshotDeletionsInProgress	 /**      * Returns a new instance of {@link SnapshotDeletionsInProgress} with the given      * {@link Entry} added.      */     public static SnapshotDeletionsInProgress newInstance(Entry entry) {         return new SnapshotDeletionsInProgress(Collections.singletonList(entry));     }		Remove Unused Method/ chunk of code
307	     if (this.lock == null || this.lock.getState() != LockState.ACQUIRED) {         LockResponse lockResponse = this.hiveClient.checkLock(lockRequest.getTxnid());         if (lockResponse.getState() == LockState.ACQUIRED) {           this.lock = lockResponse;         } else {           throw e;         }     }	7	readability	2025-04-03 17:55:08	Remote unneeded try	try { shane-exygy marked this conversation as resolved.         if (existingDraft.isPresent()) {           QuestionModel updatedDraft =               new QuestionModel(                   new QuestionDefinitionBuilder(definition).setId(existingDraft.get().id).build());           this.updateQuestionSync(updatedDraft);           transaction.commit();           return updatedDraft;         }	if (existingDraft.isPresent()) {         QuestionModel updatedDraft =             new QuestionModel(                 new QuestionDefinitionBuilder(definition).setId(existingDraft.get().id).build());         this.updateQuestionSync(updatedDraft);	Remove Unused Try/Catch
308	https://github.com/Azure/azure-sdk-for-java/pull/35796	6	readability	2023-07-11 14:12:06	removing unnecessary method calls indirections and resulting unused methods	void setSessionState(String sessionId, byte[] sessionState) {         asyncClient.setSessionState(sessionId, sessionState).block(operationTimeout);     }      byte[] getSessionState(String sessionId) {         return asyncClient.getSessionState(sessionId).block(operationTimeout);     }		Remove Unused Method/ chunk of code
309	https://github.com/testng-team/testng/pull/1861	1	readability	2018-07-13 03:55:09	Also removed getEnclosingClass() which is now  available in JDK itself. 	  /** Class.getEnclosingClass() only exists on JDK5, so reimplementing it here. */   private static Class<?> getEnclosingClass(Class<?> declaringClass) {     Class<?> result = null;		Remove Unused Method/ chunk of code
310	https://github.com/strimzi/strimzi-kafka-operator/pull/11343	1	readability	2025-04-14 10:48:58	removes the checks that compare the Ca truststore file as a whole. These checks are only passing because in the Ca class in some cases we reuse the data directly, rather than instantiating a new hashmap. The tests don't need to check the whether it is the exact same file, and in testExpiredCertsGetRemovedAuto we actually wouldn't expect the file to be the same. Since there are already checks that the correct cert is present in the truststore, the asserts that compare the whole file can be removed.	assertThat(initialClusterCaCertSecret.getData().keySet(), is(Set.of(CA_CRT, CA_STORE, CA_STORE_PASSWORD)));         assertThat(initialClusterCaCertSecret.getData().get(CA_CRT), is(notNullValue()));         assertThat(initialClusterCaCertSecret.getData().get(CA_STORE), is(notNullValue()));         assertThat(initialClusterCaCertSecret.getData().get(CA_STORE_PASSWORD), is(notNullValue()));	 assertCertDataNotNull(initialClusterCaCertSecret.getData());  private void assertCertDataNotNull(Map<String, String> certData) {         assertThat(certData.keySet(), is(Set.of(CA_CRT, CA_STORE, CA_STORE_PASSWORD)));         assertThat(certData.get(CA_CRT), is(notNullValue()));         assertThat(certData.get(CA_STORE), is(notNullValue()));         assertThat(certData.get(CA_STORE_PASSWORD), is(notNullValue()));     }	Extract method from large function
311	https://github.com/apache/hive/pull/2206	2	readability	2021-04-26 14:48:52	Refactor HiveProject removing unused methods 	 public List<Integer> getVirtualCols() {     return virtualCols;   } 		Remove Unused Method/ chunk of code
312	https://github.com/apache/accumulo/pull/793	5	readability	2018-12-12 22:57:50	Removed unused methods and overloaded write methods	public void resetLoggers() throws IOException {		Remove Unused Method/ chunk of code
313	https://github.com/gradle/gradle/pull/22047	21	\N	2022-09-20 11:13:50	Remove some unnecessary methods	@Override             Optional<Duration> getTimeout() {                 throw new UnsupportedOperationException()             }		Remove Unused Method/ chunk of code
314	https://github.com/MovingBlocks/Terasology/pull/4867/				remove SubmersibleCamera abstraction	public boolean isUnderWater() {         // TODO: Making this as a subscribable value especially for node "ChunksRefractiveReflectiveNode",         // TODO: glDisable and glEnable state changes on that node will be dynamically added/removed based on this value.         Vector3f cameraPosition = new Vector3f(this.getPosition());          // Compensate for waves         if (renderingConfig.isAnimateWater()) {             cameraPosition.y -= RenderHelper.evaluateOceanHeightAtPosition(cameraPosition, worldProvider.getTime().getDays());         }          if (worldProvider.isBlockRelevant(cameraPosition)) {             return worldProvider.getBlock(cameraPosition).isLiquid();         }         return false;     }		Remove Unused Method/ chunk of code
315	https://github.com/gdg-x/frisbee/pull/681	1	readability	2016-10-05 20:49:26	Remove redundant null checks.	 private Intent parseDeepLinkId(String deepLinkId) {         if (deepLinkId == null) {             return null;         } String[] parts = deepLinkId.split("/"); }	private Intent parseDeepLinkId(@NonNull String deepLinkId) { String[] parts = deepLinkId.split("/"); }	Replace Null-check with Annotation
316	https://github.com/apache/hudi/pull/3037	1	readability	2021-06-05 11:40:46	Optimize logic to improve code readability	if (this.lock != null && this.lock.getState() == LockState.ACQUIRED) {     return; } else if (lockRequest != null) {     LockResponse lockResponse = this.hiveClient.checkLock(lockRequest.getTxnid());     if (lockResponse.getState() == LockState.ACQUIRED) {          this.lock = lockResponse;          return;     } else {          throw e;     } } else {     throw e; } 	if (this.lock == null || this.lock.getState() != LockState.ACQUIRED) {     LockResponse lockResponse = this.hiveClient.checkLock(lockRequest.getTxnid());     if (lockResponse.getState() == LockState.ACQUIRED) {         this.lock = lockResponse;     } else {         throw e;     } }	Reduce Conditional Nesting
317	https://github.com/eclipse-jkube/jkube/pull/2547	1	readability	2024-01-23 09:42:56	Removed continue statements	private String findTagSha(OpenShiftClient client, String imageStreamName, String namespace) {         ImageStream currentImageStream = null;          for (int i = 0; i < imageStreamTagRetries; i++) {             if (i > 0) {                 log.info("Retrying to find tag on ImageStream %s", imageStreamName);                 try {                     Thread.sleep(imageStreamTagRetryTimeoutInMillis);                 } catch (InterruptedException e) {                     log.debug("interrupted", e);                     Thread.currentThread().interrupt();                 }             }             currentImageStream = client.imageStreams().inNamespace(namespace).withName(imageStreamName).get();             if (currentImageStream == null) {                 continue;             }             ImageStreamStatus status = currentImageStream.getStatus();             if (status == null) {                 continue;             }             List<NamedTagEventList> tags = status.getTags();             if (tags == null || tags.isEmpty()) {                 continue;             }       } }	private String findTagSha(OpenShiftClient client, String imageStreamName, String namespace) {         ImageStream currentImageStream = null;          for (int i = 0; i < imageStreamTagRetries; i++) {             if (i > 0) {                 log.info("Retrying to find tag on ImageStream %s", imageStreamName); sleepThread(); }	Remove Unused Method/ chunk of code
318	https://github.com/apache/rocketmq/pull/9202	1	readability	2025-02-24 00:44:36	if (true) return patterns are redundant and misleading	final public PropertyExpression variable() throws ParseException {         Token t;         PropertyExpression left = null;         t = jj_consume_token(ID);         left = new PropertyExpression(t.image);         {             if (true) return left;         }         throw new Error("Missing return statement in function");	final public PropertyExpression variable() throws ParseException {         Token t;         PropertyExpression left = null;         t = jj_consume_token(ID);         left = new PropertyExpression(t.image);         return left;	Collapse Boolean Return
319	https://github.com/eXist-db/exist/pull/5256	1	readability	2024-03-21 20:02:34	remove this. where possible	this.attributeName = elem.getAttribute("attribute");	attributeName = elem.getAttribute("attribute");	Remove unnecessary annotation or modifier
320	https://github.com/apache/pinot/pull/3152				Keep only @nullable annotation for readability	public BrokerResponse handleRequest(@Nonnull JSONObject request, @Nullable RequesterIdentity requesterIdentity)	public BrokerResponse handleRequest(JSONObject request, @Nullable RequesterIdentity requesterIdentity)	Remove unnecessary annotation or modifier
321	https://github.com/apache/hudi/pull/2459	1	readability	2021-01-22 05:47:15	Improve code readability,remove the continue keyword	if (totalSizeOfFilesPresent <= totalSizeToRead) {         endOffset++;         continue;       } else { return Pair.of(startOffset, endOffset);       }	if (totalSizeOfFilesPresent <= totalSizeToRead) {         endOffset++;       } else { return Pair.of(startOffset, endOffset);       }	Remove unnecessary annotation or modifier
322	https://github.com/eclipse-jkube/jkube/pull/2547	1	readability	2024-01-23 09:42:56	Removed goto statement	TAG_EVENT_LIST:             for (NamedTagEventList list : tags) {                 List<TagEvent> items = list.getItems();                 if (items == null || items.isEmpty()) {                     continue TAG_EVENT_LIST;                  }             } 	 if (latestTag != null && StringUtils.isNotBlank(latestTag.getImage())) {                     String image = latestTag.getImage();                     log.info("Found tag on ImageStream " + imageStreamName + " tag: " + image);                     return image;                 }	Remove unnecessary annotation or modifier
323	https://github.com/mockito/mockito/pull/907	7	readability	2017-01-27 21:58:30	This PR unifies the functionality of NonGreedyNumberOfInvocationsChecker, NumberOfInvocationsCheckerInOrder and NumberOfInvocationsChecker in static methods of the type NumberOfInvocationsChecker.			Extract method from large function
324	https://github.com/apache/pinot/pull/7294	2	clean up	2021-08-19 22:03:44	Break down large method to smaller ones to be more readable and reduce the scope of variables with similar names.			Extract method from large function
325	https://github.com/jenkinsci/remoting/pull/378	1	readability	2020-04-21 16:11:54	This makes it easier to isolate the different operations and see what is going on.			Extract method from large function
326	https://github.com/elastic/elasticsearch/pull/65360	1	readability	2020-11-23 13:37:45	A method extraction that improves readability of AutodetectProcessManager.openJob ever so slightly.			Extract method from large function
327	https://github.com/elastic/elasticsearch/pull/42500	1	readability	2019-05-24 13:27:11	Mostly readability changes and reduction of some method sizes.			Extract method from large function
329	https://github.com/checkstyle/checkstyle/pull/8984	4	\N	2020-11-17 18:55:49	EmptyLineSeparator for multiple single type variables on line	 return astType == TokenTypes.STATIC_INIT                 || astType == TokenTypes.INSTANCE_INIT                 || astType == TokenTypes.METHOD_DEF                 || astType == TokenTypes.CTOR_DEF                 || astType == TokenTypes.COMPACT_CTOR_DEF;	return TokenUtil.isOfType(astType,             TokenTypes.STATIC_INIT, TokenTypes.INSTANCE_INIT, TokenTypes.METHOD_DEF,             TokenTypes.CTOR_DEF, TokenTypes.COMPACT_CTOR_DEF);	Prefer Built-in Methods
330	https://github.com/jenkinsci/plugin-installation-manager-tool/pull/147	1	readability	2020-07-25 06:40:27	Extract methods for creating JSON objects 			Extract method from large function
331	https://github.com/apache/geode/pull/7124	5	\N	2022-01-11 23:53:57	Extracting a method to make things more readable			Extract method from large function
332	https://github.com/apache/pulsar/pull/14617	1	readability	2022-03-10 16:48:38	refactor code in ManagedCursorImpl to get rid of 4 FastThreadLocal variables    - it is hard to understand the code and it's not optimal      since it will do object allocations for Long instances stored in the FastThreadLocal       variables.    - there's less overhead in having a simple private class to hold the      fields required for the state    - ordinary local variables cannot be used since .forEach accepts a lambda      and local variables cannot be mutated in a lambda	private static final FastThreadLocal<Long> tempTotalEntriesToSkip = new FastThreadLocal<>(); private static final FastThreadLocal<Long> tempDeletedMessages = new FastThreadLocal<>(); private static final FastThreadLocal<PositionImpl> tempStartPosition = new FastThreadLocal<>(); private static final FastThreadLocal<PositionImpl> tempEndPosition = new FastThreadLocal<>();	private static class InvidualDeletedMessagesHandlingState {         long totalEntriesToSkip = 0L;         long deletedMessages = 0L;         PositionImpl startPosition;         PositionImpl endPosition;          InvidualDeletedMessagesHandlingState(PositionImpl startPosition) {             this.startPosition = startPosition;         }     }	Move logic to another file
333	https://github.com/eclipse-jnosql/jnosql/pull/425	1	readability	2023-08-19 01:15:23	Separating responsibilities to improve readability and maintainability	EntityMetadata entityMetadata = converter.apply(entity);                 if (entityMetadata.hasEntityName()) {                     mappings.put(entityMetadata.name(), entityMetadata);                 }                 classes.put(entity, entityMetadata);	private void processEmbeddables(ClassScanner scanner) {         for (Class<?> embeddable : scanner.embeddables()) {             EntityMetadata entityMetadata = convertToEntityMetadata(embeddable);             classes.put(embeddable, entityMetadata);         }     }	Extract method from large function
334	https://github.com/hyperledger/besu/pull/6199	1	readability	2023-11-22 04:42:04	just breaks the code into smaller pieces	if (blockCount < 1 || blockCount > 1024) {	    if (isInvalidBlockCount(blockCount)) {	Extract method from large function
335	https://github.com/hapifhir/hapi-fhir/pull/2960	2	readability	2021-09-06 19:00:32	extract some methods for readability			Extract method from large function
336	https://github.com/jhipster/jhipster-online/pull/358	1	readability	2023-08-24 14:35:13	extract additional private methods to improve readability and reduce method length			Extract method from large function
337	https://github.com/apache/kafka/pull/18017	2	readability	2024-12-09 15:25:33	Small changes related to increase code readability by extracting some code blocks into separate methods			Extract method from large function
338	https://github.com/hyperledger/besu/pull/6775	2	readability	2024-03-25 04:45:19	Simple series of Extract Method operations.			Extract method from large function
339	https://github.com/sermant-io/Sermant/pull/1673	12	readability	2024-11-22 08:27:51	Some parts of the code have issues with logic consistency and readability	 Class<? extends BaseConfig> pluginConfigCls = config.getClass();             String pluginConfigKey = ConfigKeyUtil.getTypeKeyWithClassloader(ConfigKeyUtil.getTypeKey(pluginConfigCls),                     pluginConfigCls.getClassLoader());             final BaseConfig retainedConfig = PLUGIN_CONFIG_MAP.get(pluginConfigKey);             if (pluginConfigFile.isFile()) {                 if (retainedConfig == null) {                     PLUGIN_CONFIG_MAP.put(pluginConfigKey,                             ConfigManager.doLoad(pluginConfigFile, config, plugin.isDynamic()));                     plugin.getConfigs().add(pluginConfigKey);                 } else if (retainedConfig.getClass() == pluginConfigCls) {                     LOGGER.log(Level.FINE, "Skip load config [{0}] repeatedly. ",                             pluginConfigCls.getName());                 } else {                     LOGGER.log(Level.WARNING, "Type key of {0} is {1}, same as {2}'s. ",                             new String[]{pluginConfigCls.getName(), pluginConfigKey,                                     retainedConfig.getClass().getName()});                 }                 continue;             }             if (PLUGIN_CONFIG_MAP.containsKey(pluginConfigKey)) {                 continue;             }	processConfig(plugin, pluginConfigFile, config);  private static void processConfig(Plugin plugin, File pluginConfigFile, BaseConfig config) {         Class<? extends BaseConfig> pluginConfigCls = config.getClass();         String pluginConfigKey = ConfigKeyUtil.getTypeKeyWithClassloader(ConfigKeyUtil.getTypeKey(pluginConfigCls),                 pluginConfigCls.getClassLoader());          if (pluginConfigFile.isFile()) {             handleFileConfig(plugin, pluginConfigFile, config, pluginConfigCls, pluginConfigKey);         } else {             loadDefaultConfig(plugin, config, pluginConfigKey);         }      } 	Extract method from large function
340	https://github.com/geoserver/geoserver/pull/4893	2	readability	2021-03-29 10:06:29	Break up the 272 lines long CatalogItemProcessor.process() method into  smaller chunks for each CatalogInfo type needing specialized processing.  			Extract method from large function
341	https://github.com/RumbleDB/rumble/pull/486	4	readability	2020-02-27 15:31:56	Removed redundancy of schema generation for each tuple.	Set<String> oldColumnNames = this.inputTuple.getLocalKeys();             List<String> newColumnNames = new ArrayList<>(oldColumnNames);              newColumnNames.add(this.variableName);             List<StructField> fields = new ArrayList<>();             for (String columnName : newColumnNames) {                 StructField field = DataTypes.createStructField(columnName, DataTypes.BinaryType, true);                 fields.add(field); StructType schema = DataTypes.createStructType(fields);	schema = generateSchema();	Extract method from large function
342	https://github.com/Netflix/archaius/pull/688	3	readability	2023-10-26 17:51:34	Split out most sections into self-contained methods with a single objective. Code is now longer, but less convoluted and with less anonymous nested things.			Extract method from large function
343	https://github.com/elastic/elasticsearch/pull/71876	1	readability	2021-04-20 11:50:19	The hope here is that by drying up across both where possible and splitting the logic to different   methods for both otherwise, the corner become easier to understand. 			Extract method from large function
344	https://github.com/strimzi/strimzi-kafka-operator/pull/11343	1	readability	2025-04-14 10:48:58	This PR pulls out the common asserts that check the certificate files and key files are all present and not null.	assertThat(clusterCaCertData.keySet(), is(Set.of(CA_CRT, CA_STORE, CA_STORE_PASSWORD)));         assertThat(clusterCaCertData.get(CA_CRT), is(notNullValue()));         assertThat(clusterCaCertData.get(CA_STORE), is(notNullValue()));         assertThat(clusterCaCertData.get(CA_STORE_PASSWORD), is(notNullValue()));	private void assertCertDataNotNull(Map<String, String> certData) {         assertThat(certData.keySet(), is(Set.of(CA_CRT, CA_STORE, CA_STORE_PASSWORD)));         assertThat(certData.get(CA_CRT), is(notNullValue()));         assertThat(certData.get(CA_STORE), is(notNullValue()));         assertThat(certData.get(CA_STORE_PASSWORD), is(notNullValue()));     }	Extract method from large function
345	https://github.com/elastic/elasticsearch/pull/105680	1	readability	2024-02-21 10:36:26	extracts a method to limit the  scope of the `AbstractRunnable`.		private static boolean isForceExecution(Runnable r) {         return r instanceof AbstractRunnable abstractRunnable && abstractRunnable.isForceExecution();     }	Restrict Field Visibility
346	https://github.com/DataLinkDC/dinky/pull/1155	12	readability	2022-10-28 05:15:36	feat: encapsulate start end time set function.	result.setStartTime(LocalDateTime.now());	public void setEndTimeNow() {         this.setEndTime(LocalDateTime.now());     }	Extract method from large function
347	https://github.com/apache/geode/pull/2920	3	readability	2018-12-06 01:09:43	Extract shortName method		private String getShortName(CharSequence line) {	Extract method from large function
348	https://github.com/apache/pulsar/pull/8052	4	readability	2020-11-11 06:50:43	Refactored Thread.sleep() to common function	Thread.sleep(3000);	waitForZooKeeperWatchers();	Extract method from large function
349	https://github.com/openhab/org.openhab.binding.zigbee/pull/287	2	readability	2018-11-12 13:24:11	  This PR introduces some methods for converting between Mired, Kelvin, and percentages to make more explicit where the corresponding conversions happen in the converter.    	 kelvinMax = (int) (1e6 / kMax);	            kelvinMax = miredToKelvin(minTemperatureInMired);  private int miredToKelvin(int temperatureInMired) {         return (int) (1e6 / temperatureInMired);     } 	Extract method from large function
350	https://github.com/ballerina-platform/openapi-tools/pull/515	2	readability	2021-08-24 18:37:52	 Rearranging the `BallerinaClientGenerator` class by dividing each part of syntax tree generation to separate functions. This will increase the readability and maintainability of the code. 			Extract method from large function
351	https://github.com/trinodb/trino/pull/371	3	readability	2019-03-05 11:04:19	 extract `queryTypeSelectionCriteria` method 	assertMatch(selectors, new SelectionCriteria(true, "test_user", Optional.empty(), ImmutableSet.of(), EMPTY_RESOURCE_ESTIMATES, Optional.of("select")), "global.select");	private static SelectionCriteria queryTypeSelectionCriteria(String queryType)     { return new SelectionCriteria(true, "test_user", Optional.empty(), ImmutableSet.of(), EMPTY_RESOURCE_ESTIMATES, Optional.of(queryType));     }	Extract method from large function
352	https://github.com/awslabs/aws-java-nio-spi-for-s3/pull/251	6	readability	2023-11-02 18:52:53	Unnecessary variable initialization. For the cases where Unnecessary variable initialization was found, the code has been rewritten with smaller methods, making the code easier to understand			Extract method from large function
353	https://github.com/apache/samza/pull/1655	6	readability	2023-03-08 22:18:59	ContainerStorageManager has gotten very unwieldy with 1000+ LOC of highly complex and invocation-order dependent logic. It also does too much by trying to manage side inputs lifecycle along with regular state stores'.     Changes:       1. Separated side inputs (and standby) related store creation and restore logic into a separate SideInputsManager class.      2. Separated helper methods into a ContainerStorageManagerUtil class, and made them all static to ensure that they don't mutate class fields.    			Move logic to another file
354	https://github.com/apache/shardingsphere/pull/17345	9	readability	2022-05-05 13:06:16	Split `CosIdIntervalShardingAlgorithmTest` by sharding-value type to improve readability.			Extract method from large function
355	https://github.com/MockBukkit/MockBukkit/pull/1232	3	readability	2024-12-16 11:44:32	This PR refactors the logic to create the entity, and moves the creation logic to `EntitTypes` class. 			Move logic to another file
356	https://github.com/apache/pinot/pull/9580	1	readability	2022-10-12 22:32:15	moving test sql to a yaml file for better readability - hard-coded string needs to follow checkstyle. also it cannot be directly copied.	public static Object[][] ssbQueryDataProvider() {     // TODO: refactor these out to .sql files     return new Object[][]{         new Object[]{"select sum(CAST(LO_EXTENDEDPRICE AS DOUBLE) * LO_DISCOUNT) as revenue "             + " from lineorder, dates where LO_ORDERDATE = D_DATEKEY and D_YEAR = 1993 "             + " and LO_DISCOUNT between 1 and 3 and LO_QUANTITY < 25; \n"},	sqls:   # SSB Q1   - |     select sum(CAST(LO_EXTENDEDPRICE AS DOUBLE) * LO_DISCOUNT) as revenue     from lineorder, dates where LO_ORDERDATE = D_DATEKEY and D_YEAR = 1993     and LO_DISCOUNT between 1 and 3 and LO_QUANTITY < 25;   - |	Extract Literals to Constants
357	https://github.com/opensearch-project/k-NN/pull/1931	16	readability	2024-08-05 22:25:01	Refactor KNNVectorFieldType from KNNVectorFieldMapper to a separate class for better readability.			Move logic to another file
358	https://github.com/opensearch-project/k-NN/pull/1935	16	readability	2024-08-05 23:30:02	Refactor KNNVectorFieldType from KNNVectorFieldMapper to a separate class for better readability.			Move logic to another file
359	https://github.com/sublinks/sublinks-api/pull/259	8	readability	2024-03-04 15:44:09	This utility class effectively addresses the issue of null or inappropriate page or limit values by providing a default value. It enhances the readability of the code by implementing more easily understandable methods		public class PaginationControllerUtils {    public static int getAbsoluteMinNumber(@Nullable Integer number,       @Nullable Integer defaultNumber) {      if (number == null && defaultNumber == null) {       return 1;     }      if (defaultNumber == null) {       defaultNumber = number;     }      if (number == null) {       return Math.abs(defaultNumber);     }      return Math.abs(Math.min(number, defaultNumber));   }  }	Move logic to another file
360	https://github.com/apache/bookkeeper/pull/3637	12	readability	2023-02-16 03:39:20	1. Auditor class: Only reserved to do some necessary initialization work, scheduling of various detection tasks  2. Separate monitoring metrics into `AuditorStats`  3. Separate the auditBookies task to the `AuditorBookieCheckTask`  4. Separate the checkAllLedgers task into the `AuditorCheckAllLedgersTask`  5. Separate placementPolicyCheck task into `AuditorPlacementPolicyCheckTask`  6. Separate replicasCheck to `AuditorReplicasCheckTask`	public class Auditor implements AutoCloseable {	public class Auditor implements AutoCloseable { public class AuditorBookieCheckTask extends AuditorTask { public class AuditorCheckAllLedgersTask extends AuditorTask {	Move logic to another file
361	https://github.com/elastic/elasticsearch/pull/124322	4	readability	2025-03-08 14:04:01	Extract a named class from this lambda	return (params) -> new TemplateScript(params) {                     @Override                     public String execute() {                         return propertyValue;                     }                 };	return new ConstantTemplateScriptFactory(propertyValue);  public static class ConstantTemplateScriptFactory implements TemplateScript.Factory {         final TemplateScript script;          private ConstantTemplateScriptFactory(String value) {             this.script = new TemplateScript(Map.of()) {                 @Override                 public String execute() {                     return value;                 }             };         }          @Override         public TemplateScript newInstance(Map<String, Object> params) {             return script;         }     }	Move logic to another file
362	https://github.com/kiegroup/kie-wb-common/pull/2060	46	readability	2018-08-29 17:01:48	Created ProjectImportService to separate behavior from ExampleService. Also importProject from LibraryService moved to ProjectImportService			Move logic to another file
363	https://github.com/crate/crate/pull/9687	4	readable	2020-02-18 14:01:11	Move select-list / group-by semantic check into dedicated class			Move logic to another file
364	https://github.com/gradle/gradle/pull/22047	21	\N	2022-09-20 11:13:50	Move ExecutionResult and ExecutionOutcome into ExecutionEngine			Move logic to another file
365	https://github.com/apache/accumulo/pull/2251	1	readability	2021-08-31 18:35:30	Improve readability of CompactionService by creating inner class for the implementation of PlanningParameters	private void planCompaction(CompactionKind kind, Compactable compactable,       Consumer<Compactable> completionCallback) {     var files = compactable.getFiles(myId, kind);	private class CpPlanParams implements PlanningParameters {     private final CompactionKind kind;     private final Compactable comp;     private final Compactable.Files files;      public CpPlanParams(CompactionKind kind, Compactable comp, Compactable.Files files) {       this.kind = kind;       this.comp = comp;       this.files = files;     } 	Move logic to another file
366	https://github.com/grpc/grpc-java/pull/3430	1	easier to read	2017-09-01 22:32:08	name more anonymous classes in ServerImpl	wrappedExecutor.execute(new ContextRunnable(context) {           @Override           public void runInContext() {             ServerStreamListener listener = NOOP_LISTENER;             try {               ServerMethodDefinition<?, ?> method = registry.lookupMethod(methodName);               if (method == null) {                 method = fallbackRegistry.lookupMethod(methodName, stream.getAuthority());               }               if (method == null) {                 Status status = Status.UNIMPLEMENTED.withDescription(                     "Method not found: " + methodName);                 // TODO(zhangkun83): this error may be recorded by the tracer, and if it's kept in                 // memory as a map whose key is the method name, this would allow a misbehaving                 // client to blow up the server in-memory stats storage by sending large number of                 // distinct unimplemented method                 // names. (https://github.com/grpc/grpc-java/issues/2285)                 stream.close(status, new Metadata());                 context.cancel(null);                 return;               }               listener = startCall(stream, methodName, method, headers, context, statsTraceCtx);             } catch (RuntimeException e) {               stream.close(Status.fromThrowable(e), new Metadata());               context.cancel(null);               throw e;             } catch (Error e) {               stream.close(Status.fromThrowable(e), new Metadata());	final class StreamCreated extends ContextRunnable {          StreamCreated() {           super(context);         }          @Override         public void runInContext() {           ServerStreamListener listener = NOOP_LISTENER;           try {             ServerMethodDefinition<?, ?> method = registry.lookupMethod(methodName);             if (method == null) {               method = fallbackRegistry.lookupMethod(methodName, stream.getAuthority());             }             if (method == null) {               Status status = Status.UNIMPLEMENTED.withDescription(                   "Method not found: " + methodName);               // TODO(zhangkun83): this error may be recorded by the tracer, and if it's kept in               // memory as a map whose key is the method name, this would allow a misbehaving               // client to blow up the server in-memory stats storage by sending large number of               // distinct unimplemented method               // names. (https://github.com/grpc/grpc-java/issues/2285)               stream.close(status, new Metadata());	Move logic to another file
367	https://github.com/CorfuDB/CorfuDB/pull/2256	11	readability	2019-12-16 20:53:09	move all index interfaces and definitions out of CorfuTable and into a separate class.	for (Index<K, V, ? extends Comparable> index : indexSpec) {	for (Index.Spec<K, V, ? extends Comparable> index : indexSpec)   public class Index {      /**      * Denotes a function that supplies the unique name of an index registered to      * {@link CorfuTable}.      */     @FunctionalInterface     public interface Name extends Supplier<String> {     }	Move logic to another file
368	https://github.com/MovingBlocks/Terasology/pull/4132	8	readability	2020-08-29 07:29:27	Extract relevance code for ChunkProvider's to RelevanceSystem			Move logic to another file
369	https://github.com/jenkinsci/office-365-connector-plugin/pull/25	3	readability	2017-10-27 05:51:56	Moves two method into separate class to enable unit test (next PR). The code is same except one method that has been split into smaller one to improve readability.	private String evaluateMacro(String template) {         try {             File workspace = run.getRootDir();             return TokenMacro.expandAll(run, new FilePath(workspace), listener, template);         } catch (InterruptedException | IOException | MacroEvaluationException e) {             throw new IllegalArgumentException(e);         }     } 	public class DecisionMaker {      private final Run run;     private final Result previousResult;      private final TaskListener listener;  private String evaluateMacro(String template) {         try {             File workspace = run.getRootDir();             return TokenMacro.expandAll(run, new FilePath(workspace), listener, template);         } catch (InterruptedException | IOException | MacroEvaluationException e) {             throw new IllegalArgumentException(e);         }     }	Move logic to another file
370	https://github.com/apache/flink/pull/23632	6	readability	2023-10-31 14:41:48	Use a proper builder pattern for `SourceTestStep` and `SinkTestStep` 			Use Builder Pattern
371	https://github.com/HubSpot/jinjava/pull/528	1	easier to read	2020-11-10 22:03:53	The JinjavaConfig constructor had too many parameters. This replaces that constructor with one that just takes in a Builder. It is both easier to read 	this(       StandardCharsets.UTF_8,       Locale.ENGLISH,       ZoneOffset.UTC,       10,       new HashMap<>(),       false,       false,       false,       0,       false,       0,       true,       RandomNumberGeneratorStrategy.THREAD_LOCAL,       false,       0,       interpreterFactory,       new DefaultTokenScannerSymbols(),       JinjavaInterpreterResolver.DEFAULT_RESOLVER_READ_ONLY,       false,       false     );	this(newBuilder().withInterperterFactory(interpreterFactory));	Use Builder Pattern
372	https://github.com/jenkinsci/plugin-installation-manager-tool/pull/129	1	readability	2020-07-11 20:45:15	Improve readability and simplify the code. Config is a value object and has a builder. There is no need to use a mock here.	Config config = mock(Config.class);          when(config.getPluginDir()).thenReturn(refDir);         when(config.getJenkinsWar()).thenReturn(Settings.DEFAULT_WAR);         when(config.getJenkinsUc()).thenReturn(Settings.DEFAULT_UPDATE_CENTER);         when(config.getPlugins()).thenReturn(new ArrayList<Plugin>());         when(config.doDownload()).thenReturn(true);         when(config.getJenkinsUcExperimental()).thenReturn(Settings.DEFAULT_EXPERIMENTAL_UPDATE_CENTER);	Config config = Config.builder()                 .withPluginDir(refDir)                 .withJenkinsWar(Settings.DEFAULT_WAR)                 .withJenkinsUc(Settings.DEFAULT_UPDATE_CENTER)                 .withPlugins(new ArrayList<>())                 .withDoDownload(true)                 .withJenkinsUcExperimental(Settings.DEFAULT_EXPERIMENTAL_UPDATE_CENTER)                 .build();	Use Builder Pattern
373	https://github.com/deeplearning4j/deeplearning4j/pull/7528	1	readability	2019-04-11 10:06:22	Extracted set kernel size and stride from constructor to builder methods.	new ConvolutionLayer.Builder(new int[] {5, 5}, new int[] {1, 1})	new ConvolutionLayer.Builder()	Use Builder Pattern
374	https://github.com/civiform/civiform/pull/10198	7	readability	2025-04-03 17:55:08	Chain setters and extract reused getter into a var	newAccount.setManagedByGroup(tiGroup);     newAccount.setTiNote(form.getTiNote());     newAccount.save();     ApplicantModel applicant = new ApplicantModel();     applicant.setAccount(newAccount);	ApplicantModel applicant =         new ApplicantModel()             .setAccount(newAccount)             .setDateOfBirth(form.getDob())             .setEmailAddress(formEmail)             .setPhoneNumber(form.getPhoneNumber());	Simplify Object Construction and Conversion
375	https://github.com/zowe/api-layer/pull/726	4	readability	2020-06-25 11:36:19	Move CORS related tests into separate package and group in classes together relevant tests.			Extract Class to Separate Package
376	https://github.com/hyperledger/besu/pull/4566	32	readability	2022-11-02 10:38:23	Moved the big inner AbstractPendingTransactionsSorter.LowestInvalidNonceCache to package outer class			Extract Class to Separate Package
377	https://github.com/grpc/grpc-java/pull/11886	3	readability	2025-02-11 01:14:07	Add comments between logical blocks  - Add comments explaining some xDS/gRPC nuances		// null disables FilterChainMatch uniqueness check, used for defaultFilterChain	Include New Comments and Javadoc
378	https://github.com/alpinegizmo/flink-mobile-data-usage/pull/2	5	readability	2021-10-12 19:22:42	added comments for readability		/******************************************************************************************          * Create table using the kafka connector          ******************************************************************************************/	Include New Comments and Javadoc
379	https://github.com/wso2/carbon-identity-framework/pull/4782	5	readability	2023-08-02 05:12:02	Add Comments 		/**  * This class is a client for the User Registration Admin Service.  * It provides methods to perform operations like adding a new user,  * checking if a user exists, and reading user fields for user registration.  */	Include New Comments and Javadoc
380	https://github.com/mfvanek/pg-index-health/pull/31	13	readability	2020-02-10 06:34:35	Added more javadoc comments		/**      * Gets connection to a master host in target cluster.      *      * @return {@code PgConnection} to a master host in target cluster      */	Include New Comments and Javadoc
381	https://github.com/snowflakedb/snowflake-kafka-connector/pull/303	1	readability	2021-05-06 00:08:50	Add comments to cleaner code for better readability		// Includes a list of files:     // 1. Which are added after a flush into internal stage is successful     // 2. While an app restarts and we do list on an internal stage to find out what needs to be     // done on leaked files.	Include New Comments and Javadoc
382	https://github.com/microsoft/typespec/pull/6679	1	readability	2025-03-26 02:48:50	add doc		 /**      * Check if the given async proxy method's return type is Mono&lt;ResponseBase&lt;H, T&gt&gt;      *      * @param proxyMethod the proxy method to check.      * @return true if the proxy method returns ResponseBase wrapped in a Mono, false otherwise.      */	Include New Comments and Javadoc
383	https://github.com/apache/flink/pull/21845	1	readability	2023-02-07 02:35:33	Only added javadoc to improve the readability.		 /**      * This method will do the following steps to get the value of a config option:      *      * <p>1. get the value from {@link Configuration}. <br>      * 2. if key is not found, try to get the value with fallback keys from {@link Configuration}      * <br>      * 3. if no fallback keys are found, return {@link Optional#empty()}. <br>      *      * @return the value of the configuration or {@link Optional#empty()}.      */	Include New Comments and Javadoc
384	https://github.com/grpc/grpc-java/pull/10641	1	readability	2023-11-02 17:06:40	Add javadoc 		* Returns the list of classes that have ServerBuilder or ManagedChannelBuilder in their class    * hierarchy and need to be checked for proper overrides of the static constructors.	Include New Comments and Javadoc
385	https://github.com/apache/ozone/pull/1911	1	readability	2021-02-14 04:43:56	Add comment to FilePerChunkStrategy for readability		// HDDS-2372. Read finalChunkFile after tmpChunkFile to solve race       // condition between read and commit.	Include New Comments and Javadoc
386	https://github.com/idempiere/idempiere/pull/2129	743	readability	2023-12-08 12:02:49	Add in code comments.	/**   * @param chart   */		Include New Comments and Javadoc
387	https://github.com/idempiere/idempiere/pull/1984	197	readability	2023-08-29 09:40:20	Add in code comments.			Include New Comments and Javadoc
388	https://github.com/idempiere/idempiere/pull/1819	38	readability	2023-05-03 11:54:00	Add in code comments.			Include New Comments and Javadoc
389	https://github.com/idempiere/idempiere/pull/1774	27	readability	2023-04-11 11:35:39	Add in code comments.			Include New Comments and Javadoc
390	https://github.com/idempiere/idempiere/pull/1666	53	readability	2023-02-09 13:39:59	Add in code comments.			Include New Comments and Javadoc
391	https://github.com/idempiere/idempiere/pull/1675	22	readability	2023-02-15 11:33:19	Add in code comments.			Include New Comments and Javadoc
392	https://github.com/idempiere/idempiere/pull/1690	51	readability	2023-02-27 13:23:20	Add in code comments.			Include New Comments and Javadoc
393	https://github.com/idempiere/idempiere/pull/1774	27	readability	2023-04-11 11:35:39	Add in code comments.			Include New Comments and Javadoc
394	https://github.com/idempiere/idempiere/pull/1755	119	readability	2023-03-28 17:36:32	Add in code comments.			Include New Comments and Javadoc
395	https://github.com/runelite/runelite/pull/2714	2	readability	2018-05-19 17:44:21	Add javadocs to methods		// Add a friend note tooltip to a hovered friend list entry	Include New Comments and Javadoc
396	https://github.com/TheAlgorithms/Java/pull/5523	2	readability	2024-10-05 12:43:42	Include comments		/**  * This class implements the Longest Common Subsequence (LCS) problem.  * The LCS of two sequences is the longest sequence that appears in both  * sequences  * in the same order, but not necessarily consecutively.  *  * This implementation uses dynamic programming to find the LCS of two strings.  */	Include New Comments and Javadoc
397	https://github.com/idempiere/idempiere/pull/2517	51	readability	2024-11-06 11:28:57	Add in code comments.		/**  * Base class and interface for process controller, process parameter controller and status bar  */	Include New Comments and Javadoc
398	https://github.com/idempiere/idempiere/pull/2179	373	readability	2024-01-10 11:58:51	Add in code comments.		/**  * Abstract base class for {@link IProductPricing} implementation  */	Include New Comments and Javadoc
399	https://github.com/idempiere/idempiere/pull/2283	498	readability	2024-04-02 21:04:16	Add in code comments.	// Calculate DateNextRun for new record or if schedule has change		Include New Comments and Javadoc
400	https://github.com/MovingBlocks/Terasology/pull/4132	8	readability	2020-08-29 07:29:27	Add javadocs to RelevanceSystem		/**      * Update distance of relative entity, if exists.      * @param entity entity for update distance.      * @param distance new distance for setting to entity's region.      */	Include New Comments and Javadoc
401	https://github.com/apache/accumulo/pull/2250	1	easier to read	2021-08-31 12:04:00	Add a comment		// log error if tablet is metadata and compaction is external	Include New Comments and Javadoc
402	https://github.com/farin/JCloisterZone/pull/240	26	readability	2017-08-29 07:56:10	Hi, I documented some of the classes in package board		/**  * Enumerates the four corners of a tile.  */	Include New Comments and Javadoc
403	https://github.com/gradle/gradle/pull/22047	21	\N	2022-09-20 11:13:50	document UnitOfWork.loadRestoredOutput() to loadAlreadyProducedOutput()		/**      * Loads output not produced during the current execution.      * This can be output produced during a previous execution when the work is up-to-date,      * or loaded from cache.      */	Include New Comments and Javadoc
404	https://github.com/apache/accumulo/pull/2381	2	readability	2021-12-13 14:17:36	Added documentation for the method.		 // As long as maxSplits is equal to or larger than the number of current splits, the existing     // splits are returned and no additional processing is necessary.	Include New Comments and Javadoc
405	https://github.com/apache/pinot/pull/7294	2	clean up	2021-08-19 22:03:44	add comments back		// Preprocess the segment on local using local SegmentDirectory.     // Please note that this step may modify the segment metadata.	Include New Comments and Javadoc
406	https://github.com/jMonkeyEngine/jmonkeyengine/pull/1594	36	readability	2021-08-13 18:10:01	This PR improves the readability of some comments in the source code, mostly in Java source. It corrects a few typos, but mostly it adds hyphens or blanks or camelCase to emphasize word boundaries. Because it affects only javadoc and inline comments, this is a low-risk PR.	 A garbage collector bound asset cache that handles non-clonable objects.	 * A garbage collector bound asset cache that handles non-cloneable objects.	Clarify Comments and Javadoc
407	https://github.com/gradle/gradle/pull/20353	1	readability	2022-04-06 15:05:21	Rewrites comment to read better Rewrites comment to correct typo: word "loose"	* Make sure this stays type FileCollection (lazy) to not loose dependency information.	     * Make sure this stays type FileCollection (lazy) to avoid losing dependency information.	Clarify Comments and Javadoc
408	https://github.com/tokiwa-software/fuzion/pull/783	1	readability	2022-12-13 15:09:42	improve comment readability	* Check if this call when the _calledFeature would be ff needs special	* Check if this call would need special handling of the argument count	Clarify Comments and Javadoc
409	https://github.com/TheAlgorithms/Java/pull/5498	1	readability	2024-10-02 13:55:57	The comment improvements for the `ClimbingStairs` class enhance clarity and adherence to Java documentation standards. 	/* A DynamicProgramming solution for Climbing Stairs' problem Returns the     distinct ways can you climb to the staircase by either climbing 1 or 2 steps.     Link : https://medium.com/analytics-vidhya/leetcode-q70-climbing-stairs-easy-444a4aae54e8 */ 	/*  * A dynamic programming solution for the "Climbing Stairs" problem.  * Returns the no. of distinct ways to climb to the top  * of a staircase when you can climb either 1 or 2 steps at a time.  *  * For example, if there are 5 steps, the possible ways to climb the  * staircase are:  * 1. 1-1-1-1-1  * 2. 1-1-1-2  * 3. 1-2-1-1  * 4. 2-1-1-1  * 5. 2-2-1  * 6. 1-1-2-1  * 7. 1-2-2  * 8. 2-1-2  * Ans: 8 ways  */	Clarify Comments and Javadoc
410	https://github.com/TheAlgorithms/Java/pull/4835	1	readability	2023-10-19 19:02:28	Fixed typo error for better readability	 * @brief A Java implementation of the offcial W3 documented procedure to	 * @brief A Java implementation of the official W3 documented procedure to	Clarify Comments and Javadoc
411	https://github.com/checkstyle/checkstyle/pull/4049	1	readability	2017-03-22 19:38:54	Perform refactoring of AnnotationLocationCheck to increase code readability. Improve javadoc	 Check have following options:	 * The check has the following options:	Clarify Comments and Javadoc
412	https://github.com/TheAlgorithms/Java/pull/5526	2	readability	2024-10-05 09:47:53	Improve `TrieImp.java` comments		/**      * Deletes a word from the Trie.      * <p>      * The method traverses the Trie to find the word and marks its end flag as      * false.      * It returns true if the word was successfully deleted, false if the word      * wasn't found.      *      * @param word The word to be deleted from the Trie.      * @return true if the word was found and deleted, false if it was not found.      */	Clarify Comments and Javadoc
413	https://github.com/awslabs/aws-java-nio-spi-for-s3/pull/251	6	readability	2023-11-02 18:52:53	Improve javadoc	 /*      * @throws NotYetImplementedException	/**      * @throws NotYetImplementedException This method is not yet supported in v2.x. It might be implemented for bucket creation	Clarify Comments and Javadoc
414	https://github.com/elastic/elasticsearch/pull/124322	4	readability	2025-03-08 14:04:01	Clean up some typos	/**  * Utilities for for dealing with {@link Locale} objects  */	/**  * Utilities for dealing with {@link Locale} objects  */	Clarify Comments and Javadoc
415	https://github.com/eclipse-edc/Samples/pull/165	4	readability	2023-12-14 11:20:33	improve readability of documentation	First we need to set up the receiver server on the consumer side that will receive a call for every message. For this	First we need to set up the logging webserver on the consumer side that will receive a call for every message. For this	Clarify Comments and Javadoc
416	https://github.com/idempiere/idempiere/pull/2517	51	readability	2024-11-06 11:28:57	Update Javadoc for variables and methods.	/**********************************************************************    * Start Optional Class	/**    * Call Process Class	Clarify Comments and Javadoc
417	https://github.com/idempiere/idempiere/pull/2283	498	readability	2024-04-02 21:04:16	Update Javadoc for variables and methods.	Interface for key store  	 * Interface for security key store	Clarify Comments and Javadoc
418	https://github.com/idempiere/idempiere/pull/2179	373	readability	2024-01-10 11:58:51	Update Javadoc for variables and methods.	Event handler that delegate to {@link EventDelegate} instance (create for each event call).	Event handler that delegate to {@link EventDelegate} instance (create for each event call).<br/>	Clarify Comments and Javadoc
419	https://github.com/idempiere/idempiere/pull/2129	743	readability	2023-12-08 12:02:49	Update Javadoc for variables and methods.	*  Report System Issue	 *         Report System Issue.	Clarify Comments and Javadoc
420	https://github.com/idempiere/idempiere/pull/1984	197	readability	2023-08-29 09:40:20	Update Javadoc for variables and methods.	*  Report System Issue	 *         Report System Issue.	Clarify Comments and Javadoc
421	https://github.com/idempiere/idempiere/pull/1819	38	readability	2023-05-03 11:54:00	Update Javadoc for variables and methods.	*  Report System Issue	 *         Report System Issue.	Clarify Comments and Javadoc
422	https://github.com/idempiere/idempiere/pull/1774	27	readability	2023-04-11 11:35:39	Update Javadoc for variables and methods.	*  Report System Issue	 *         Report System Issue.	Clarify Comments and Javadoc
423	https://github.com/idempiere/idempiere/pull/1666	53	readability	2023-02-09 13:39:59	Update Javadoc for variables and methods.	*  Report System Issue	 *         Report System Issue.	Clarify Comments and Javadoc
424	https://github.com/idempiere/idempiere/pull/1675	22	readability	2023-02-15 11:33:19	Update Javadoc for variables and methods.	*  Report System Issue	 *         Report System Issue.	Clarify Comments and Javadoc
425	https://github.com/idempiere/idempiere/pull/1690	51	readability	2023-02-27 13:23:20	Update Javadoc for variables and methods.	*  Report System Issue	 *         Report System Issue.	Clarify Comments and Javadoc
426	https://github.com/idempiere/idempiere/pull/1774	27	readability	2023-04-11 11:35:39	Update Javadoc for variables and methods.	*  Report System Issue	 *         Report System Issue.	Clarify Comments and Javadoc
427	https://github.com/idempiere/idempiere/pull/1755	119	readability	2023-03-28 17:36:32	Update Javadoc for variables and methods.	*  Report System Issue	 *         Report System Issue.	Clarify Comments and Javadoc
428	https://github.com/grpc/grpc-java/pull/7944	3	readability	2021-03-08 17:14:22	Re-ordered arguments of sendResponse(), verifyRequest() to make them consistent between each other	protected void sendResponse(String versionInfo, List<Any> resources, ResourceType type,         String nonce) {	protected void sendResponse(         ResourceType type, List<Any> resources, String versionInfo, String nonce) {	Reorder Elements
429	https://github.com/elastic/elasticsearch/pull/67175	53	readability	2021-01-07 19:34:51	Improve readability of Node transform/forEach typed methods by moving the "type token" to the front of the method, before the lambda declaration.	return plan.transformExpressionsUp(u -> {                             Collection<Attribute> childrenOutput = new LinkedHashSet<>();                 for (LogicalPlan child : plan.children()) {                     childrenOutput.addAll(child.output());                 }                 NamedExpression named = resolveAgainstList(u, childrenOutput);                                 if (named != null) {                     if (log.isTraceEnabled()) {                         log.trace("Resolved {} to {}", u, named);                     }                     return named;                 }                 return u;             }, UnresolvedAttribute.class);	return plan.transformExpressionsUp(UnresolvedAttribute.class, u -> {                 Collection<Attribute> childrenOutput = new LinkedHashSet<>();                 for (LogicalPlan child : plan.children()) {                     childrenOutput.addAll(child.output());                 }                 NamedExpression named = resolveAgainstList(u, childrenOutput);                 if (named != null) {                     if (log.isTraceEnabled()) {                         log.trace("Resolved {} to {}", u, named);                     }                     return named;                 }                 return u;             });   	Reorder Elements
430	https://github.com/crate/crate/pull/11011	1	easier to read	2021-02-09 12:36:33	To make a diff against the upstream version of the file easier to read.		Trocou métodos de lugar dentro da classe	Reorder Elements
431	https://github.com/crate/crate/pull/10685	1	easier to read	2020-10-21 13:05:35	Reorder methods in BlobStoreRepository to match ES upstream			Reorder Elements
432	https://github.com/NRG948/NRGRobot2025/pull/163	2	readability	2025-03-01 18:39:01	Improves method order for better readability.			Reorder Elements
433	https://github.com/apache/lucene/pull/13532	1	readability	2024-07-12 08:49:32	align declare and init order			Reorder Elements
434	https://github.com/trinodb/trino/pull/371	3	readability	2019-03-05 11:04:19	reorder methods so that helper methods are last 			Reorder Elements
435	https://github.com/oracle/tribuo/pull/336	8	readability	2023-04-28 16:00:32	Reorder Access modifiers as per JSR standard	 public final static class LabelFactoryProvenance implements OutputFactoryProvenance {	public static final class LabelFactoryProvenance implements OutputFactoryProvenance {	Reorder Elements
436	https://github.com/apache/hadoop/pull/5309	4	readability	2023-02-04 02:29:20	A non-empty string should be on the left side of the equal.	if (key.equals("exclusive")	if ("exclusive".equals(key)	Reorder Elements
437	https://github.com/jdi-testing/jdi-light/pull/1012	39	readability	2019-10-14 08:40:31	Use one line for each declaration, it enhances code readability	TextField name, password;	public TextField name;     public TextField password;	Declare One Variable per Line
438	https://github.com/liquibase/liquibase/pull/3316	1	readability	2022-11-17 20:38:34	Adds new line breaks to a code that seems packed up. 	}         }         if (!output.createNewFile()) {	}         }          if (!output.createNewFile()) {	Standardize Indentation
439	https://github.com/elastic/elasticsearch/pull/124322	4	readability	2025-03-08 14:04:01	Whitespace	 }             }         }          setFieldValue(path, value);	 }             }         }         setFieldValue(path, value);	Standardize Indentation
440	https://github.com/farin/JCloisterZone/pull/240	26	readability	2017-08-29 07:56:10	Fix indentation in switch cases			Standardize Indentation
441	https://github.com/OpenLiberty/liberty-tools-intellij/pull/1318	1	readability	2025-03-24 15:26:31	Noticed this paragraphing problem and I found it confusing. 	Keyboard keyboard = new Keyboard(remoteRobot);         // find the location in the file to begin the stanza insertion         // since we know this is a new empty file, go to position 1,1         goToLineAndColumn(remoteRobot, keyboard, 1, 1);	                Keyboard keyboard = new Keyboard(remoteRobot);                 // find the location in the file to begin the stanza insertion                 // since we know this is a new empty file, go to position 1,1                 goToLineAndColumn(remoteRobot, keyboard, 1, 1);	Standardize Indentation
442	https://github.com/EternalCodeTeam/DiscordOfficer/pull/106	25	readability	2023-08-21 22:40:17	Set continuation indent to 4			Standardize Indentation
443	https://github.com/checkstyle/checkstyle/pull/5472	2	readability	2018-02-01 10:30:47	olution was a bit improved due to place the only character patter per line to increase readability and make maintenance easier.	"(00[0-1][0-9A-Fa-f]|00[8-9][0-9A-Fa-f]|00[aA][dD]|034[fF]|070[fF]"             + "|180[eE]|200[b-fB-F]|202[a-eA-E]|206[0-4a-fA-F]"             + "|[fF]{3}[9a-bA-B]|[fF][eE][fF]{2})");	 "(00[0-1][0-9A-Fa-f]"             + "|00[8-9][0-9A-Fa-f]"             + "|00[aA][dD]"             + "|034[fF]"             + "|070[fF]"             + "|180[eE]"             + "|200[b-fB-F]"             + "|202[a-eA-E]"             + "|206[0-4a-fA-F]"             + "|[fF]{3}[9a-bA-B]"             + "|[fF][eE][fF]{2})");	Limit Line Length
444	https://github.com/jenkinsci/jenkins/pull/6013	23	readability	2021-12-05 17:09:26	Applies the rectangle rule to some extremely long lines to improve readability and sets the maximum line length at 240 columns.			Limit Line Length
446	https://github.com/deeplearning4j/deeplearning4j/pull/7528	1	readability	2019-04-11 10:06:22	Extracted each layer parameter to separate line.	.layer(0, new ConvolutionLayer.Builder(new int[] {5, 5}, new int[] {1, 1}).name("cnn1")                                         .nIn(inputShape[0]).nOut(20).activation(Activation.RELU).build())	.layer(new ConvolutionLayer.Builder()                                 .name("cnn1")                                 .kernelSize(5, 5)                                 .stride(1, 1)                                 .nIn(inputShape[0])                                 .nOut(20)                                 .activation(Activation.RELU)                                 .build())	Limit Line Length
447	https://github.com/DataLinkDC/dinky/pull/1155	12	readability	2022-10-28 05:15:36	chore: reformat code	UDFPath udfPath = udfService.initUDF(studioExecuteDTO.getStatement(), config.getGatewayConfig() == null ? null : config.getGatewayConfig().getType());	UDFPath udfPath = udfService.initUDF(studioExecuteDTO.getStatement(),             config.getGatewayConfig() == null ? null : config.getGatewayConfig().getType());	Limit Line Length
448	https://github.com/apple/pkl/pull/815	1	readability	2024-11-14 15:14:04	Use text block to improve readability of test	text("class Inner {\n" + "  text: String = \"Bar\"\n" + "}\n" + "inner: Inner")); 	              text(                   """                   class Inner {                     text: String = "Bar"                   }                   inner: Inner                   """));	Improve String Formatting
449	https://github.com/prestodb/presto/pull/21398	2	readability	2023-11-16 21:41:21	Refactor Hive Split classes for readability	private Iterator<InternalHiveSplit> createInternalHiveSplitIterator(Path path, ExtendedFileSystem fileSystem, InternalHiveSplitFactory splitFactory, boolean splittable, Optional<Partition> partition)	    private Iterator<InternalHiveSplit> createInternalHiveSplitIterator(             Path path,             ExtendedFileSystem fileSystem,             InternalHiveSplitFactory splitFactory,             boolean splittable,             Optional<Partition> partition)	Limit Line Length
450	https://github.com/sublinks/sublinks-api/pull/417	1	readability	2024-06-08 22:04:03	The changes include breaking down longer lines of codes into multiple lines to improve code readability	String domain = localInstanceContext.instance().getDomain();	    String domain = localInstanceContext.instance()         .getDomain();	Limit Line Length
451	https://github.com/RumbleDB/rumble/pull/486	4	readability	2020-02-27 15:31:56	Removed wildcard imports from Functions.java 	import static org.rumbledb.runtime.functions.base.Functions.FunctionNames.*;	import static org.rumbledb.runtime.functions.base.Functions.FunctionNames.abs; import static org.rumbledb.runtime.functions.base.Functions.FunctionNames.accumulate;	Explicit Imports
452	https://github.com/EternalCodeTeam/DiscordOfficer/pull/106	25	readability	2023-08-21 22:40:17	Fix checkstyle issues.	import java.awt.*;	import java.awt.Color; import java.awt.Font; import java.awt.FontMetrics; import java.awt.Graphics2D;	Explicit Imports
453	https://github.com/eclipse-edc/Samples/pull/165	4	readability	2023-12-14 11:20:33	improve imports	import static org.eclipse.edc.samples.common.NegotiationCommon.*;	import static org.eclipse.edc.samples.common.NegotiationCommon.createAsset; import static org.eclipse.edc.samples.common.NegotiationCommon.createContractDefinition; import static org.eclipse.edc.samples.common.NegotiationCommon.createPolicy; import static org.eclipse.edc.samples.common.NegotiationCommon.getContractAgreementId; import static org.eclipse.edc.samples.common.NegotiationCommon.negotiateContract; import static org.eclipse.edc.samples.common.NegotiationCommon.fetchDatasetFromCatalog;	Explicit Imports
454	https://github.com/apache/atlas/pull/290	7	readability	2025-02-15 02:30:38	Updated examples module sources to comply with the check-style requirements.	import static org.apache.atlas.examples.sampleapp.SampleAppConstants.*;	import static org.apache.atlas.examples.sampleapp.SampleAppConstants.ATTR_COLUMNS; import static org.apache.atlas.examples.sampleapp.SampleAppConstants.ATTR_COMMENT;	Explicit Imports
455	https://github.com/spring-cloud/spring-cloud-netflix/pull/1686	8	readability	2017-02-16 17:48:49	Polishing imports	import static org.junit.Assert.*;	import static org.junit.Assert.assertEquals;	Explicit Imports
456	https://github.com/apache/pulsar/pull/4799	134	readability	2019-07-25 16:14:03	Substitute * imports with separated import statements	import static org.testng.Assert.*;	import static org.testng.Assert.assertEquals; import static org.testng.Assert.assertFalse; import static org.testng.Assert.assertNull; import static org.testng.Assert.assertTrue; import static org.testng.Assert.fail;	Explicit Imports