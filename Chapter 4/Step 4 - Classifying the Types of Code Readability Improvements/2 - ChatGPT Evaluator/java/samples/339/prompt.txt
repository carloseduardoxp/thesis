Based on this pull request with the developer description: Some parts of the code have issues with logic consistency and readability, the code was changed by the developer from Class<? extends BaseConfig> pluginConfigCls = config.getClass();
             String pluginConfigKey = ConfigKeyUtil.getTypeKeyWithClassloader(ConfigKeyUtil.getTypeKey(pluginConfigCls),
                     pluginConfigCls.getClassLoader());
             final BaseConfig retainedConfig = PLUGIN_CONFIG_MAP.get(pluginConfigKey);
             if (pluginConfigFile.isFile()) {
                 if (retainedConfig == null) {
                     PLUGIN_CONFIG_MAP.put(pluginConfigKey,
                             ConfigManager.doLoad(pluginConfigFile, config, plugin.isDynamic()));
                     plugin.getConfigs().add(pluginConfigKey);
                 } else if (retainedConfig.getClass() == pluginConfigCls) {
                     LOGGER.log(Level.FINE, "Skip load config [{0}] repeatedly. ",
                             pluginConfigCls.getName());
                 } else {
                     LOGGER.log(Level.WARNING, "Type key of {0} is {1}, same as {2}'s. ",
                             new String[]{pluginConfigCls.getName(), pluginConfigKey,
                                     retainedConfig.getClass().getName()});
                 }
                 continue;
             }
             if (PLUGIN_CONFIG_MAP.containsKey(pluginConfigKey)) {
                 continue;
             } (if dont have code before, the code wasnt exist yet) to processConfig(plugin, pluginConfigFile, config);  private static void processConfig(Plugin plugin, File pluginConfigFile, BaseConfig config) {         Class<? extends BaseConfig> pluginConfigCls = config.getClass();         String pluginConfigKey = ConfigKeyUtil.getTypeKeyWithClassloader(ConfigKeyUtil.getTypeKey(pluginConfigCls),                 pluginConfigCls.getClassLoader());          if (pluginConfigFile.isFile()) {             handleFileConfig(plugin, pluginConfigFile, config, pluginConfigCls, pluginConfigKey);         } else {             loadDefaultConfig(plugin, config, pluginConfigKey);         }      }, (if dont have code after, the code was removed) please, provide the appropriate label that represents the code readability improvement described and performed by the developer. No explanations, only the name of the appropriate label.