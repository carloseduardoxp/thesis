id	URL	number files	keyword	merged at	developer description	code before	code after	human label
1	https://github.com/Lightning-AI/LitServe/pull/224	1	readability	2024-08-27 07:00:58	improve code readability by renaming variable names	buffer: Dict[str, Union[Tuple[deque, asyncio.Event], asyncio.Event]],	    response_buffer: Dict[str, Union[Tuple[deque, asyncio.Event], asyncio.Event]],	Improve Naming
2	https://github.com/nasa/ncompare/pull/264	2	readability	2024-12-23 15:05:30	Fixing a misnamed variable in count_diffs()	both = len(set_a & set_b)	    shared = len(set_a & set_b)	Improve Naming
3	https://github.com/launchableinc/cli/pull/365	9	readability	2022-01-19 04:26:28	improve code readability by renaming variable names	 buffer: Dict[str, Union[Tuple[deque, asyncio.Event], asyncio.Event]],	    response_buffer: Dict[str, Union[Tuple[deque, asyncio.Event], asyncio.Event]],	Improve Naming
4	https://github.com/Election-Tech-Initiative/electionguard-python/pull/114	27	readability	2020-07-30 17:06:01	`plaintext` to `vote` for clarity	plaintext: str	vote: str	Improve Naming
5	https://github.com/jarun/buku/pull/345	6	readability	2018-12-31 15:50:11	Global variables that were still lowercase were made uppercase to clearly distinguish them from local variables. 	global myproxy	global MYPROXY	Improve Naming
6	https://github.com/CarperAI/trlx/pull/210	4	readability	2023-02-05 16:06:48	renames a few variables to be more descriptive. 	query_tensors = batch.input_ids	            prompt_tensors = batch.input_ids	Improve Naming
7	https://github.com/Azure/azure-kusto-python/pull/476	11	readability	2023-05-17 11:02:03	changed names of classes in _telemetry 	class KustoTracingAttributes:	class Span:	Improve Naming
8	https://github.com/vanvalenlab/deepcell-tracking/pull/54	6	readability	2021-04-13 00:51:14	Refactor `_check_feature` to `_validate_feature_name` for clarity. 	def _get_parent(self, frame, cell, predictions_dict):	    def _get_parent(self, frame, cell, predictions):	Improve Naming
9	https://github.com/dmwm/CRABServer/pull/7716	4	readability	2023-07-06 08:37:22	Rename update to rest method to reflect state change.  	okReplicas, notOKReplicas = self.checkLockStatus()	okFileDocs, notOKFileDocs = self.checkLockStatus()	Improve Naming
10	https://github.com/aws/aws-lambda-builders/pull/433	5	readability	2023-02-02 19:53:15	parameter names were kind of coupled to scratch and artifacts directory, so I changed them to accept a working directory and an output directory  	class TestEsbuildVersionCheckerAction(TestCase):	class TestEsbuildVersionChecker(TestCase):	Improve Naming
11	https://github.com/pantsbuild/pants/pull/9990	1	readability	2020-06-08 16:58:04	I am working on adding list of enum support to options, cleaning up the code as I try to figure out how things work.	def _convert_member_type(t, x):	def _convert_member_type(member_type, value):	Improve Naming
12	https://github.com/ansys/pyaedt/pull/2655	12	readability	2023-03-21 13:27:57	renamed method	 self._independent_variables[variable_name] = value	self._dependent_variables[variable_name] = value	Improve Naming
13	https://github.com/scikit-learn/scikit-learn/pull/13832	2	readability	2019-05-16 09:19:20	Renames variables trying to use the same variables shown in the reference.	class _X_operator(sparse.linalg.LinearOperator):	class _X_CenterStackOp(sparse.linalg.LinearOperator):	Improve Naming
14	https://github.com/getsentry/sentry/pull/68095	2	readability	2024-04-02 22:14:27	Renames some functions and variables   	if self._potential_match(src_path, frame_filename)	                if self._is_potential_match(src_path, frame_filename)	Improve Naming
15	https://github.com/great-expectations/great_expectations/pull/3103	31	readability	2021-07-23 01:08:40	[MAINTENANCE] rename map_metric.py to map_metric_provider.py (with DeprecationWarning) for a better code readability/interpretability	from .map_metric import (	from .map_metric_provider import (	Improve Naming
16	https://github.com/mlflow/mlflow/pull/5959	25	readability	2022-05-27 10:41:28	 Improve readability around a variable name 	def test_update_model_version_decription(self, mock_http):	    def test_update_model_version_description(self, mock_http):	Improve Naming
17	https://github.com/geopandas/geopandas/pull/3462	1	readability	2024-12-13 14:09:26	ensuring consistent variable naming across _clip_gdf_with_mask and clip functions by renaming the "mask_is_list_like" variable to "clipping_by_rectangle"   	mask_is_list_like = _mask_is_list_like_rectangle(mask)	    clipping_by_rectangle = _mask_is_list_like_rectangle(mask)	Improve Naming
18	https://github.com/logicalclocks/hopsworks-api/pull/308	3	readability	2024-08-30 13:59:40	Add _hr suffix to increase readability	offline_backfill_every = offline_write_options.pop(	            offline_backfill_every_hr = offline_write_options.pop(	Improve Naming
19	https://github.com/pytorch/vision/pull/5484	3	readability	2022-02-25 21:04:54	Changing `_HAS_VIDEO_DECODER` to `_HAS_GPU_VIDEO_DECODER` for improved readability.	_HAS_VIDEO_DECODER = True	    _HAS_GPU_VIDEO_DECODER = True	Improve Naming
20	https://github.com/home-assistant/core/pull/90617	1	readability	2023-04-01 14:24:02	Adjust context id variable names in the logbook processor to improve readability	context_id = context_lookup.memorize(row)	        context_id_bin = context_lookup.memorize(row)	Improve Naming
21	https://github.com/home-assistant/core/pull/126394	1	readability	2024-09-21 22:29:41	Renames some constants in **test_storage.py**.    	TEST_DATA: Final[dict[str, _TokenStoreT]] = {	TEST_STORAGE_DATA: Final[dict[str, _TokenStoreT]] = {	Improve Naming
22	https://github.com/great-expectations/great_expectations/pull/4949	1	readability	2022-04-25 21:29:31	Cleanup variable naming for better readability	 suite: ExpectationSuite = get_or_create_expectation_suite(	    expectation_suite: ExpectationSuite = get_or_create_expectation_suite(	Improve Naming
23	https://github.com/sony/model_optimization/pull/1283	13	readability	2024-12-03 14:46:52	Small cosmetic updates in keras mixed precision to improve readability     rename variable (commit message)	nodes = [n for n in graph.get_activation_configurable_nodes() if n not in weights_conf]	activation_configurable_nodes = [n for n in graph.get_activation_configurable_nodes() if n not in weights_conf]	Improve Naming
24	https://github.com/sql-machine-learning/elasticdl/pull/1405	1	readability	2019-11-01 09:42:18	Rename variable to enhance readability	tmp = {}	        non_embedding_gradients = {}	Improve Naming
25	https://github.com/TheAlgorithms/Python/pull/1403	1	readability	2019-10-19 18:14:38	I have changed the "Head" to "head"(making it more Pythonic) and also "tamp" to "temp"(Better readability) in singly linked list(under data structures) 	self.Head = None  # Initialize Head to None	       self.head = None  # Initialize head to None	Improve Naming
26	https://github.com/TheAlgorithms/Python/pull/6400	1	readability	2022-10-30 07:11:18	Increased Readability Of Variables	word_bysig = collections.defaultdict(list)	word_by_sig = collections.defaultdict(list)	Improve Naming
27	https://github.com/warpnet/salt-lint/pull/203	44	readability	2020-11-28 18:46:07	Renamed `matches` to `problems`.  - Updated some variable names.   	class SaltLintConfig(object):	class Configuration(object):	Improve Naming
28	https://github.com/ansible-collections/community.rabbitmq/pull/89	8	readability	2021-07-27 12:00:26	Hopefully it improves the code readability by renaming `run_in_check_mode` parameter to `force_exec_in_check_mode` in the `_exec` function used in multiple modules.	def _exec(self, args, run_in_check_mode=False):	def _exec(self, args, force_exec_in_check_mode=False):	Improve Naming
29	https://github.com/AppDaemon/appdaemon/pull/705	3	readability	2019-09-22 15:41:44	Enhance variable naming for better readability	apiurl = "{}/api/states/{}".format(config["ha_url"], entity_id)	        api_url = "{}/api/states/{}".format(config["ha_url"], entity_id)	Improve Naming
30	https://github.com/rapidsai/dependency-file-generator/pull/27	3	readability	2022-11-23 21:54:18	changes the names of a few functions 	def get_file_output(output):	def validate_requested_output_types(output):	Improve Naming
31	https://github.com/Azure/azure-iot-sdk-python/pull/380	16	readability	2019-10-31 23:07:26	Rename stages and ops for readability	class IotResponseEvent(PipelineEvent):	class ResponseEvent(PipelineEvent):	Improve Naming
32	https://github.com/Azure/azure-kusto-python/pull/270	6	readability	2021-01-05 15:31:28	Rename KustoIngestClient to QueuedIngestClient for readability	class KustoIngestClient:	class QueuedIngestClient:	Improve Naming
33	https://github.com/Cloud-CV/EvalAI/pull/2667	2	readability	2020-06-15 01:25:28	 Variable have understandable name that clearly describes it's functionality.	def challenge_host_detail(request, challenge_host_team_pk, pk):	def challenge_host_detail(request, challenge_host_team_pk, challenge_host_pk):	Improve Naming
34	https://github.com/ExcitedStates/qfit-3.0/pull/75	3	readability	2020-06-30 18:51:40	 including some variable naming 	is_this_rotamer = False	                                is_this_same_rotamer = False	Improve Naming
35	https://github.com/conan-io/conan/pull/6838	3	readability	2020-04-14 10:36:37	some minor pep8, the majority are naming variables	find_dependencies_block = find_transitive_dependencies(public_deps_names,                                                                    find_modules=True)	 f = find_transitive_dependencies(public_deps_names, find_modules=True)	Improve Naming
36	https://github.com/cs50/problems/pull/298	1	readability	2025-01-26 20:31:14	cuts a pair of duplicate function named 	def sentence_punctuation(): def sentence_punctuation():	def exclamation_marks(): def question_marks():	Improve Naming
37	https://github.com/DataDog/integrations-core/pull/12435	3	readability	2022-07-07 19:50:41	improves code readability by renaming a variable that did not make sense 	 if self.metric_collection_enabled and not self._replication_dr_secondary_mode:	        if self.metric_collection_enabled and not self._skip_dr_metric_collection:	Improve Naming
38	https://github.com/dmlc/dgl/pull/6451	1	readability	2023-10-16 09:47:45	Rename the variables  in NeighborSampler for better readability.	original_column_node_ids=original_column_node_ids,                 original_row_node_ids=seeds,	                original_column_node_ids=seeds,                 original_row_node_ids=original_row_node_ids,	Improve Naming
39	https://github.com/flyteorg/flytekit/pull/1642	1	readability	2023-05-16 22:33:15	 The name is not accurate. Rename it to improve readability  After `load_packages_and_modules`, the entities become **registrable**. 	serializable_entities = load_packages_and_modules(	    registrable_entities = load_packages_and_modules(	Improve Naming
40	https://github.com/home-assistant/core/pull/21528	1	readability	2019-02-28 12:05:41	Update person variable name for readability	latest_home = latest_not_home = latest_gps = latest = None	        latest_non_gps_home = latest_not_home = latest_gps = latest = None	Improve Naming
41	https://github.com/NVIDIA/nim-anywhere/pull/22	2	readability	2024-08-07 21:59:16	Update naming for pipeline components to improve readability	class ChatModelConfig(BaseModel):	class LLMModelConfig(BaseModel):	Improve Naming
42	https://github.com/openai/baselines/pull/585	1	readability	2018-09-18 21:14:39	Rename common variable for a bit more readability	M2 = m_a + m_b + np.square(delta) * count * batch_count / (count + batch_count)	M2 = m_a + m_b + np.square(delta) * count * batch_count / tot_count	Improve Naming
43	https://github.com/GeoscienceAustralia/gnssanalysis/pull/62	1	readability	2024-12-19 09:34:33	a bunch of renamed variables to hopefully make it clearer what this function is doing.	(((y - res_prev.T) + (res_next.T - y)) / 2),	        (((positions - res_prev.T) + (res_next.T - positions)) / 2),	Improve Naming
44	https://github.com/great-expectations/great_expectations/pull/6444	16	readability	2022-11-29 07:48:27	Modify names of variables in `ParameterBuilder` test modules to better communicate their meanings.  	if metric_configuration.id in resolved_metrics_sorted:	if metric_configuration.id in resolved_metrics:	Improve Naming
45	https://github.com/apache/airflow/pull/32529	1	readability	2023-07-12 00:02:22	Make the  conn view tests more readable by renaming some variables 	expected_result = {f"test_duplicate_postgres_connection_copy{i}" for i in range(1, 11)}	expected_connections_ids = {f"test_duplicate_postgres_connection_copy{i}" for i in range(1, 11)}	Improve Naming
46	https://github.com/pyhoneybot/honeybot/pull/196	1	readability	2023-06-28 04:17:06	Renamed command_parser method to core_commands_parse for clarity.    	isListenOn	is_listen_on	Improve Naming
47	https://github.com/huggingface/transformers/pull/28349	2	readability	2024-01-08 08:19:06	Rename gelu_act to activatioin	hidden_states = self.act(hidden_states)	        hidden_states = self.activation(hidden_states)	Improve Naming
48	https://github.com/spack/spack/pull/31936	1	readability	2022-08-05 10:36:33	Renamed a few variables to better convey their properties (e.g. `specs` -> `concrete_specs`)  	specs = spack.cmd.parse_specs(args.spec, concretize=True, tests=tests)	concrete_specs = spack.cmd.parse_specs(             args.spec, concretize=True, tests=install_kwargs["tests"]         )	Improve Naming
49	https://github.com/JulianFrattini/cira/pull/74	2	readability	2023-11-20 15:37:09	parts of the code were refactored to improve its readability.	double_negative = (len(causes) == 1) and (causes[0].is_negated())	            is_double_negative = (len(causes) == 1) and (causes[0].is_negated())	Improve Naming
50	https://github.com/openwisp/openwisp-radius/pull/134	8	readability	2020-07-21 19:43:06	Improve readability + formatting	u = User.objects.filter(username='socialuser').first()	user = User.objects.filter(username='socialuser').first()	Improve Naming
51	https://github.com/PaiGramTeam/PaiGram/pull/628	1	readability	2023-08-21 09:17:15	Integrated task exception handling directly within the task function. 	await message.edit_text(                 "\n".join(message.text_html.split("\n")[:2] + ["图标素材下载完成!"]), parse_mode=ParseMode.HTML             )	notice_text = "图标素材下载完成"  await message.edit_text(notice_text)	Extract Variable
52	https://github.com/JulianFrattini/cira/pull/74	2	readability	2023-11-20 15:37:09	parts of the code were refactored to improve its readability.	double_negative = (len(causes) == 1) and (causes[0].is_negated())             edge = effect.add_incoming(child=cause_root, negated=(effect.is_negated() != double_negative))	            is_double_negative = (len(causes) == 1) and (causes[0].is_negated())             is_negated=effect.is_negated() != is_double_negative             edge = effect.add_incoming(child=cause_root, negated=is_negated)	Extract Variable
53	https://github.com/RemDelaporteMathurin/h-transport-materials/pull/214	30	readability	2023-05-08 17:48:05	Noticed there was a discrepancy in some newer scripts there is the use of:  u = htm.ureg However, in older scripts, this is not the case. Gone through and updated all the scripts to use the same format, improving the consistency in the repo and the readability of the units	 data_T=1 / serra_data["permx"] * htm.ureg.K,     data_y=serra_data["permy"]     * htm.ureg.mol     * htm.ureg.m**-1     * htm.ureg.s**-1     * htm.ureg.Pa**-0.5,	u = htm.ureg     data_T=1 / serra_data["permx"] * u.K,     data_y=serra_data["permy"] * u.mol * u.m**-1 * u.s**-1 * u.Pa**-0.5,	Extract Variable
54	https://github.com/lichess-bot-devs/lichess-bot/pull/506	7	readability	2022-07-29 13:38:31	Replace eval with converting object to bytes	 if event == "end":        yield eval(f'b\'{{"type":"gameState","moves":"{moves}","wtime":{int(wtime * 1000)},"btime":{int(btime * 1000)},"winc":2000,"binc":2000,"status":"outoftime","winner":"black"}}\'')	new_game_state = {"type": "gameState",                               "moves": moves,                               "wtime": int(wtime * 1000),                               "btime": int(btime * 1000),                               "winc": 2000,                               "binc": 2000} if event == "end":     new_game_state["status"] = "outoftime"     new_game_state["winner"] = "black"     yield json.dumps(new_game_state).encode("utf-8")	Extract Variable
55	https://github.com/huggingface/transformers/pull/28349	2	readability	2024-01-08 08:19:06	This code optimization enhances code readability and maintainability by utilizing aliases, simplified activation function selection, and consistent function definitions.   	hidden_states = get_activation("gelu")(hidden_states)	self.activation = get_activation("gelu") hidden_states = self.activation(hidden_states)	Extract Variable
56	https://github.com/freqtrade/freqtrade/pull/2834	1	readability	2020-02-02 10:12:57	updated hyperopt loss sharpe loss method for better readability to make it more consistent with the final version of sharpe loss daily loss method.	if (np.std(total_profit) != 0.):             sharp_ratio = expected_yearly_return / np.std(total_profit) * np.sqrt(365)	up_stdev = np.std(total_profit) if (np.std(total_profit) != 0.):             sharp_ratio = expected_returns_mean / up_stdev * np.sqrt(365)	Extract Variable
57	https://github.com/equinor/ert/pull/3837	1	readability	2022-08-31 19:11:28	We introduce a new variable representing the dict passed to rng config to increase clarity of the test in question.  	config["SIMULATION"]["SEED"] = {ConfigKeys.RANDOM_SEED: random_seed} rng_config = RNGConfig(config_dict=config["SIMULATION"]["SEED"])             res_config = ResConfig(config=config)             self.assertEqual(rng_config, res_config.rng_config)	rng_config_dict = {ConfigKeys.RANDOM_SEED: random_seed}             config["SIMULATION"]["SEED"] = rng_config_dict # we instantiate an `RNGConfig` class using a config dict             rng_config_from_dict = RNGConfig(config_dict=rng_config_dict)             # NB: We are using the `config` argument, which essentially             # passes a config content directly to the init function of the             # `ResConfig` class             res_config_from_config_content = ResConfig(config=config)              self.assertEqual(                 rng_config_from_dict, res_config_from_config_content.rng_config             )	Extract Variable
58	https://github.com/scipy/scipy/pull/20254	1	readability	2024-03-15 15:23:54	 refactor long strings of A.dot(B.dot(C)) into matmuls.    	res = a.conj().T.dot(x.dot(a)) - x + q         res -= a.conj().T.dot(x.dot(b)).dot(                     solve(r+b.conj().T.dot(x.dot(b)), b.conj().T).dot(x.dot(a))                     )	bH = b.conj().T         xa, xb = x @ a, x @ b          res = a.conj().T @ xa - x + q         res -= a.conj().T @ xb @ (solve(r + bH @ xb, bH) @ xa)	Simplify Object Construction and Conversion
59	https://github.com/TheAlgorithms/Python/pull/9265	1	readability	2023-10-22 18:51:57	Replaced repeated `len(board)` with a single variable `n` for efficiency in the `is_safe` function.   	for i in range(len(board)):         if board[row][i] == 1:             return False     for i in range(len(board)):         if board[i][column] == 1:             return False     for i, j in zip(range(row, -1, -1), range(column, -1, -1)):         if board[i][j] == 1:             return False     for i, j in zip(range(row, -1, -1), range(column, len(board))):         if board[i][j] == 1:             return False     return True	 n = len(board)  # Size of the board      # Check if there is any queen in the same row, column,     # left upper diagonal, and right upper diagonal     return (         all(board[i][j] != 1 for i, j in zip(range(row, -1, -1), range(column, n)))         and all(             board[i][j] != 1 for i, j in zip(range(row, -1, -1), range(column, -1, -1))         )         and all(board[i][j] != 1 for i, j in zip(range(row, n), range(column, n)))         and all(board[i][j] != 1 for i, j in zip(range(row, n), range(column, -1, -1)))     )	Extract Variable
60	https://github.com/keras-team/keras-cv/pull/2197	1	readability	2023-12-11 19:08:07	I added the casting method to Stable Diffusion source as y-vectorfield-fj(my previous account name).	latent = ops.cast(latent, latent_prev.dtype)	target_dtype = latent_prev.dtype             latent = ops.cast(latent, target_dtype)	Extract Variable
61	https://github.com/jazzband/django-analytical/pull/209	1	readability	2022-03-14 21:51:06	Readability counts, code must be self-explanatory	def read_file(fname):     """Read content of a file in project folder."""     with (Path(__file__).resolve().parent / fname).open() as file:         return file.read()	def read_file(filename):     """Read a text file and return its contents."""     project_home = Path(__file__).parent.resolve()     file_path = project_home / filename     return file_path.read_text(encoding="utf-8")	Extract Variable
62	https://github.com/openSUSE/opi/pull/130	25	readability	2023-05-19 11:28:54	`opi/__init__.py`  - saving the results of `get_cpu_arch()` in a variable to reuse them (**L307-320**)  	if binary_data['arch'] not in (get_cpu_arch(), 'noarch'):	cpu_arch = get_cpu_arch()    if binary_data['arch'] not in (cpu_arch, 'noarch'):	Extract Variable
63	https://github.com/spack/spack/pull/44980	1	readability	2024-07-01 19:14:00	stage[0] is assumed to be for sources, 1: and onwards is  patches/resources, make that a bit more clear.    the implementation isn't very satisfactory cause it fetches  some (unconditional) patches too, but does not apply them, because  that requires a concrete spec.    patches are only applied upon install, at which point even  more may be fetched...	if isinstance(package.stage[0].fetcher, spack.fetch_strategy.GitFetchStrategy):         package.stage[0].fetcher.get_full_repo = True	source_stage = package.stage[0]     if isinstance(source_stage.fetcher, spack.fetch_strategy.GitFetchStrategy):         source_stage.fetcher.get_full_repo = True	Extract Variable
64	https://github.com/dirac-institute/sorcha/pull/764	2	readability	2024-01-05 14:11:39	Breaks the `seed_offset` into two lines. The first does the hashing (and uses the default encoding). The second maps the hashed value to an integer (making the `base` argument explicit).   	seed_offset = int(hashlib.md5(module_name.encode("utf-8")).hexdigest(), 16)	        hashed_name = hashlib.md5(module_name.encode())         seed_offset = int(hashed_name.hexdigest(), base=16)	Extract Variable
65	https://github.com/pantsbuild/pants/pull/9990	1	readability	2020-06-08 16:58:04	I am working on adding list of enum support to options, cleaning up the code as I try to figure out how things work.	merged_val = [                 self._convert_member_type(kwargs.get("member_type", str), x) for x in merged_val             ]             if kwargs.get("member_type") == shell_str:	            member_type = kwargs.get("member_type", str)             merged_val = [self._convert_member_type(member_type, val) for val in merged_val]             if member_type == shell_str:	Extract Variable
66	https://github.com/packit/packit-service/pull/1899	1	readability	2023-02-13 07:50:53	Clarify the type of 'event_object'  	event_object: Any = Parser.parse_event(event)	event_object: Optional[Event] = Parser.parse_event(event)	Include type hints and name parameters
67	https://github.com/apache/airflow/pull/32529	1	readability	2023-07-12 00:02:22	access the row fields by field name instead of index.    	response = {conn[0] for conn in session.query(Connection.conn_id).all()}	connections_ids = {conn.conn_id for conn in session.query(Connection.conn_id)}	Clarify Positional Indexing
68	https://github.com/openml/docs/pull/38	2	readability	2024-10-26 20:41:05	Added type hints and return types:      Enhances code readability and maintainability.      Improves static type checking capabilities.    	def get_github_info(target_url):	def get_github_info(target_url:str)->tuple[str, str, str]:	Include type hints and name parameters
69	https://github.com/google/capirca/pull/214	2	legibility	2021-08-04 23:37:11	Added type hints (compatibility: python3.5+)	acl_text,	acl_text: str,	Include type hints and name parameters
70	https://github.com/opsmill/infrahub/pull/3754	1	readability	2024-07-03 05:58:50	 This begins with making the data easier to understand and reason around.	(1299, "Arelion"),	(asn=1299, organization="Arelion"),	Include type hints and name parameters
71	https://github.com/great-expectations/great_expectations/pull/6444	16	readability	2022-11-29 07:48:27	* Fix type hints in several modules.  	def edges(self):	    def edges(self) -> List[MetricEdge]:	Include type hints and name parameters
72	https://github.com/great-expectations/great_expectations/pull/6406	13	readability	2022-11-22 01:58:31	Add type hints in a couple of places in `expectation.py`  	import importlib_metadata	    import importlib_metadata  # type: ignore[no-redef]	Include type hints and name parameters
73	https://github.com/FangjinhuaWang/PatchmatchNet/pull/32	2	readability	2021-05-23 07:17:50	Improve readability of patchmatch.py by adding type annotations	self.conv0 = ConvBnReLU3D(G, 16, 1, 1, 0)	self.conv0 = ConvBnReLU3D(in_channels=G, out_channels=16, kernel_size=1, stride=1, pad=0)	Include type hints and name parameters
74	https://github.com/launchableinc/cli/pull/365	9	readability	2022-01-19 04:26:28	clarify some argument types by adding type hinting	def build(ctx, build_name, source, max_days, no_submodules,	def build(ctx: click.core.Context, build_name, source, max_days, no_submodules,	Include type hints and name parameters
75	https://github.com/quotientbot/quotient/pull/108	2	readability	2023-05-26 19:32:28	Few minor improvements	async def reminder_list(self, ctx):	    async def reminder_list(self, ctx: Context):	Include type hints and name parameters
76	https://github.com/Wakoma/nimble/pull/94	4	readability	2024-10-24 09:54:18	New pylint allows you to seperately set a maximum number of total aguments and a maximum number of positional arguments. This gave us lots of warnings on the number of functions that had a confusingly high number of arguments.    Rather than just up the limit in pylintrc it seems like good practice to make many of these arguments keyword only. This make code more clear, and more robust as we go forward.	def __init__(self, name, position, explode_translation, size, fastener_type, direction_axis):	def __init__(         self,         name:str,         *,         position:tuple[float, float, float]=(0.0, 0.0, 0.0),         explode_translation:tuple[float, float, float]=(0.0, 0.0, 0.0),         size:str="M3-0.5",         fastener_type:str="iso7380_1",         direction_axis:str="-Z"     ):	Include type hints and name parameters
77	https://github.com/encode/httpcore/pull/126	2	readability	2020-08-02 10:35:13	Small internal refactoring to avoid usage of index-based access such as `url[1]` or `response[2]`, hopefully making the HTTP proxy implementation even easier to read. :-)	response[4], connection=connection, callback=self._response_closed	 (             http_version,             status_code,             reason_phrase,             headers,             stream,         ) = await connection.request(             stream, connection=connection, callback=self._response_closed	Clarify Positional Indexing
79	https://github.com/DIRACGrid/DIRAC/pull/6505	9	readability	2022-11-07 12:32:52	unneeded not	if not self.enableFlag == "True":	if self.enableFlag != "True":	Prefer Positive Conditions
80	https://github.com/quotientbot/quotient/pull/108	2	readability	2023-05-26 19:32:28	Simplify logical expressions	if not off or not off.lower() == "off":	if not off or off.lower() != "off":	Prefer Positive Conditions
81	https://github.com/greenbone/python-gvm/pull/193	3	readability	2020-02-25 11:44:32	Address anti-pattern in conditionals: Use `if foo is not None` instead  of `if not foo is None` and `if foo not in (set)` instead of `if not foo  in (set)`.   	 if not condition_data is None:	        if condition_data is not None:	Prefer Positive Conditions
82	https://github.com/snowflakedb/snowpark-python/pull/1970	3	readability	2024-07-24 17:03:57	Stylistic change - prefer direct logic instead of inverted logic.	if not _suppress_ast and _ast_stmt is None:	        if _emit_ast and _ast_stmt is None:	Prefer Positive Conditions
83	https://github.com/tox-dev/tox/pull/1015	1	readability	2018-09-23 22:01:40	improve readability: avoid double negative	if not self.config.option.notest:	        if self.config.option.notest:	Prefer Positive Conditions
84	https://github.com/apache/airflow/pull/34259	2	readability	2023-09-11 01:55:51	Change "not all" to "any" for ease of readability	if not all((c in allowed_chars) for c in stat_name):	    if any(c not in allowed_chars for c in stat_name):	Prefer Positive Conditions
85	https://github.com/home-assistant/core/pull/87111	1	readability	2023-02-02 19:22:33	Address late review on readability sensor code	return not (device_class is None or device_class in NON_NUMERIC_DEVICE_CLASSES)	        return device_class not in {None, *NON_NUMERIC_DEVICE_CLASSES}	Prefer Positive Conditions
86	https://github.com/google/oss-fuzz-gen/pull/459	1	readability	2024-07-09 13:52:13	fix readability of conditional	if not oss_fuzz_dir:	if oss_fuzz_dir:	Prefer Positive Conditions
87	https://github.com/PyBites-Open-Source/pybites-tools/pull/32	1	readability	2022-05-05 08:27:57	fix double negative if-clause for better readability	 if not tz.gettz(zone) is not None:	        if tz.gettz(zone) is None:	Prefer Positive Conditions
88	https://github.com/Rongronggg9/RSS-to-Telegram-Bot/pull/66	3	readability	2022-04-28 06:05:26	simplify condition, improve readability	if env.TRAFFIC_SAVING and not self.valid and min(self.max_width, self.max_height) != -1 and self.urls:     self.urls = [url for url in self.urls if url.startswith(env.IMAGES_WESERV_NL)]     continue	if env.TRAFFIC_SAVING and min(self.max_width, self.max_height) != -1 and self.urls:     self.urls = [url for url in self.urls if url.startswith(env.IMAGES_WESERV_NL)]	Prefer Positive Conditions
89	https://github.com/Rongronggg9/RSS-to-Telegram-Bot/pull/62	8	readability	2022-04-21 18:07:27	Negated conditions are more difficult to read than positive ones, so it is best to avoid them where we can. By swapping the `if` and `else` conditions around we can invert the condition and make it positive.	 sub_count = await inner.utils.count_sub(user_id) if not user_created else 0	    sub_count = 0 if user_created else await inner.utils.count_sub(user_id)	Prefer Positive Conditions
90	https://github.com/PyCQA/autoflake/pull/75	1	readability	2020-08-23 00:55:18	I used os.path.isdir instead of try: ... except OSError: pass for checking if lib-dynload exists.	try:     for name in os.listdir(os.path.join(path, 'lib-dynload')):            yield name except OSError:  # pragma: no cover     pass	dynload_path = os.path.join(path, 'lib-dynload')     if os.path.isdir(dynload_path):        for name in os.listdir(dynload_path):                        yield name	Replace Generic with Specialized API
91	https://github.com/neuralmagic/deepsparse/pull/639	1	readability	2022-09-09 13:09:57	Moving to use `self.executor.map` for consistency with preprocessing. Internally executor.map does the same thing.	 engine_outputs = self.join_engine_outputs(             [future.result() for future in futures]         )	        engine_outputs = self.join_engine_outputs(batch_outputs)	Prefer Built-in methods
93	https://github.com/CityOfZion/neo3-boa/pull/1071	7	readability	2023-06-20 14:14:29	Refactored `lower` built-in method.  Part of an overall refactoring to unify code generator logic and built-in methods generation.   	(Opcode.PUSHINT8, Integer(32).to_byte_array(signed=True)) (Opcode.ADD, b'')	code_generator.convert_literal(ord('a') - ord('A')) code_generator.convert_operation(BinaryOp.Add, is_internal=True)	Replace Generic with Specialized API
94	https://github.com/CityOfZion/neo3-boa/pull/1073	4	readability	2023-06-26 20:11:04	Refactored `count` built-in method.  Part of an overall refactoring to unify code generator logic and built-in methods generation.    	(Opcode.PUSHINT8, Integer(32).to_byte_array(signed=True)) (Opcode.ADD, b'')	code_generator.convert_literal(ord('a') - ord('A')) code_generator.convert_operation(BinaryOp.Add, is_internal=True)	Replace Generic with Specialized API
95	https://github.com/CityOfZion/neo3-boa/pull/1076	1	readability	2023-06-23 17:36:59	Refactored `dict.copy` built-in method.  Part of an overall refactoring to unify code generator logic and built-in methods generation.  	(Opcode.PUSHINT8, Integer(32).to_byte_array(signed=True)) (Opcode.ADD, b'')	code_generator.convert_literal(ord('a') - ord('A')) code_generator.convert_operation(BinaryOp.Add, is_internal=True)	Replace Generic with Specialized API
96	https://github.com/CityOfZion/neo3-boa/pull/1095	2	readability	2023-07-17 12:35:41	Refactored `upper` built-in method.  Part of an overall refactoring to unify code generator logic and built-in methods generation.  	(Opcode.PUSHINT8, Integer(32).to_byte_array(signed=True)) (Opcode.ADD, b'')	code_generator.convert_literal(ord('a') - ord('A')) code_generator.convert_operation(BinaryOp.Add, is_internal=True)	Replace Generic with Specialized API
97	https://github.com/CityOfZion/neo3-boa/pull/1098	1	readability	2023-07-18 12:58:14	Refactored `list` `remove` built-in method.  Part of an overall refactoring to unify code generator logic and built-in methods generation.  	(Opcode.PUSHINT8, Integer(32).to_byte_array(signed=True)) (Opcode.ADD, b'')	code_generator.convert_literal(ord('a') - ord('A')) code_generator.convert_operation(BinaryOp.Add, is_internal=True)	Replace Generic with Specialized API
98	https://github.com/CityOfZion/neo3-boa/pull/1102	1	readability	2023-07-19 12:16:36	Refactored `list` `insert` built-in method.  Part of an overall refactoring to unify code generator logic and built-in methods generation. 	(Opcode.PUSHINT8, Integer(32).to_byte_array(signed=True)) (Opcode.ADD, b'')	code_generator.convert_literal(ord('a') - ord('A')) code_generator.convert_operation(BinaryOp.Add, is_internal=True)	Replace Generic with Specialized API
99	https://github.com/google/capirca/pull/214	2	legibility	2021-08-04 23:37:11	Used pathlib instead of manipulating path strings with the os module (compatibility: python3.4+)	self.def_dir = os.path.join(self.test_subdirectory, 'def') self.pol_dir = os.path.join(self.test_subdirectory, 'policies')  	self.def_dir = str(pathlib.Path(self.test_subdirectory, 'def')) self.pol_dir = str(pathlib.Path(self.test_subdirectory, 'policies'))	Replace Generic with Specialized API
100	https://github.com/openSUSE/opi/pull/130	25	readability	2023-05-19 11:28:54	use specific *math* function `log10()` instead of `log()` with parameter `10` (**L443**)  	padding_len = math.floor(math.log(len(options), 10))	padding_len = math.floor(math.log10(len(options)))	Replace Generic with Specialized API
101	https://github.com/keras-team/keras-cv/pull/847	1	readability	2022-09-27 21:43:04	I've had a few people ask what these hard coded constants are in the tokenizer and I think this improves that a great deal.	return [49406] + bpe_tokens + [49407]	  return [self.start_of_text] + bpe_tokens + [self.end_of_text]	Extract Literals to Constants
102	https://github.com/JulianFrattini/cira/pull/74	2	readability	2023-11-20 15:37:09	This PR changes `graphconverter.py` by using constants instead of hard-coded strings	exceptive_negations = [label for label in labels if label.name=='Negation' and label.parent==None]	    exceptive_negations = [label for label in labels if label.name==consts.NEGATION and label.parent is None]	Extract Literals to Constants
103	https://github.com/google/jaxopt/pull/89	1	readability	2021-10-22 10:56:15	 I added an option to control batch_size.	train_ds, ds_info = load_dataset("train", is_training=True, batch_size=256)	train_ds, ds_info = load_dataset("train", is_training=True, batch_size=FLAGS.train_batch_size)	Extract Literals to Constants
104	https://github.com/lichess-bot-devs/lichess-bot/pull/506	7	readability	2022-07-29 13:38:31	Use named variables instead of in-line expressions (see `draw_or_resign()` in lichess-bot.py) 	shutil.copyfile(f"./TEMP/stockfish_14.1_{windows_or_linux}_x64/stockfish_14.1_{windows_or_linux}_x64{file_extension}", f"./TEMP/sf{file_extension}")	shutil.copyfile(f"./TEMP/{base_name}/{base_name}{file_extension}", f"./TEMP/sf{file_extension}")	Extract Literals to Constants
105	https://github.com/JulianFrattini/cira/pull/73	1	readability	2023-10-30 22:00:53	This PR changes `eventconnector.py` by using constants instead of hard-coded strings (issue #44).  	"previous = 'AND'	    previous = consts.AND"	Extract Literals to Constants
106	https://github.com/great-expectations/great_expectations/pull/6575	8	readability	2022-12-14 00:29:10	Renaming Metric Name Suffixes using Enum Values for Better Code Readability 	".unexpected_count.aggregate_fn",	f".unexpected_count.{MetricPartialFunctionTypes.AGGREGATE_FN.value}",	Extract Literals to Constants
107	https://github.com/iiif-prezi/iiif-prezi3/pull/183	26	readability	2024-12-04 16:34:11	Picking up on an idea I used during my [dogfooding of the "Introduction to `iiif-prezi3`" lightning talk](https://digitaldogsbody.net/iiif/prezi3): due to the structure of the recipes, there are a lot of `id` fields that have a common start, so this PR adds a `base_url` variable and uses it in the various bits of manifest data, meaning that the resulting code looks a bit less cluttered (IMO)	manifest = Manifest(id="https://iiif.io/api/cookbook/recipe/0001-mvm-image/manifest.json", label="Single Image Example")	base_url = "https://iiif.io/api/cookbook/recipe/0001-mvm-image" manifest = Manifest(id=f"{base_url}/manifest.json", label="Single Image Example")	Extract Literals to Constants
109	https://github.com/streamlit/streamlit/pull/4169	4	readability	2021-12-13 21:50:41	echo_test: parameterize tests	 def test_echo(self):         for echo, echo_index, output_index in [             (lambda: st.echo(), 0, 1),             (lambda: st.echo("above"), 0, 1),             (lambda: st.echo("below"), 1, 0),         ]:              # The empty lines below are part of the test. Do not remove them.             with echo():                 st.write("Hello")	 @parameterized.expand(         [             ("code_location default", lambda: st.echo(), 0, 1),             ("code_location above", lambda: st.echo("above"), 0, 1),             ("code_location below", lambda: st.echo("below"), 1, 0),         ]     )     def test_echo(self, _, echo, echo_index, output_index):         # The empty lines below are part of the test. Do not remove them.         with echo():             st.write("Hello")	Clarify Test Intent
110	https://github.com/livekit/agents/pull/1198	3	readability	2024-12-09 15:57:22	This PR updates test names to enhance readability by adding id parameters in pytest.mark.parametrize.	lambda: openai.STT(),	pytest.param(lambda: openai.STT(), id="openai"),	Clarify Test Intent
111	https://github.com/scipy/scipy/pull/20254	1	readability	2024-03-15 15:23:54	Pure MAINT:   minimally change the looping logic into test parametrization  	def _test_factory(case, atol):	    @pytest.mark.parametrize("j, case", enumerate(cases))     def test_solve_discrete_are(self, j, case):	Clarify Test Intent
112	https://github.com/PingjunChen/pyslide/pull/21	1	readability	2023-04-02 15:25:24	Increased readability for assertions	if in_flag != True:         raise AssertionError	    assert in_flag == True, "The contour should be inside the WSI"	Clarify Test Intent
113	https://github.com/pypa/pip/pull/7905	1	readability	2020-03-26 21:13:02	Use set operations in tests for readability I opted to use methods instead of operators partly because there is no operator equivalent for `isdisjoint()` (and partly because I prefer them).	assert all(item in installed for item in kwargs.items()), \	assert set(kwargs.items()) <= installed, \	Clarify Test Intent
114	https://github.com/ManimCommunity/manim/pull/2164	3	readability	2021-10-13 06:01:49	Improved readability of regular expression      By removing single charecter alternation     And keeping a charecter set instead      	x_offset, y_offset = map(int, re.split(";|,|-", value)) 	            x_offset, y_offset = map(int, re.split(r"[;,\-]", value))	Improve Regex
115	https://github.com/google/clusterfuzz/pull/2242	1	readability	2021-02-15 23:52:54	This PR cleans up the readability of multiple regular expressions by removing nonessential escaping, converting from: r'^libfuzzer\_sys\:\:initialize' to: r'^libfuzzer_sys::initialize'	 r'^pthread\_create$',	r'^pthread_create$',	Improve Regex
116	https://github.com/openSUSE/opi/pull/130	25	readability	2023-05-19 11:28:54	`bin/opi`  - update search regex: (**L24**)    - `\\d` for `0-9`    - `*` instead of `{0,}`  	search = re.search('\s*[0-9\-]{0,}\.?\s*', line)	search = re.search('\s*[\d\-]*\.?\s*', line)	Improve Regex
117	https://github.com/Charcoal-SE/SmokeDetector/pull/6704	1	legibility	2021-09-30 07:19:07	reformat "regex poison" posts for legibility	@pytest.mark.parametrize("title, body, username, site, body_is_summary, is_answer, expected_spam", [     ('A post on which testing hangs for minutes when using \\L<city>', '<p>shiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiit!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</p>\n', 'Someone', 'askubuntu.com', True, True, False),     ('A post which was hanging for minutes in pattern-matching websites after the \\L<city> fix', 	@pytest.mark.parametrize("title, body, username, site, body_is_summary, is_answer, expected_spam", [ ('A post on which testing hangs for minutes when using \\L<city>', '<p>sh%st%s</p>\n' % ('i' * 600, '!' * 38), 'Someone', 'askubuntu.com', True, True, False),     ('A post which was hanging for minutes in pattern-matching websites after the \\L<city> fix', '<p>%s</p>\n' % ('burhan' * 3346), 'Someone', 'askubuntu.com', True, True, False),	Improve Regex
118	https://github.com/snowflakedb/snowpark-python/pull/1970	3	readability	2024-07-24 17:03:57	Name the argument _emit_ast on public APIs and emit_ast on internal APIs.	cached_df = self._session.table(temp_table_name, emit_ast=False)	cached_df = self._session.table(temp_table_name, _emit_ast=False)	Include Modifiers and Annotations
119	https://github.com/alpacahq/pymarketstore/pull/29	3	readability	2020-05-09 23:53:50	improve readability of JsonRpcClient, internalize private logic	def request(self, method, **kwargs):	def _rpc_request(self, method, **query):	Encapsulate Private Logic
120	https://github.com/getsentry/sentry/pull/68095	2	readability	2024-04-02 22:14:27	Class methods that are for internal use should begin with a `_`  	 if not self.process_stackframes(buckets):	            if not self._process_stackframes(buckets):	Encapsulate Private Logic
121	https://github.com/jax-ml/jax/pull/305	1	readability	2019-02-02 00:15:00	Underscore-prefixed functions are automatically hidden from generated documentation. `lax` is a semi-public API, so this is a first step towards making its documentation useful.	class OpaqueParam(object):	class _OpaqueParam(object):	Encapsulate Private Logic
122	https://github.com/googleapis/python-bigquery-dataframes/pull/885	9	readability	2024-08-12 21:32:53	rename newly introduced modules to make them private symbolically	package_requirements = utils._get_updated_package_requirements(	package_requirements = _utils._get_updated_package_requirements(	Encapsulate Private Logic
123	https://github.com/intel/cve-bin-tool/pull/826	5	readability	2020-07-23 23:54:59	Improved error handling and readability of extractor	 def clean_file_path(self, filepath):	    @staticmethod     def clean_file_path(filepath):	Include Modifiers and Annotations
124	https://github.com/openfun/django-lti-toolbox/pull/7	4	readability	2023-08-24 13:34:07	Use `@abstractmethod` decorator when needed to make code consistent.	    def _do_on_success(self, lti_request: LTI) -> HttpResponse:	@abstractmethod     def _do_on_success(self, lti_request: LTI) -> HttpResponse:	Include Modifiers and Annotations
125	https://github.com/Azure/azure-kusto-python/pull/476	11	readability	2023-05-17 11:02:03	function signature	def test_run_async_valid_invoker():	    async def test_run_async_valid_invoker():	Include Modifiers and Annotations
126	https://github.com/StanfordVL/OmniGibson/pull/364	9	readability	2024-01-18 22:18:13	Replace timestep parameters with frequency to improve readability and robustness	"action_timestep": 1 / 60.,	"action_frequency": 60,	Clarify Numeric Constants
127	https://github.com/nycdb/nycdb/pull/106	1	readability	2019-07-16 13:58:05	Use underscores in numeric literals to improve readability	pluto_15v1': {'pluto_15v1': 800000},	pluto_15v1': {'pluto_15v1': 800_000},	Clarify Numeric Constants
128	https://github.com/lichess-bot-devs/lichess-bot/pull/506	7	readability	2022-07-29 13:38:31	Also, 1e6 is easier for a human to parse than counting zeros in 1000000.	pre_move_time = int((time.perf_counter_ns() - start_time) / 1000000)	pre_move_time = int((time.perf_counter_ns() - start_time) / 1e6)	Clarify Numeric Constants
129	https://github.com/google/ad-manager-alerter/pull/4	1	readability	2023-03-31 11:12:41	we can use a dictionary instead of multiple if-else statements to map the "method" name to its corresponding functions.	if "download_report" == method:     return report_downloader.download_report()   elif "prepare_bq" == method:     return ml_builder.prepare_bq()   elif "detect_anomalies" == method:     return anomaly_detector.detect_and_notify()   else:	METHODS_MAP = {     "download_report": report_downloader.download_report,     "prepare_bq": ml_builder.prepare_bq,     "detect_anomalies": anomaly_detector.detect_and_notify, }	Replace Lookup with Dict
130	https://github.com/All-Hands-AI/OpenHands/pull/1051	1	readability	2024-04-22 03:32:31	Optimize the get_prompt function by using a dictionary to map ActionType to hints, thus avoiding repetitions and making the code more readable and maintainable.	if current_task is not None:         if latest_action_id == '':             hint = "You haven't taken any actions yet. Start by using `ls` to check out what files you're working with."         elif latest_action_id == ActionType.RUN:             hint = 'You should think about the command you just ran, what output it gave, and how that affects your plan.'         elif latest_action_id == ActionType.READ:             hint = 'You should think about the file you just read, what you learned from it, and how that affects your plan.'         elif latest_action_id == ActionType.WRITE:             hint = 'You just changed a file. You should think about how it affects your plan.'         elif latest_action_id == ActionType.BROWSE:             hint = 'You should think about the page you just visited, and what you learned from it.'         elif latest_action_id == ActionType.THINK:             hint = "Look at your last thought in the history above. What does it suggest? Don't think anymore--take action."         elif latest_action_id == ActionType.RECALL:             hint = 'You should think about the information you just recalled, and how it should affect your plan.'         elif latest_action_id == ActionType.ADD_TASK:             hint = 'You should think about the next action to take.'         elif latest_action_id == ActionType.MODIFY_TASK:             hint = 'You should think about the next action to take.'         elif latest_action_id == ActionType.SUMMARIZE:             hint = ''         elif latest_action_id == ActionType.FINISH:             hint = ''	def get_hint(latest_action_id: str) -> str:     """ Returns action type hint based on given action_id """      hints = {         '': 'You haven\'t taken any actions yet. Start by using `ls` to check out what files you\'re working with.',         ActionType.RUN: 'You should think about the command you just ran, what output it gave, and how that affects your plan.',         ActionType.READ: 'You should think about the file you just read, what you learned from it, and how that affects your plan.',         ActionType.WRITE: 'You just changed a file. You should think about how it affects your plan.',         ActionType.BROWSE: 'You should think about the page you just visited, and what you learned from it.',         ActionType.THINK: 'Look at your last thought in the history above. What does it suggest? Don\'t think anymore--take action.',         ActionType.RECALL: 'You should think about the information you just recalled, and how it should affect your plan.',         ActionType.ADD_TASK: 'You should think about the next action to take.',         ActionType.MODIFY_TASK: 'You should think about the next action to take.',         ActionType.SUMMARIZE: '',         ActionType.FINISH: '',     }     return hints.get(latest_action_id, '')	Replace Lookup with Dict
131	https://github.com/arc53/DocsGPT/pull/530	2	readability	2023-10-09 22:40:10	Scalable Code for Language Support  Introduced a dictionary-based approach for language support, making it more scalable. This ensures that new languages can be added in the future with minimal changes, as opposed to multiple conditional statements.    	if formats == 'py':         functions_dict, classes_dict = extract_py(dir)     elif formats == 'js':         functions_dict, classes_dict = extract_js(dir)     elif formats == 'java':         functions_dict, classes_dict = extract_java(dir)	 extraction_functions = {     'py': extract_py,     'js': extract_js,     'java': extract_java     }	Replace Lookup with Dict
132	https://github.com/luong-komorebi/Awesome-Linux-Software/pull/732	1	readability	2023-06-27 08:58:13	This commit includes modifications to the code in asort.py to improve code formatting and readability according to the PEP 8 style guidelines. The changes include consistent indentation, proper spacing around operators, proper capitalization of comments, and using parentheses for print statements for compatibility with Python 3.    Please note that these changes are purely stylistic and do not affect the functionality of the script. The goal is to enhance code maintainability and readability.	for item in sorted(items, key=lambda x: regex.findall(x.upper())[len(regex.findall(x.upper()))-1]):	for item in sorted(items, key=lambda x: regex.findall(x.upper())[-1]):	Clarify Positional Indexing
133	https://github.com/openSUSE/opi/pull/130	25	readability	2023-05-19 11:28:54	 `opi/plugins/yandex-browser.py`  - get last part of split string with `[-1]` instead of `[2]`   	release = option.split('-')[2]	release = option.split('-')[-1]	Clarify Positional Indexing
134	https://github.com/great-expectations/great_expectations/pull/6444	16	readability	2022-11-29 07:48:27	* Make `ParameterBuilder.get_batch_ids()` use the  latest  `Batch` more reliably.  	batch_ids = batch_ids[0:limit]	batch_ids = batch_ids[-limit:]	Clarify Positional Indexing
135	https://github.com/apache/airflow/pull/18523	2	readability	2021-09-26 08:55:34	catch exception SerializedDagNotFound and raise NotFound	class AirflowNotFoundException(AirflowException):	class AirflowNotFoundException(AirflowException, ApiConnextionNotFound):	Prefer Specific Exception Handling
136	https://github.com/thumbor/thumbor/pull/1554	5	readability	2023-06-20 15:46:46	Module tests.fixtures.transformer_test_data  tests/fixtures/transformer_test_data.py:79:8: W0719: Raising too general exception: Exception (broad-exception-raised)  ```  	raise Exception("x")  # pylint: disable=broad-exception-raised	        raise IOError("some-io-error")	Prefer Specific Exception Handling
137	https://github.com/quotientbot/quotient/pull/108	2	readability	2023-05-26 19:32:28	Avoid using bare `except`  	 except:	                except discord.HTTPException:	Prefer Specific Exception Handling
138	https://github.com/Azure/azure-kusto-python/pull/476	11	readability	2023-05-17 11:02:03	inline	http_trace_attributes = Span.create_http_attributes(url=endpoint, method="POST", headers=request_headers)         response = await MonitoredActivity.invoke_async(invoker, name_of_span="KustoClient.http_post", tracing_attributes=http_trace_attributes)	        response = await MonitoredActivity.invoke_async(             invoker, name_of_span="KustoClient.http_post", tracing_attributes=Span.create_http_attributes("POST", endpoint, request_headers)         )	Inline Temporary Variable
139	https://github.com/GenericMappingTools/pygmt/pull/751	1	readability	2020-12-19 15:23:45	When I worked on PR #750 based on the implemention of the `grdview` function, I found that the `grdview` codes are a little difficult to understand. The main reason is that `contextlib.ExitStack()` is new to me. Another reason is that these two codes `fname = stack.enter_context(file_context)` and `arg_str = " ".join([fname, build_arg_string(kwargs)])` are separated by the long `if` block.     	drapefile = stack.enter_context(drape_context)                             kwargs["G"] = drapefile	                            kwargs["G"] = stack.enter_context(drape_context)	Inline Temporary Variable
140	https://github.com/HazyResearch/fonduer/pull/237	1	readability	2019-04-04 05:17:52	`all_input_tokens` and `all_spaces` should not be member variables. First time call `custom_tokenizer()` is fine, but the second time call returns an unexpected result.	self.all_input_tokens = []	all_input_tokens = []	Extract Field into Local Variable
141	https://github.com/JaxGaussianProcesses/GPJax/pull/138	7	readability	2022-11-06 21:16:35	code readability improvements [e.g., replacing long attributes such as `self.prior.kernel(...)` with `kernel = self.prior.kernel` then `kernel(...)`].	gram, cross_covariance = (             self.prior.kernel.gram,             self.prior.kernel.cross_covariance,         )	kernel = self.prior.kernel         gram = kernel.gram	Extract Field into Local Variable
142	https://github.com/HazyResearch/fonduer/pull/237	1	readability	2019-04-04 05:17:52	`doc = custom_tokenizer()` is not quite easy to understand because `TokenPreservingTokenizer.__call__` has a different API from spaCy's `Tokenizer.__call__`, which takes a string as an input.  	doc = custom_tokenizer()	            doc = custom_tokenizer(sentence_batch)	Include type hints and name parameters
144	https://github.com/Lightning-AI/pytorch-lightning/pull/17232	1	readability	2023-04-10 14:02:10	with grouping make sure that the conditions is clear	 or not _TORCH_GREATER_EQUAL_2_0     # check packaging because of https://github.com/microsoft/DeepSpeed/pull/2771     # remove the packaging check when min version is >=0.8.1     and RequirementCache("deepspeed")     and RequirementCache("packaging>=20.0")	or (         not _TORCH_GREATER_EQUAL_2_0         and RequirementCache("deepspeed")         # check packaging because of https://github.com/microsoft/DeepSpeed/pull/2771         # remove the packaging check when min version is >=0.8.1         and RequirementCache("packaging>=20.0")     )	Add Parentheses for Clarity
145	https://github.com/shadow/tornettools/pull/66	1	readability	2022-02-15 21:32:29	Group tuples for readability	plot_func, d = draw_cdf, db['data'][0]	 (plot_func, d) = draw_cdf, db['data'][0]	Add Parentheses for Clarity
146	https://github.com/spack/spack/pull/31936	1	readability	2022-08-05 10:36:33	Invert check and exit early to dedent one level when requiring user confirmation 	def get_user_confirmation_for_overwrite(concrete_specs, args):     installed = list(filter(lambda x: x, map(spack.store.db.query_one, concrete_specs)))     if not args.yes_to_all:         display_args = {"long": True, "show_flags": True, "variants": True}          if installed:             tty.msg("The following package specs will be " "reinstalled:\n")             spack.cmd.display_specs(installed, **display_args)	def require_user_confirmation_for_overwrite(concrete_specs, args):     if args.yes_to_all:         return	Apply Early Return
147	https://github.com/packit/packit-service/pull/1191	1	readability	2021-08-09 07:07:11	Long ternary expressions in keyword arguments are hard to follow. Break  them out in local variables.    	url=url                 if url                 else None,  # must use the http or https scheme, cannot be ""                 status=state_to_set                 if isinstance(state_to_set, GithubCheckRunStatus)                 else GithubCheckRunStatus.completed,                 conclusion=state_to_set                 if isinstance(state_to_set, GithubCheckRunResult)                 else None,	status = (                 state_to_set                 if isinstance(state_to_set, GithubCheckRunStatus)                 else GithubCheckRunStatus.completed             )             conclusion = (                 state_to_set if isinstance(state_to_set, GithubCheckRunResult) else None             ) url=url or None,  # must use the http or https scheme, cannot be ""                 status=status,                 conclusion=conclusion,	Break Complex Ternary Expressions
148	https://github.com/oppia/oppia/pull/4171	1	readability	2017-12-09 13:33:09	This PR replaces usages of constants with explicit variable building at each test method. This keeps future writers from having to scroll up 200+ lines just to see what values are actually being used.	SIMPLE_ANSWER_LIST = (['A'] * 12 + ['B'] * 11 + ['C'] * 10 + ['D'] * 9 +                           ['E'] *  8 + ['F'] *  7 + ['G'] *  6 + ['H'] * 5 +                           ['I'] *  4 + ['J'] *  3 + ['K'] *  2 + ['L']) answer_dicts_list = [             self._create_answer_dict(a) for a in self.SIMPLE_ANSWER_LIST]	answers = (             ['A'] * 12 + ['B'] * 11 + ['C'] * 10 + ['D'] * 9 +             ['E'] *  8 + ['F'] *  7 + ['G'] *  6 + ['H'] * 5 +             ['I'] *  4 + ['J'] *  3 + ['K'] *  2 + ['L'])         answer_dicts_list = [self._create_answer_dict(a) for a in answers]	Extract Constants into Local Variables
149	https://github.com/rpm-software-management/rpmlint/pull/1207	1	readability	2024-03-05 08:16:16	Hypothetically, an object with any type passed to this function with an encode, or a decode method could return True instead of raising a TypeError. This may never happen in real life, but still I feel it can be written in a different way.  I've refactored the function to make it more readable, and safer by using the isinstance function in Python.	 try:         if hasattr(s, 'decode'):             s.decode('utf-8')         elif hasattr(s, 'encode'):             s.encode('utf-8')         else:             unexpected = type(s).__name__             raise TypeError(                 f'Expected str/unicode/bytes, not {unexpected}')	if not isinstance(s, (bytes, str)):         unexpected = type(s).__name__         raise TypeError(f'Expected str/bytes, not {unexpected}')      try: if isinstance(s, bytes):             s.decode('utf-8')	Replace Duck Typing with Explicit Type Check
151	https://github.com/mirumee/ariadne-codegen/pull/28	6	readability	2022-11-04 13:10:29	wraps generated query strings in gql lambda    	self.class_def.lineno = len(self.imports) + 1  if not self.class_def.body:             self.class_def.body.append(ast.Pass())         return ast.Module(body=self.imports + [self.class_def], type_ignores=[])	gql_lambda = generate_trivial_lambda(self.gql_lambda_name, "q")         gql_lambda.lineno = len(self.imports) + 1         self.class_def.lineno = len(self.imports) + 2         if not self.class_def.body:             self.class_def.body.append(ast.Pass()) return ast.Module(             body=self.imports + [gql_lambda, self.class_def],             type_ignores=[],         )	Extract Lambda into a Named Function
152	https://github.com/feast-dev/feast/pull/1667	4	readability	2021-06-25 22:19:23	Made inferencing methods more consistent with each other. Grouped inferencing statements together in apply methods for easier readability   	 actual_1 = infer_entity_value_type_from_feature_views(             [Entity(name="id")], [fv1]         )         actual_2 = infer_entity_value_type_from_feature_views(             [Entity(name="id")], [fv2]         )         assert actual_1 == [Entity(name="id", value_type=ValueType.INT64)]         assert actual_2 == [Entity(name="id", value_type=ValueType.STRING)]	actual_1 = Entity(name="id")         actual_2 = Entity(name="id")          update_entities_with_inferred_types_from_feature_views([actual_1], [fv1])         update_entities_with_inferred_types_from_feature_views([actual_2], [fv2])         assert actual_1 == Entity(name="id", value_type=ValueType.INT64)         assert actual_2 == Entity(name="id", value_type=ValueType.STRING)	Clarify Test Intent
153	https://github.com/ansys/pyaedt/pull/2655	12	readability	2023-03-21 13:27:57	Improved codacy	_, units = decompose_variable_value(self.components[el].parameters["Length"])	val, units = decompose_variable_value(self.components[el].parameters["Length"])	Improve codacy
154	https://github.com/TheAlgorithms/Python/pull/4510	1	readability	2021-07-12 06:16:31	This removes lambdas	letters = traverse_tree(root, "") with open(file_path) as f:         while True:             c = f.read(1)             if not c:                 break             le = list(filter(lambda l: l.letter == c, letters))[0]             print(le.bitstring, end=" ")	letters = {         k: v for letter in traverse_tree(root, "") for k, v in letter.bitstring.items()     }     print(f"Huffman Coding  of {file_path}: ")     with open(file_path) as f:         while True:             c = f.read(1)             if not c:                 break	Replace Lookup with Dict
156	https://github.com/aesara-devs/aehmc/pull/99	15	readability	2023-06-22 17:54:52	Improve readability by packing frequently used variables into namedtuples.	def new_state(     q: TensorVariable, logprob_fn: Callable ) -> Tuple[TensorVariable, TensorVariable, TensorVariable]:	def new_state(q: TensorVariable, logprob_fn: Callable) -> IntegratorState:	Group Related Values into Named Structures
157	https://github.com/openSUSE/opi/pull/130	25	readability	2023-05-19 11:28:54	`default_answer` for `ask_yes_or_no()` is now `'y'` (**L423**, plugins) *** 	def ask_yes_or_no(question, default_answer):	def ask_yes_or_no(question, default_answer='y'):	Add Default Argument
158	https://github.com/helmholtz-analytics/heat/pull/1150	80	readability	2023-06-20 11:50:33	In many places, an f-string could have been used but it was not used, So I used f-strings in those places. 	"Number of samples x and y samples mismatch, got {}, {}".format(                     x.shape[0], y.shape[0]                 )	f"Number of samples x and y samples mismatch, got {x.shape[0]}, {y.shape[0]}"	Improve String Formatting
159	https://github.com/networkx/networkx/pull/5144	3	readability	2021-10-25 16:42:06	I also made a few other minor tweaks (use f-strings, etc.) 	"No node on the input graph is labeled by '" + label_name + "'."	f"No node on the input graph is labeled by '{label_name}'."	Improve String Formatting
160	https://github.com/onnela-lab/forest/pull/67	1	readability	2022-01-24 19:57:46	Update function `gps_quality_check` in `traj2stats` module to match PEP8 styling.	gps_path = study_folder + '/' + str(ID) + '/gps'	    gps_path = f"{study_folder}/{study_id}/gps"	Improve String Formatting
161	https://github.com/lichess-bot-devs/lichess-bot/pull/506	7	readability	2022-07-29 13:38:31	Use f-strings instead of % syntax	raise Exception("The engine %s file does not exist." % engine)	  raise Exception(f"The engine {engine} file does not exist.")	Improve String Formatting
162	https://github.com/microsoft/promptbase/pull/19	1	readability	2024-01-24 21:08:16	hanged concatenation of strings to f-strings to improve readability and unify the code	name = options["problems"] + "/" + options["prompt_name"]	        name = f"{options['problems']}/{options['prompt_name']}"	Improve String Formatting
163	https://github.com/rany2/edge-tts/pull/260	1	readability	2024-10-09 08:19:01	Use f-strings on constants for better readability	WSS_URL = (     "wss://speech.platform.bing.com/consumer/speech/synthesize/"     + "readaloud/edge/v1?TrustedClientToken="     + TRUSTED_CLIENT_TOKEN )	WSS_URL = f"wss://{BASE_URL}/edge/v1?TrustedClientToken={TRUSTED_CLIENT_TOKEN}"	Improve String Formatting
164	https://github.com/pantsbuild/pants/pull/9990	1	readability	2020-06-08 16:58:04	Use f-strings, improve code readability.	Multiple cmd line flags specified for option {} in {}".format(                     dest, self._scope_str()                 )	f"Multiple cmd line flags specified for option {dest} in {self._scope_str()}"	Improve String Formatting
165	https://github.com/keras-team/keras/pull/17170	1	readability	2022-10-26 21:46:49	Changed .format to f-string for better readability and performance as per PEP 498	"lower bound, got {}".format(factor)	                f"lower bound, got {factor}"	Improve String Formatting
166	https://github.com/jax-ml/jax/pull/19135	1	readability	2024-01-02 21:53:11	changed concatenation of strings to f-strings to improve readability and unify with the rest of code	full_name = "jax.numpy.fft." + func_name	  full_name = f"jax.numpy.fft.{func_name}"	Improve String Formatting
167	https://github.com/huggingface/transformers/pull/29785	1	readability	2024-03-22 12:23:16	replaced concatenation to f-strings to improve readability and unify	raise ValueError("invalid truncation strategy:" + str(self.truncation_side))	                raise ValueError(f"invalid truncation strategy:{self.truncation_side}")	Improve String Formatting
168	https://github.com/google/bumble/pull/384	2	readability	2023-12-28 17:24:26	сhanged concatenation of strings to f-strings to improve readability and unify with the rest of code	print("SET_PROTOCOL report_id: " + str(protocol))	        print(f"SET_PROTOCOL report_id: {protocol}")	Improve String Formatting
169	https://github.com/scikit-image/scikit-image/pull/4110	11	readability	2019-08-24 16:17:34	use fstrings for better readability	print('Image shape: {}\nLabels: {}'.format(image.shape, labels))	print(f"Image shape: {image.shape}\nLabels: {labels}")	Improve String Formatting
170	https://github.com/apache/airflow/pull/35453	1	readability	2023-11-05 19:31:45	Refactor DAG_SCRIPT variable in test_trigger_dagrun for readability	DAG_SCRIPT = (     "from datetime import datetime\n\n"     "from airflow.models import DAG\n"     "from airflow.operators.empty import EmptyOperator\n\n"     "dag = DAG(\n"     f"dag_id='{TRIGGERED_DAG_ID}', \n"     "default_args={'start_date': datetime(2019, 1, 1)}, \n"     "schedule=None,\n"     ")\n"     'task = EmptyOperator(task_id="test", dag=dag)'	DAG_SCRIPT = f"""\ from datetime import datetime from airflow.models import DAG from airflow.operators.empty import EmptyOperator dag = DAG(     dag_id='{TRIGGERED_DAG_ID}',     default_args={{'start_date': datetime(2019, 1, 1)}},     schedule_interval=None	Improve String Formatting
171	https://github.com/openwisp/openwisp-radius/pull/134	8	readability	2020-07-21 19:43:06	Improve readability + formatting	logging.info(                     'no corresponding user found ' 'for username: {}'.format(username)                 )	logging.info(f'no corresponding user found for username: {username}')	Improve String Formatting
172	https://github.com/pantsbuild/pants/pull/12384	1	readability	2021-07-20 21:01:18	Tweaks markers for readability	result += markers_lookup         result += ")"	result += f"{markers_lookup})"	Improve String Formatting
173	https://github.com/helmholtz-analytics/heat/pull/1211	13	readability	2023-10-12 04:37:21	Reformatted files for better readability and according to latest Python standards by using f-strings instead of the old literal formatting method. To do this I used the automated tool [Flynt]	 "Input needs to be a scalar DNDarray,but was found to be {}d DNDarray".format(x.ndim)	f"Input needs to be a scalar DNDarray,but was found to be {x.ndim}d DNDarray"	Improve String Formatting
174	https://github.com/prowler-cloud/prowler/pull/3227	5	readability	2023-12-28 07:51:01	hanged concatenation of strings to f-strings to improve readability	intermediate = key + " : " + value	intermediate = f"{key} : {value}"	Improve String Formatting
175	https://github.com/timschumi/tumbot/pull/47	17	readability	2020-05-26 19:42:30	moved every string concatinatin of to an f-String    	search = "%" + search + "%"	        search = f"%{search}%"	Improve String Formatting
176	https://github.com/lichess-bot-devs/lichess-bot/pull/506	7	readability	2022-07-29 13:38:31	Shorten lines with string bool expressions	return f'{self.challenger_title + " " if self.challenger_title else ""}{self.challenger_name}' 	        return f'{self.challenger_title or ""} {self.challenger_name}'.strip()	Improve String Formatting
177	https://github.com/pandas-dev/pandas/pull/37718	1	readability	2020-11-09 18:57:09	Improve readability of expected outputs using dedent in ``pandas/tests/io/formats/test_to_string.py``	 expected = "months\n0 2016-01\n1 2016-02"	    expected = dedent(         """\         months         0 2016-01         1 2016-02"""     )	Improve String Formatting
178	https://github.com/mirumee/ariadne-codegen/pull/28	6	readability	2022-11-04 13:10:29	formats generated query strings 	query = (                 "query CustomQuery($id: ID!, $param: String) {\\n"                 "  query1(id: $id) {\\n"                 "    field1\\n"                 "    field2 {\\n"                 "      fieldb\\n"                 "    }\\n"                 "    field3\\n"                 "  }\\n"                 "}\\n"	query = gql(                 """                 query CustomQuery($id: ID!, $param: String) {                   query1(id: $id) {                     field1                     field2 {                       fieldb                     }                     field3                   }                 }                 """	Improve String Formatting
179	https://github.com/HathorNetwork/hathor-core/pull/562	1	readability	2023-04-27 18:07:57	move indentation for readability without changing the behavior.	 if script_type_out:                 if script_type_out.address in self.keys:                     self.log.debug('detected tx output', tx=tx.hash_hex, index=index, address=script_type_out.address)	if not script_type_out:                 # it's the only one we know, so log warning                 self.log.warn('unknown script')                 continue             if script_type_out.address not in self.keys:                 continue	Reduce Conditional Nesting
180	https://github.com/PennyLaneAI/pennylane/pull/4379	1	readability	2023-07-24 17:07:14	I have made some stylistic improvements	for t in tapes:    shape_and_dtype = _create_shape_dtype_struct(t, device)    if len(t.trainable_params) == 1:       shape_dtypes.append(shape_and_dtype)    else:       num_measurements = len(t.measurements)       if num_measurements == 1:          s = [shape_and_dtype for _ in range(len(t.trainable_params))]          shape_dtypes.append(tuple(s))       else:          s = [tuple(_s for _ in range(len(t.trainable_params))) for _s in shape_and_dtype]          shape_dtypes.append(tuple(s))	shape_dtype = _jac_shape_dtype_struct(tape, device) for param_idx in original_trainable_parameters:    if param_idx in tape.trainable_params:       p_jac = jacs    p_jac = _empty_jacs_for_shape(shape_dtype)    intermediate_jacs.append(p_jac)    return tuple(intermediate_jacs)	Reduce Conditional Nesting
181	https://github.com/google/clusterfuzz/pull/1355	1	readability	2020-01-21 20:36:05	merge insertErrors logic.	if not result:            result = response else:    new_errors = response.get('insertErrors')    if not new_errors:       continue     if result.get('insertErrors'):       result['insertErrors'].extend(new_errors)    else:       result['insertErrors'] = new_errors	if not result:            result = response    continue  new_errors = response.get('insertErrors') if not new_errors:    continue  result.setdefault('insertErrors', []).extend(new_errors)	Reduce Conditional Nesting
182	https://github.com/All-Hands-AI/OpenHands/pull/3873	2	readability	2024-09-16 18:13:52	Consolidated into a single if..elif structure, replacing multiple parallel if statements  	elif isinstance(event, MessageAction):       if event.source == EventSource.USER:             logger.info(                  event,                  extra={'msg_type': 'ACTION', 'event_source': EventSource.USER},             )             if self.get_agent_state() != AgentState.RUNNING:                  await self.set_agent_state_to(AgentState.RUNNING)	if isinstance(event, Action):      await self._handle_action(event) elif isinstance(event, Observation):      await self._handle_observation(event)	Reduce Conditional Nesting
183	https://github.com/aws/aws-lambda-builders/pull/433	5	readability	2023-02-02 19:53:15	workflow conditionals/IFs cleanup: my main issue with the workflow was the accelerate workflow stuff was a bit complicated, with a bunch of conditions and nested ifs that went a few levels deep. In my proposed changes for the workflow, IFs would only go a single level deep.    	if self.download_dependencies:             actions += [install_action, CleanUpAction(self.dependencies_dir)]             if self.combine_dependencies:                 # Auto dependency layer disabled, first build                 actions += [                     esbuild_with_deps,                     MoveDependenciesAction(source_dir, scratch_dir, self.dependencies_dir),                 ]             else:                 # Auto dependency layer enabled, first build                 actions += esbuild_no_deps + [MoveDependenciesAction(source_dir, scratch_dir, self.dependencies_dir)]	 # if we downloaded dependencies, we have to update dependencies_dir             self.actions += [                 CleanUpAction(self.dependencies_dir),                 MoveDependenciesAction(self.source_dir, self.scratch_dir, self.dependencies_dir),             ]	Reduce Conditional Nesting
185	https://github.com/home-assistant/core/pull/81040	1	readability	2022-10-26 19:37:39	Improve readability by reducing indentation.    	if self.preset_modes and preset_mode in self.preset_modes:             _LOGGER.debug("Changing preset mode to %s", preset_mode)             if preset_mode == PRESET_MODE_AUTO:                 # force set it to manual first                 self._ccb.comfoconnect.cmd_rmi_request(CMD_MODE_MANUAL)                 # now set it to auto so any previous percentage set gets undone                 self._ccb.comfoconnect.cmd_rmi_request(CMD_MODE_AUTO)         else:	if not self.preset_modes or preset_mode not in self.preset_modes:             raise ValueError(f"Invalid preset mode: {preset_mode}")          _LOGGER.debug("Changing preset mode to %s", preset_mode)         if preset_mode == PRESET_MODE_AUTO:             # force set it to manual first             self._ccb.comfoconnect.cmd_rmi_request(CMD_MODE_MANUAL)             # now set it to auto so any previous percentage set gets undone             self._ccb.comfoconnect.cmd_rmi_request(CMD_MODE_AUTO)	Reduce Conditional Nesting
186	https://github.com/helmholtz-analytics/heat/pull/1150	80	readability	2023-06-20 11:50:33	if conditions could be merged. So, I merged them. 	if self.tol is not None:       if diff < self.tol:             self.n_iter = i + 1             self.__theta = theta             break	if self.tol is not None and diff < self.tol:      self.n_iter = i + 1      self.__theta = theta      break 	Reduce Conditional Nesting
187	https://github.com/SuperSupermoon/MedViLL/pull/1	1	readability	2022-01-22 07:22:36	For better readability, I placed common loop of if-else, outside.	if args.img_encoding == 'random_sample':             self.img_encoder = pixel_random_sample(args)             for p in self.img_encoder.parameters():                 p.requires_grad = False             for c in list(self.img_encoder.children())[5:]:                 for p in c.parameters():                     p.requires_grad = True         elif args.img_encoding == 'fully_use_cnn':                 self.img_encoder = pixel_full_sampling()             for p in self.img_encoder.parameters():                 p.requires_grad = False             for c in list(self.img_encoder.children())[5:]:                 for p in c.parameters():                     p.requires_grad = True	if args.img_encoding == 'random_sample':             self.img_encoder = pixel_random_sample(args)  elif args.img_encoding == 'fully_use_cnn':                 self.img_encoder = pixel_full_sampling() for p in self.img_encoder.parameters():             p.requires_grad = False         for c in list(self.img_encoder.children())[5:]:             for p in c.parameters():                 p.requires_grad = True	Reduce Conditional Nesting
188	https://github.com/arc53/DocsGPT/pull/530	2	readability	2023-10-09 22:40:10	Simplified Conditional for API Call  Reduced redundant conditions for determining when to call the OpenAI API.   	 if len(sys.argv) > 1:             if yes:                 call_openai_api(docs, folder_name)             else:                 get_user_permission(docs, folder_name)	if len(sys.argv) > 1 and yes:             call_openai_api(docs, folder_name)	Reduce Conditional Nesting
189	https://github.com/spack/spack/pull/31936	1	readability	2022-08-05 10:36:33	Rework conditional in install_from_active_environment to reduce nesting in the function	if specs:         if not reporter.filename:             reporter.filename = default_log_file(specs[0])         reporter.specs = specs          tty.msg("Installing environment {0}".format(env.name))         with reporter("build"):             env.install_all(**install_kwargs)	if not specs:         msg = "{0} environment has no specs to install".format(env.name)         tty.msg(msg)         return      if not reporter.filename:         reporter.filename = default_log_file(specs[0])	Reduce Conditional Nesting
190	https://github.com/lichess-bot-devs/lichess-bot/pull/506	7	readability	2022-07-29 13:38:31	Simplify move overhead calculation	wtime = game.state["wtime"] btime = game.state["btime"] pre_move_time = int((time.perf_counter_ns() - start_time) / 1000000) if board.turn == chess.WHITE:     wtime = max(0, wtime - move_overhead - pre_move_time) else:     btime = max(0, btime - move_overhead - pre_move_time) 	pre_move_time = int((time.perf_counter_ns() - start_time) / 1e6) overhead = pre_move_time + move_overhead wb = "w" if board.turn == chess.WHITE else "b" game.state[f"{wb}time"] = max(0, game.state[f"{wb}time"] - overhead)	Reduce Conditional Nesting
191	https://github.com/deepspeedai/DeepSpeed/pull/1510	1	readability	2021-11-02 13:14:39	The only point to using it is with `break`. (but it doesn't lead to a bug, just a harder to understand the code) So I'm proposing to remove the `else` control and just run the code in its branch normally since it *always* gets executed as there is no `break` statement.    And the objective of this code is to always be run if I understand it correctly. So let's make it loud and clear.   	else:                 self.parts = ds_utils.partition_balanced(weights=binary_weights,                                                          num_parts=num_stages)	self.parts = ds_utils.partition_balanced(weights=binary_weights,                                                      num_parts=num_stages)	Unwrap unnecessary else
192	https://github.com/openSUSE/opi/pull/130	25	readability	2023-05-19 11:28:54	simplify if statement for setting the `weight` of a result	if is_official_project(binary['project']):      weight += 20000 elif is_personal_project(binary['project']):      weight += 0 else:      weight += 10000	if is_official_project(binary['project']):     weight += 20000 elif not is_personal_project(binary['project']):     weight += 10000	Unwrap unnecessary else
193	https://github.com/django-cms/django-cms/pull/7503	2	readability	2023-02-13 10:19:50	Improved code readability by removing unnecessary else statement.     	else:         return tpl.nodelist	    return tpl.nodelist	Unwrap unnecessary else
194	https://github.com/thumbor/thumbor/pull/1554	5	readability	2023-06-20 15:46:46	Module thumbor.utils  thumbor/utils.py:92:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)  	else:         return color_space.strip()	 return color_space	Unwrap unnecessary else
195	https://github.com/langflow-ai/langflow/pull/3985	1	readability	2024-10-01 18:38:22	This pull request refactors the error handling in the OutputParser component to improve code readability. The changes include updating the error messages and removing unnecessary else statements. These improvements enhance the maintainability of the codebase and make it easier to understand and debug any potential issues.	else:             raise ValueError("Unsupported or missing parser")	        msg = "Unsupported or missing parser"         raise ValueError(msg)	Unwrap unnecessary else
196	https://github.com/JulianFrattini/cira/pull/73	1	readability	2023-10-30 22:00:53	In addition, parts of the code were refactored to improve its readability.	if junctor_map[nodepair] is None:             junctor_map[nodepair] = previous         else:             previous = junctor_map[nodepair]	if junctor_map[nodepair] is None:             junctor_map[nodepair] = previous  previous = junctor_map[nodepair]	Unwrap unnecessary else
197	https://github.com/gem/oq-engine/pull/9991	1	readability	2024-09-30 08:31:12	Slightly improve readability in reading finite-fault data when the shakemap is missing	else:       shakemap = []	        return load_rupdic_from_finite_fault(usgs_id, mag, products)	Unwrap unnecessary else
198	https://github.com/nasa/ncompare/pull/264	2	readability	2024-12-23 15:05:30	Combined checks for str, int, and tuple into a single isinstance call using a tuple of types. This reduces redundancy, improves clarity and performance . The TypeError is preserved to handle unsupported types.	def coerce_to_str(some_object: Union[str, int, tuple]):     if isinstance(some_object, str):         return some_object     if isinstance(some_object, int):         return str(some_object)     if isinstance(some_object, tuple):         return str(some_object) 	def coerce_to_str(some_object: Union[str, int, tuple]) -> str:     if isinstance(some_object, (str, int, tuple)):	Collapse Boolean Return
199	https://github.com/huggingface/transformers/pull/8903	1	readability	2020-12-02 17:07:43	decouples attribute assignment from code logic	if not self.args.model_parallel:      self.model = model.to(args.device) if model is not None else None else:      self.model = model if model is not None else None	if model is not None and not self.args.model_parallel:      model = model.to(args.device)  self.model = model	Unwrap unnecessary else
200	https://github.com/OpenChemistry/mongochemserver/pull/163	1	readability	2019-10-28 15:15:27	This modifies some of the logic blocks to improve readability.    It also skips a conversion from cjson to cjson in Avogadro2, and  just keeps the cjson that was passed in.	if cjson or not using_2d_format:	        elif not using_2d_format:	Prefer Idiomatic Conditions
201	https://github.com/DIRACGrid/DIRAC/pull/6505	9	readability	2022-11-07 12:32:52	simplified if statement for checking list/string len  	if not len(dictList) > 0:	        if not dictList:	Prefer Idiomatic Conditions
202	https://github.com/nasa/ncompare/pull/264	2	readability	2024-12-23 15:05:30	Remove unneeded code This function is no longer needed.	shared = len(set_a.intersection(set_b))	    both = len(set_a & set_b)	Prefer Idiomatic Conditions
203	https://github.com/uxlfoundation/scikit-learn-intelex/pull/330	2	readability	2020-10-09 10:32:16	This pull request resolves the remaining "Use of len(sequence) as condition value in Python" code quality issues found in codefactor.io, with the intention of making progress towards issue #316.    Changes proposed in this pull request:  - Replace `len(jparams)` with `jparams` in condition in `generator/wrapper_gen.py`  - Replace `len(ifcs)` with `ifcs` in condition in `generator/gen_daal4py.py`  - Replace `len(ns)` with `len(ns) != 0` for readability in `generator/gen_daal4py.py`	if len(jparams):	        if jparams:	Prefer Idiomatic Conditions
206	https://github.com/home-assistant/core/pull/54251	1	readability	2021-08-09 22:11:21	avoid use of logical OR |  Whilst using a logical OR | for this felt novel at the time, it has now tripped up two codereviewers on separate occasions who appropriately reach the conclusion that it's likely a mistake. It's not a functionality mistake, but it is a readability mistake. Lets not waste anyone else's time.	if url and (             _set_webhook(  _build_url(                     device,                     url, camera,             )             | _set_webhook(  _build_url(                     device,                     url,  KEY_WEB_HOOK_STORAGE_ENABLED,                 camera,             )         ):             hass.async_create_task(client.async_set_camera(camera_id, camera))	if url:             set_motion_event = _set_webhook(                 _build_url(                     device,                     url,  KEY_WEB_HOOK_NOTIFICATIONS_ENABLED,                 camera,             )  _build_url(                     device,                     url, KEY_WEB_HOOK_STORAGE_ENABLED,                 camera,             ) if set_motion_event or set_storage_event:                 hass.async_create_task(client.async_set_camera(camera_id, camera))	Prefer Idiomatic Conditions
207	https://github.com/nasa-jpl/rosa/pull/13	1	readability	2024-08-23 15:58:28	Improved code readability by using a single 'else' block to handle out-of-bounds cases.  	elif x < 0 or x > 11 or y < 0 or y > 11:	    else:	Prefer Idiomatic Conditions
208	https://github.com/scylladb/scylla-ccm/pull/588	1	readability	2024-07-10 03:32:45	group the conditions with parenthesis for better readability.  	all_unified_packages = [name for name in files_in_bucket if f'{scylla_product}-{arch}-unified-package' in name or                             (f'{scylla_product}-unified' in name and arch in name) or                             (f'{scylla_product}-unified' in name and all([known_arch not in name for known_arch in known_archs]))                             ]	all_unified_packages = [name for name in files_in_bucket if                             (                                 # let's accept all unified packages namings:                                 # 'scylla-x86_64-unified-package-5.1.2-0.20221225.4c0f7ea09893-5.1.2.0.20221225.4c0f7ea09893.tar.gz'                                 # 'scylla-x86_64-unified-package-5.1.3-0.20230112.addc4666d502-5.1.3.0.20230112.addc4666d502.tar.gz'                                 (f'{scylla_product}-{arch}-unified-package' in name) or                                 # newer versions (6.0/2024.2 and up) might look like:                                 # 'scylla-unified-package-6.0.0~rc0-0.20231219.c7cdb16538f2.x86_64.tar.gz'                                 (f'{scylla_product}-unified' in name and arch in name) or                                 # older versions unified packages might look like                                 # 'scylla-unified-package-4.3.0~rc0-0.20220810.86a6c1fb2b79.tar.gz'                                 (f'{scylla_product}-unified' in name and all([known_arch not in name for known_arch in known_archs]))                             )]	Add Parentheses for Clarity
209	https://github.com/VRSEN/agency-swarm/pull/155	1	readability	2024-11-13 00:47:11	simplified add_tool for improved readability	if issubclass(tool, FileSearch):             # check that tools name is not already in tools             for t in self.tools:                 if issubclass(t, FileSearch):                     return             self.tools.append(tool)         elif issubclass(tool, CodeInterpreter):             for t in self.tools:                 if issubclass(t, CodeInterpreter):                     return             self.tools.append(tool)         elif issubclass(tool, Retrieval):             for t in self.tools:                 if issubclass(t, Retrieval):                     return             self.tools.append(tool)	subclasses = [FileSearch, CodeInterpreter, Retrieval]         for subclass in subclasses:             if issubclass(tool, subclass):                 if not any(issubclass(t, subclass) for t in self.tools):                     self.tools.append(tool)                 return 	Prefer Idiomatic Iteration
210	https://github.com/helmholtz-analytics/heat/pull/1150	80	readability	2023-06-20 11:50:33	Replaced a few nested for loops with itertools.product	for t in range(1, 3):         for sp in range(2):             a = ht.random.random((n, n), split=sp)             qr = a.qr(tiles_per_proc=t)	for t, sp in itertools.product(range(1, 3), range(2)):         a = ht.random.random((n, n), split=sp)         qr = a.qr(tiles_per_proc=t)	Prefer Idiomatic Iteration
211	https://github.com/helmholtz-analytics/heat/pull/1150	80	readability	2023-06-20 11:50:33	In many places, an f-string could have been used but it was not used, So I used f-strings in those places. 	# keys as one_hot         keys = []         for i in range(50):             keys.append([1, 0, 0])         for i in range(50, 100):             keys.append([0, 1, 0])         for i in range(100, 150):             keys.append([0, 0, 1])	keys = [[1, 0, 0] for _ in range(50)]         keys.extend([0, 1, 0] for _ in range(50, 100))         keys.extend([0, 0, 1] for _ in range(100, 150))	Prefer Idiomatic Iteration
212	https://github.com/PennyLaneAI/pennylane/pull/4379	1	readability	2023-07-24 17:07:14	Switching some iterates and append patterns with function + tuple with generator pattern.    	for t in tapes:         shape_and_dtype = _create_shape_dtype_struct(t, device)         shape_dtypes.append(shape_and_dtype)     return tuple(shape_dtypes)	return tuple(jax.ShapeDtypeStruct(tuple(s), d) for s, d in zip(shape, tape_dtype))	Prefer Idiomatic Iteration
213	https://github.com/DIRACGrid/DIRAC/pull/6505	9	readability	2022-11-07 12:32:52	simplify loop with `any` call    	for possibleMsg in ["not exist", "not found", "No such file or directory"]:             if possibleMsg in errorMsg:                 return True          return False	return any(possibleMsg in errorMsg for possibleMsg in ["not exist", "not found", "No such file or directory"])	Prefer Idiomatic Iteration
214	https://github.com/LUMC/pytest-workflow/pull/111	11	readability	2020-05-23 12:23:22	Improve code readability by making better use of pathlib.	SCHEMA = Path(__file__).parent / Path("schema") / Path("schema.json")	SCHEMA = Path(__file__).parent / "schema" / "schema.json"	Simplify Object Construction and Conversion
215	https://github.com/openml/docs/pull/38	2	readability	2024-10-26 20:41:05	Replaced unnecessary conversion to list with a set data structure. `target_urls` are not being accessed by index after removing duplicates. Code in`github_scrapers`:        Old code: `target_urls = list(set(target_urls))`        New Code: `target_urls = set(target_urls)`       Reduces memory usage by avoiding redundant data storage.      	target_urls = list(set(target_urls))	target_urls = set(target_urls)	Simplify Object Construction and Conversion
216	https://github.com/nasa/ncompare/pull/264	2	readability	2024-12-23 15:05:30	The Path() constructor already handles both str and Path types effectively.	path_obj = _coerce_str_or_path_to_path(should_be_path)  def _coerce_str_or_path_to_path(should_be_path: Union[Path, str]) -> Path:     wrong_type_msg = "Unexpected type for something that should be convertable to a Path: "     if isinstance(should_be_path, str):         return Path(should_be_path)     elif isinstance(should_be_path, Path):         return should_be_path     else:         raise TypeError(wrong_type_msg + str(type(should_be_path)))	    path_obj = Path(should_be_path)	Remove Duplicate Code
217	https://github.com/lichess-bot-devs/lichess-bot/pull/506	7	readability	2022-07-29 13:38:31	More efficient use of dict.get() with default arguments	self.challenger_title = self.challenger.get("title") if self.challenger else None	self.challenger = c_info.get("challenger", {})	Replace Lookup with Dict
218	https://github.com/networkx/networkx/pull/6273	1	readability	2022-12-12 14:35:52	Update simple_paths.py to improve readability of the BFS.	def _all_simple_paths_multigraph(G, source, targets, cutoff):  visited = dict.fromkeys([source])	def _all_simple_paths_multigraph(G, source, targets, cutoff):     visited = {source: True}	Simplify Object Construction and Conversion
219	https://github.com/PyCQA/autoflake/pull/75	1	readability	2020-08-23 00:55:18	on `standard_paths function`:      * I used `os.path.isdir` instead of `try: ... except OSError: pass`  for checking if `lib-dynload` exists. 	 if '.' in name and name.rsplit('.')[-1] not in ['so', 'py', 'pyc']:	if '.' in name and not name.endswith(("so", "py", "pyc")):	Prefer Built-in methods
220	https://github.com/arc53/DocsGPT/pull/530	2	readability	2023-10-09 22:40:10	Concise String Manipulation  Optimized the string manipulation method for joining parts of a title.   	store = title.split('/') store = store[1] + '/' + store[2]	store = '/'.join(title.split('/')[1:3])	Prefer Built-in methods
221	https://github.com/openSUSE/opi/pull/130	25	readability	2023-05-19 11:28:54	use `str.endswith()` instead of string comparison by range (**L23**)   	if module == '__init__.py' or module[-3:] != '.py' or module == '__pycache__':	if module == '__init__.py' or not module.endswith('.py') or module == '__pycache__':	Prefer Built-in methods
222	https://github.com/thumbor/thumbor/pull/1554	5	readability	2023-06-20 15:46:46	Module thumbor.config  thumbor/config.py:914:12: R1713: Consider using str.join(sequence) for concatenating strings from an iterable (consider-using-join)  	representation = "[\n"         for item in value:             representation += (  # pylint: disable=consider-using-join                 f"#    {item}"             )         representation += "#]"         return representation	return "[\n" + "".join(f"#    {item}" for item in value) + "#]"	Prefer Built-in methods
223	https://github.com/DIRACGrid/DIRAC/pull/6505	9	readability	2022-11-07 12:32:52	simplifying `if` statements for returning bools   	"if value and value.lower() in (""y"", ""yes"", ""true""):             return True         return False	return bool(value and value.lower() in (""yes"", ""true"", ""y""))	Collapse Boolean Return
224	https://github.com/quotientbot/quotient/pull/108	2	readability	2023-05-26 19:32:28	Simplify `if-else` 	if tag:         return False     return True	return not tag	Collapse Boolean Return
225	refactors the codes to make it easier to read by grouping the codes based on the data kind.	2	readability	2024-06-12 17:56:17	readability improvements	def entities(self):     if self._text is None:              self._text = "".join(shard.text for shard in self.shards)          return self._text	def entities(self):      return _entities_from_shards(shards=self.shards)	Collapse Boolean Return
226	https://github.com/MetOffice/CSET/pull/968	1	readability	2024-12-10 09:41:21	change to import name of `CSET.recipes` during testing. Just a minor cleanup to readability. 	import CSET.recipes files = CSET.recipes._recipe_files_in_tree(input_dir=Path("tests"))	from CSET import recipes files = recipes._recipe_files_in_tree(input_dir=Path("tests"))	Simplify Import Statements
227	https://github.com/2Fake/devolo_plc_api/pull/119	3	readability	2023-03-22 10:46:04	Shorten imports for better readability	self.password = hashlib.sha256(self.password.encode("utf-8")).hexdigest()	                self.password = sha256(self.password.encode("utf-8")).hexdigest()	Simplify Import Statements
228	https://github.com/openai/gym/pull/1733	1	readability	2019-11-08 22:22:51	Remove the `np.` prefix as those two functions and this constant are imported directly.	MAX_VEL_1 = 4 * np.pi	MAX_VEL_1 = 4 * pi	Simplify Import Statements
229	https://github.com/physiopy/phys2bids/pull/305	2	readability	2020-09-18 20:41:53	Change `chtrig +1` in this line into `chtrig` only.  	chtrig = chtrig - 1  # now for the user channel indexing starts at 1 as it return BlueprintInput(timeseries, freq, names, units, chtrig + 1)	    return BlueprintInput(timeseries, freq, names, units, chtrig)	Clarify Numeric Constants
230	https://github.com/networkx/networkx/pull/5144	3	readability	2021-10-25 16:42:06	Rm unnecessary binding of local variable.	predicted = label_dict[np.argmax(F, axis=1)].tolist()      return predicted	return label_dict[np.argmax(F, axis=1)].tolist()	Inline Temporary Variable
231	https://github.com/great-expectations/great_expectations/pull/6418	24	readability	2022-11-22 20:29:39	Fix incorrect capitalization of `Dict` type hint that does not specify the key and value types. 	runtime_configuration: Dict,	        runtime_configuration: dict,	Use Native Type Annotations
233	https://github.com/matplotlib/matplotlib/pull/16423	1	legibility	2020-02-06 21:03:48	`__getitem__` is never called with more than a single arg, and we can  just use normal indexing on _mask both for getting and for setting.   	 def __getitem__(self, *args):         return self._mask.__getitem__(*args)	def __getitem__(self, args):         return self._mask[args]	Simplify Object Construction and Conversion
234	https://github.com/deepspeedai/DeepSpeed/pull/895	4	readability	2021-04-07 20:08:59	Various readability/typos/cleanup fixes - no functionality change.    I tried to make `_save_checkpoint` a bit more readable, but the auto-formatter still makes things harder to read than it can be.	state = {             'module':             self.module_state_dict(),             'optimizer':             self.optimizer.state_dict() if self.optimizer and not self.zero_optimization() else None,             'lr_scheduler':             self.lr_scheduler.state_dict() if self.lr_scheduler is not None else None,             'csr_tensor_module_names':             self.csr_tensor_module_names,             'skipped_steps':             self.skipped_steps,             'global_steps':             self.global_steps,             'global_samples':             self.global_samples,             'dp_world_size':             self.dp_world_size,             'mp_world_size':             self.mp_world_size         }	state = dict(             module=self.module_state_dict(),             optimizer=self.optimizer.state_dict() lr_scheduler=self.lr_scheduler.state_dict()             if self.lr_scheduler is not None else None,             csr_tensor_module_names=self.csr_tensor_module_names,             skipped_steps=self.skipped_steps,             global_steps=self.global_steps,             global_samples=self.global_samples,             dp_world_size=self.dp_world_size,             mp_world_size=self.mp_world_size,         )	Simplify Object Construction and Conversion
235	https://github.com/volatilityfoundation/volatility3/pull/1494	1	readability	2024-12-30 00:27:27	Use enumerate for readability	for index in range(len(self._treegrid.columns)):             column = self._treegrid.columns[index]	for index, column in enumerate(self._treegrid.columns):	Use Enumerate
236	https://github.com/py-pdf/pypdf/pull/2974	1	readability	2024-12-02 07:36:52	Use enumerate more in PdfWriter.	cast(IndirectObject, self._objects[i]).indirect_reference             for i in range(len(self._objects))	 cast(IndirectObject, obj).indirect_reference             for i, obj in enumerate(self._objects)	Use Enumerate
237	https://github.com/networkx/networkx/pull/5144	3	readability	2021-10-25 16:42:06	I also made a few other minor tweaks (while -> for)	while remaining_iter > 0:         F = _propagate(P, F, B)         remaining_iter -= 1	 F = np.zeros((n_samples, n_classes))	Replace while with for
238	https://github.com/networkx/networkx/pull/5144	3	readability	2021-10-25 16:42:06	the `node_classification` package was implemented in such a way that there were a lot of simple (one-or-few-liner) expressions that were wrapped up in "helper" functions. In principle this was done because the functionality was reused in both the `harmonic_function` and `local_and_global_consistency` functions, but IMO the code is improved by reducing the indirection introduced by all the utility functions.	from networkx.algorithms.node_classification.utils import (     _get_label_info,     _init_label_matrix,     _propagate,     _predict, )	from networkx.algorithms.node_classification.utils import _get_label_info	Remove Unused Imports
240	https://github.com/sosreport/sos/pull/2578	1	readability	2021-06-16 07:15:23	In the "top-level" ThreadPoolExecutor used for threading plugin execution, increase readability and reliability by wrapping it in a with context manager, so that the pool's cleanup is run in all situations explicitly.	 self.plugpool = ThreadPoolExecutor(self.opts.threads)             # Pass the plugpool its own private copy of self.pluglist             results = self.plugpool.map(self._collect_plugin,                                         list(self.pluglist))             self.plugpool.shutdown(wait=True)	            results = []             with ThreadPoolExecutor(self.opts.threads) as executor:                 results = executor.map(self._collect_plugin,                                        list(self.pluglist))	Prefer Structured Resource Management
241	https://github.com/vanvalenlab/deepcell-tracking/pull/54	6	readability	2021-04-13 00:51:14	Save `centroids` and `embeddings` in a dictionary with their "feature_name" as the key. This cleans up some code in `_get_cost_matrix` as well.  	current_embeddings, future_embeddings = self._get_curr_futr_feats(             frame, feature_name='embedding')          current_centroids, future_centroids = self._get_curr_futr_feats(             frame, feature_name='centroid')          current_emb_array = np.stack([current_embeddings[k] for k in current_embeddings], axis=0)         future_emb_array = np.stack([future_embeddings[k] for k in future_embeddings], axis=0)          current_cent_array = np.stack([current_centroids[k] for k in current_centroids], axis=0)         future_cent_array = np.stack([future_centroids[k] for k in future_centroids], axis=0)          assignment_shape = (len(current_embeddings), len(future_embeddings))         assignment_matrix = np.zeros(assignment_shape, dtype=self.dtype)          # Add time dimension         future_emb_array = np.expand_dims(future_emb_array, axis=1)         future_cent_array = np.expand_dims(future_cent_array, axis=1)          # Add batch dimension         current_emb_array = np.expand_dims(current_emb_array, axis=0)         future_emb_array = np.expand_dims(future_emb_array, axis=0)         current_cent_array = np.expand_dims(current_cent_array, axis=0)         future_cent_array = np.expand_dims(future_cent_array, axis=0)          inputs = {'current_embeddings': current_emb_array,                   'current_centroids': current_cent_array,                   'future_embeddings': future_emb_array,                   'future_centroids': future_cent_array}	inputs = {}         relevant_tracks = []         for feature_name in self.features:             # Get the embeddings for previously tracked cells             current_feature = self._fetch_tracked_features(                 before_frame=frame, feature_name=feature_name)              # Get the embeddings for the current frame             future_feature = self._get_frame_features(                 frame=frame, feature_name=feature_name)              if not relevant_tracks:                 for track_id in current_feature:                     relevant_tracks.append(track_id)              # Convert from dict to arrays             current_feature_arr = np.stack([                 current_feature[k] for k in current_feature             ], axis=0)             future_feature_arr = np.stack([                 future_feature[k] for k in future_feature             ], axis=0)              # Add time dimension             future_feature_arr = np.expand_dims(future_feature_arr, axis=1)              # Add batch dimension             current_feature_arr = np.expand_dims(current_feature_arr, axis=0)             future_feature_arr = np.expand_dims(future_feature_arr, axis=0)              # Add feature to inputs             # model expects "current_embeddings" but feature_name is "embedding"             # TODO: this name is hardcoded based on a model from deepcell-tf             inputs['current_{}s'.format(feature_name)] = current_feature_arr             inputs['future_{}s'.format(feature_name)] = future_feature_arr	Group Related Values into Named Structures
242	https://github.com/ExcitedStates/qfit-3.0/pull/75	3	readability	2020-06-30 18:51:40	simplified an area with duplicated code.			Remove Duplicate Code
243	https://github.com/wandb/wandb/pull/8984	6	readability	2024-12-05 19:08:23	added functions to remove some duplicate codes.     			Remove Duplicate Code
244	https://github.com/HewlettPackard/py-spiffe/pull/79	2	readability	2021-04-08 16:00:57	removed duplicated code  - use create_jwt function where applicable  this addresses #74			Remove Duplicate Code
245	https://github.com/axolotl-ai-cloud/axolotl/pull/707	1	readability	2023-10-19 12:12:17	As many tokenzer variations are added, its complexity is increasing and it is hard to understand what each code block means. We better clean up duplicated code and enhance code readability.  			Remove Duplicate Code
246	https://github.com/keras-team/keras/pull/7153	1	readability	2017-07-06 17:56:19	This PR improves readability for backend tests.Since CNTK added, it becomes hard to add something into backend tests due to many hardcoded and cntk-specific patchwork. I think it is better to clean up the current tests first in order to write new tests for increasing test coverages. Especially, this PR focuses on integration of `cntk_check_*_tensor_operation` into `check_*_tensor_operation`.	def check_single_tensor_operation(function_name, input_shape, backend_list, **kwargs):  for i in range(len(z_list) - 1):         assert z_list[i].shape == z_list[i + 1].shape         assert_allclose(z_list[i], z_list[i + 1], atol=1e-05)         if hasattr(z_list[i], '_keras_shape'):             assert z_list[i]._keras_shape == z_list[i].shape  def check_two_tensor_operation(function_name, x_input_shape,                                y_input_shape, backend_list, **kwargs): for i in range(len(z_list) - 1):         assert z_list[i].shape == z_list[i + 1].shape         assert_allclose(z_list[i], z_list[i + 1], atol=1e-05)         if hasattr(z_list[i], '_keras_shape'):             assert z_list[i]._keras_shape == z_list[i].shape		Remove Duplicate Code
247	https://github.com/recommenders-team/recommenders/pull/607	1	readability	2019-03-05 12:27:09	Refactor splitter code to enhance readability (DRY - dont repeat yourself principle).   			Remove Duplicate Code
248	https://github.com/adafruit/Adafruit_CircuitPython_PyBadger/pull/19	1	readability	2020-02-14 17:20:08	improve code readability and reduce code duplication.    			Remove Duplicate Code
249	https://github.com/astropy/astropy/pull/16369	3	readability	2024-05-02 20:47:56	I knew how these blocks worked off-hand and it caused some confusion, so I'm trying to rewrite the logic in a (hopefully) clearer fashion.  			Remove Duplicate Code
250	https://github.com/open-mmlab/mmsegmentation/pull/2142	1	readability	2022-10-08 08:31:17	The first conv is combined into the loops. 	 convs.append(             ConvModule(                 self.in_channels,                 self.channels,                 kernel_size=kernel_size,                 padding=conv_padding,                 dilation=dilation,                 conv_cfg=self.conv_cfg,                 norm_cfg=self.norm_cfg,                 act_cfg=self.act_cfg))         for i in range(num_convs - 1):		Remove Duplicate Code
251	https://github.com/great-expectations/great_expectations/pull/6406	13	readability	2022-11-22 01:58:31	Remove unnecessary code duplication in `validator.py`  			Remove Duplicate Code
252	https://github.com/lichess-bot-devs/lichess-bot/pull/506	7	readability	2022-07-29 13:38:31	reduce code repetition			Remove Duplicate Code
253	https://github.com/ilastik/ilastik/pull/2896	1	readability	2024-08-13 11:02:09	I rewrote the test because I was going to add zarr as another test case, then decided OME-Zarr warrants its own operator and won't go here.    I think the refactoring is still helpful in its own right. It makes the difference between the test cases clearer, and makes sure the h5 and n5 tests don't depend on each other (plus it's a bit shorter :smile: ).    The actual test cases covered and how they're implemented could be improved I think. I'm also not sure about the value of the third test using `.Output.meta.ram_usage_per_requested_pixel = 1000000.0` to force writing in tiny blocks. This test takes 0.5s to run, which is a long time for a test case that seems unnecessary to cover to me. But I intentionally purely refactored here to make review easier.   			Remove Duplicate Code
254	https://github.com/openSUSE/opi/pull/130	25	readability	2023-05-19 11:28:54	deduplicate URL building for GPG key in install_binary()	url = "https://download.opensuse.org/repositories/%s/%s/" % (project_path, repository) gpgkey = "https://download.opensuse.org/repositories/%s/%s/repodata/repomd.xml.key" % (project_path, repository)	url = "https://download.opensuse.org/repositories/%s/%s/" % (project_path, repository) gpgkey = url + "repodata/repomd.xml.key"	Remove Duplicate Code
255	https://github.com/home-assistant/core/pull/82194	1	readability	2022-11-16 14:27:20	avoid code duplication .   			Remove Duplicate Code
256	https://github.com/dmwm/CRABServer/pull/7716	4	readability	2023-07-06 08:37:22	Remove `initReplicasInContainer()` and use `populateLFN2DatasetMap()` directly where it needed.  			Remove Duplicate Code
257	https://github.com/thumbor/thumbor/pull/1554	5	readability	2023-06-20 15:46:46	This CL also fixes a code duplication issue in thumbor/utils.py			Remove Duplicate Code
258	https://github.com/dmwm/CRABServer/pull/7716	4	readability	2023-07-06 08:37:22	remove "skip monitoring lock for the files in the same run.", the useless statement.	def initReplicasInContainer(self, rucioClient):         """         Get replicas from transfer and publish container and assign it to         self.replicasInContainer as key-value pare of containerName and map of         LFN2Dataset.         :param rucioClient: Rucio Client         :type rucioClient: rucio.client.client.Client         """         replicasInContainer = {}         replicasInContainer[self.transferContainer] = self.populateLFN2DatasetMap(self.transferContainer, rucioClient)         replicasInContainer[self.publishContainer] = self.populateLFN2DatasetMap(self.publishContainer, rucioClient)         self.replicasInContainer = replicasInContainer		Remove Unused Method/ chunk of code
259	https://github.com/Azure/azure-kusto-python/pull/476	11	readability	2023-05-17 11:02:03	removed 3 functions in _telemetry  	def call_func_tracing(func: Callable, *args, **kwargs):         """         Prepares function for tracing and calls it         :param func: function to trace         :type func: Callable         :key str name_of_span: name of the trace span         :key dict tracing_attributes: key/value dictionary of attributes to include in span of trace         :key str kind: the type of span         :param kwargs: function arguments         """         name_of_span: str = kwargs.pop("name_of_span", None)         tracing_attributes: dict = kwargs.pop("tracing_attributes", {})         kind: str = kwargs.pop("kind", SpanKind.CLIENT)		Remove Unused Method/ chunk of code
260	https://github.com/SuffolkLITLab/docassemble-ALWeaver/pull/370	1	readability	2021-05-12 00:45:18	  `interview.file_name` was never used. Made clearer which label is being used where by using `interview_label` directly, and basing new `package_title` off of the `interview_label` to reduce chance of errors in the 2-3 places we were previously using the same regex to get the package title.   	 def yaml_file_name(self)->str:         return to_yaml_file(self.file_name)		Remove Unused Method/ chunk of code
261	https://github.com/vanvalenlab/deepcell-tracking/pull/54	6	readability	2021-04-13 00:51:14	Remove backwards compatibility patches 	def get_feature_shape(self, feature_name):		Remove Unused Method/ chunk of code
262	https://github.com/CarperAI/trlx/pull/210	4	readability	2023-02-05 16:06:48	Also deletes two unused methods.   	def score(self, samples):		Remove Unused Method/ chunk of code
263	https://github.com/getsentry/sentry/pull/68095	2	readability	2024-04-02 22:14:27	Functions that are not used anywhere should be removed, even if they were used previously   			Remove Unused Method/ chunk of code
264	https://github.com/great-expectations/great_expectations/pull/6444	16	readability	2022-11-29 07:48:27	* Remove unnecessary `MetricConfiguration` sorting from `ParameterBuilder.get_metrics()` (this is done later by `AttributedResolvedMetrics` anyway). 	metrics_to_resolve = sorted(             metrics_to_resolve,             key=lambda metric_configuration_element: (                 metric_configuration_element.metric_value_kwargs_id,                 batch_id_ordering[                     metric_configuration_element.metric_domain_kwargs["batch_id"]                 ],             ),         )		Remove Duplicate Code
265	https://github.com/spack/spack/pull/31936	1	readability	2022-08-05 10:36:33	 Removed dead code	    kwargs.update(         {             "install_deps": ("dependencies" in args.things_to_install),             "install_package": ("package" in args.things_to_install),         }     )		Remove Unused Method/ chunk of code
266	https://github.com/rapidsai/dependency-file-generator/pull/27	3	readability	2022-11-23 21:54:18	removes one unused one. This tag is also being used to demarcate our intention to make our first major release when this PR is merged.	def ensure_list(item):		Remove Unused Method/ chunk of code
267	https://github.com/GridTools/gt4py/pull/392	3	readability	2021-04-12 12:45:41	It removes a lot of unnecessary code removed unnecessary offseting in _run_test_implementation of test suites 	validation_origins = {             name: tuple(nb[0] - g[0] for nb, g in zip(new_boundary, cls.symbols[name].boundary))             for name in inputs             if name in implementation.field_info         }		Remove Unused Method/ chunk of code
268	https://github.com/PennyLaneAI/pennylane/pull/4379	1	readability	2023-07-24 17:07:14	Eliminating some functions: `process_single_shape` and `_filter_zero_tangents`    	 def process_single_shape(shape, tape_dtype):         return jax.ShapeDtypeStruct(tuple(shape), tape_dtype)		Remove Unused Method/ chunk of code
269	https://github.com/lincc-frameworks/nested-pandas/pull/108	2	readability	2024-06-11 17:09:48	Also, removed the lingering PPT example benchmark code which was being rendered.	import random import time   def runtime_computation():     """Runtime computation consuming between 0 and 5 seconds."""     time.sleep(random.uniform(0, 5))   def memory_computation():     """Memory computation for a random list up to 512 samples."""     return [0] * random.randint(0, 512)		Remove Unused Method/ chunk of code
270	https://github.com/apache/airflow/pull/18523	2	readability	2021-09-26 08:55:34	raise `NotFound` if no dag return based on the given `dag_id` 	try:         dag = current_app.dag_bag.get_dag(dag_id)         if not dag:             raise NotFound(error_message)     except SerializedDagNotFound:                raise NotFound(error_message)	dag = current_app.dag_bag.get_dag(dag_id)     if not dag:         raise NotFound(error_message)	Remove Unused Try/Catch
271	https://github.com/google/capirca/pull/214	2	legibility	2021-08-04 23:37:11	Removed SkipLines function and implemented the same functionality through the more concise `filter` function  - fix: removed extraneous filter	for ignored in FLAGS.ignore_directories:     policy_directories = filter(       lambda path: not path.match('%s/**/pol' % ignored_directory) and       not path.match('%s/pol' % ignored_directory),       policy_directories     )     policy_directories = filter(       lambda path: not path.match('%s/pol' % ignored_directory),	for ignored in FLAGS.ignore_directories:         lambda path: not path.match('%s/**/pol' % ignored) and not path.match('%s/pol' % ignored),	Prefer Idiomatic Iteration
272	https://github.com/nasa/ncompare/pull/264	2	readability	2024-12-23 15:05:30	Remove unneeded code This function is no longer needed.	def _coerce_str_or_path_to_path(should_be_path: Union[Path, str]) -> Path:     wrong_type_msg = "Unexpected type for something that should be convertable to a Path: "     if isinstance(should_be_path, str):         return Path(should_be_path)     elif isinstance(should_be_path, Path):         return should_be_path     else:         raise TypeError(wrong_type_msg + str(type(should_be_path)))		Remove Unused Method/ chunk of code
273	https://github.com/mlflow/mlflow/pull/8835	2	readability	2023-06-27 03:24:15	Remove SqlAlchemyStore._save_to_db to improve readability.	 def _save_to_db(self, session, objs):         """         Store in db         """         if type(objs) is list:             session.add_all(objs)         else:             # single object             session.add(objs)		Remove Unused Method/ chunk of code
274	https://github.com/matplotlib/matplotlib/pull/24983	1	readability	2023-02-13 17:34:51	 the removed else-clauses in the for-loops were not tested. And other parts of the code would break anyway...    	else:             shared = [self]		Unwrap unnecessary else
275	https://github.com/galaxyproject/galaxy/pull/17835	1	readability	2024-03-25 19:24:41	Minor refactor of query building logic for readability remove if collection_attributes:	q = q.add_columns(*attribute_columns(inner_dce.c, element_attributes, nesting_level)) if collection_attributes:       q = q.add_columns(                     *attribute_columns(inner_dc.c, collection_attributes, nesting_level),                 )	q = q.add_columns(       *attribute_columns(inner_dc.c, collection_attributes, nesting_level), ) q = q.add_columns(*attribute_columns(inner_dce.c, element_attributes, nesting_level))	Remove Unused Method/ chunk of code
276	https://github.com/huggingface/transformers/pull/8903	1	readability	2020-12-02 17:07:43	removes redundant code	self.model = model if model is not None else None	self.model = model	Remove Unused Method/ chunk of code
277	https://github.com/lichess-bot-devs/lichess-bot/pull/506	7	readability	2022-07-29 13:38:31	Delete unused exception variable	except Exception as e:	 except Exception:	remove unused field or variable
278	https://github.com/py-pdf/pypdf/pull/2781	1	readability	2024-08-05 15:49:29	Also remove unused DEFAULT_ANNOTATION_FLAG.	DEFAULT_ANNOTATION_FLAG = AnnotationFlag(0)		Remove Useless Constant
279	https://github.com/openSUSE/opi/pull/130	25	readability	2023-05-19 11:28:54	removing `(object)` inheritance as not needed in *python3*  	class BasePlugin(object):	class BasePlugin:	Simplify Object Construction and Conversion
280	https://github.com/physiopy/phys2bids/pull/305	2	readability	2020-09-18 20:41:53	Remove chtrig from this definition's argoments since it's not used in the definition itself. 	def read_header_and_channels(filename, chtrig):	def read_header_and_channels(filename):	Remove Useless Parameter
281	https://github.com/timschumi/tumbot/pull/47	17	readability	2020-05-26 19:42:30	removed unuses imports  	from discord.ext import commands		Remove Unused Imports
282	https://github.com/RemDelaporteMathurin/h-transport-materials/pull/214	30	readability	2023-05-08 17:48:05	Also removed some lines of code in headers which weren't used in certain scripts	import h_transport_materials.conversion as c		Remove Unused Imports
283	https://github.com/vanvalenlab/deepcell-tracking/pull/54	6	readability	2021-04-13 00:51:14	Remove old commented out code and the backward compat patch.	 # def _get_input_pairs(self, frame):		Remove Commented Code
284	https://github.com/Election-Tech-Initiative/electionguard-python/pull/114	27	readability	2020-07-30 17:06:01	 Remove inverse of g constant - Inverse of g can be easier calculated when needed and does not have to be export with constants.	G_INV: Final[int] = pow(G, -1, P) ginv = int_to_p_unchecked(G_INV)	g_inv = int_to_p_unchecked(pow(G, -1, P))	Remove Useless Constant
285	https://github.com/google/capirca/pull/214	2	legibility	2021-08-04 23:37:11	Changed named lambdas into function declarations (pep8 E731)	p4_tags = lambda x: p4_id in x or p4_date in x or p4_revision in x	def p4_tags(text):       return p4_id in text or p4_date in text or p4_revision in text	Extract Lambda into a Named Function
286	https://github.com/lichess-bot-devs/lichess-bot/pull/506	7	readability	2022-07-29 13:38:31	Replace long lambda with local function	get_greeting = lambda greeting: str(greeting_cfg.get(greeting) or "").format_map(keyword_map)	def get_greeting(greeting):         return str(greeting_cfg.get(greeting) or "").format_map(keyword_map)	Extract Lambda into a Named Function
287	https://github.com/getsentry/sentry/pull/18539	1	readability	2020-04-30 22:17:35	Extract callback for readability   I know that a lot of similar classes use the `on_results=lambda x: serialize(x, ...)` pattern (I'm fine with lambdas generally) but this is one of the only multiline ones with a big compound expression.	on_results=lambda x: serialize(                     x,                     request.user,                     ProjectSummarySerializer(                         environment_id=self._get_environment_id_from_request(                             request, organization.id                         ),                         stats_period=stats_period,                     ),                 ),	def serialize_on_result(result):                 environment_id = self._get_environment_id_from_request(request, organization.id)                 serializer = ProjectSummarySerializer(                     environment_id=environment_id, stats_period=stats_period,                 )                 return serialize(result, request.user, serializer)	Extract Lambda into a Named Function
288	https://github.com/allure-framework/allure-python/pull/501	1	readability	2020-08-19 10:05:05	avoid to use overly complex "filter" and "lambda".	 return filter(lambda item: any(         [str(planed_item.get("id")) in [str(allure_id) for allure_id in allure_label(item, LabelType.ID)]          or          (planed_item.get("selector") == allure_full_name(item))          for planed_item in planned_tests]), items) if planned_tests else items	 if planned_tests:          def is_planed(item):             allure_ids = allure_label(item, LabelType.ID)             allure_string_ids = list(map(str, allure_ids))             for planed_item in planned_tests:                 planed_item_string_id = str(planed_item.get("id"))                 planed_item_selector = planed_item.get("selector")                 if (                     planed_item_string_id in allure_string_ids                     or planed_item_selector == allure_full_name(item)                 ):                     return True             return False          return [item for item in items if is_planed(item)]     else:         return items 	Extract Lambda into a Named Function
289	https://github.com/home-assistant/core/pull/126252	1	readability	2024-09-20 09:10:27	moves 3 of those checks to separate methods:  - one for `hass-relative-import`  - one for `hass-component-root-import`  - one for `hass-import-constant-alias`    			Extract Method from Large Function
290	https://github.com/google/jaxopt/pull/89	1	readability	2021-10-22 10:56:15	I refactorized the code to distinguish more easily between forward passes at inference time and forwards passes at train time. 	if train:             all_params = {'params':params, 'batch_stats':batch_stats}             logits, batch_stats = net.apply(all_params, x, True, mutable=['batch_stats'])         else:             logits = net.apply({'params':params, 'batch_stats':batch_stats}, x, False)	@jax.jit     def test_loss_and_accuracy(params, batch_stats, l2reg, data):         """Return testing loss and accuracy."""         all_vars = {"params":params, "batch_stats":batch_stats}         images, labels = data         logits = predict(all_vars, images, train=False)         accuracy = jnp.mean(jnp.argmax(logits, axis=-1) == labels)         loss = loss_from_logits(logits, labels, l2reg)         return loss, accuracy	Extract Method from Large Function
291	https://github.com/great-expectations/great_expectations/pull/6444	16	readability	2022-11-29 07:48:27	 * Refactor `MetricCalculator.compute_metrics()`, `Validator.graph_validate()`, and `ParameterBuilder.get_metrics()` for better separability of `ValidationGraph` construction, graph resolution, and error reporting.   			Extract Method from Large Function
292	https://github.com/pytest-dev/pytest/pull/3679	2	readability	2018-07-13 00:31:07	Extract the parametrize() block of code into methods for better  readability 			Extract Method from Large Function
293	https://github.com/huggingface/peft/pull/409	1	readability	2023-06-08 09:15:35	primarily focuses on extracting certain private functions without introduce any functional changes.			Extract Method from Large Function
294	https://github.com/great-expectations/great_expectations/pull/6418	24	readability	2022-11-22 20:29:39	Split `MetricsCalculator.compute_metrics()` into `ValidationGraph` construction phase and graph resolution phase. 			Extract Method from Large Function
295	https://github.com/spack/spack/pull/31936	1	readability	2022-08-05 10:36:33	Split long functions into multiple logical units  	def install(parser, args, **kwargs):     # TODO: unify args.verbose?     tty.set_verbose(args.verbose or args.install_verbose)      if args.help_cdash:         parser = argparse.ArgumentParser(             formatter_class=argparse.RawDescriptionHelpFormatter,             epilog=textwrap.dedent(                 """\	def _print_cdash_help():     parser = argparse.ArgumentParser(         formatter_class=argparse.RawDescriptionHelpFormatter,         epilog=textwrap.dedent(             """\	Extract Method from Large Function
296	https://github.com/scikit-hep/awkward/pull/2359	1	readability	2023-04-06 05:44:08	splits the continuation in broadcasting into separate closures that we can more easily refactor.			Extract Method from Large Function
297	https://github.com/getsentry/sentry/pull/63405	1	readability	2024-01-23 00:28:34	so this breaks the logic out into more helpers			Extract Method from Large Function
298	https://github.com/FHIR/genomics-operations/pull/64	1	readability	2023-06-21 15:24:26	moved the parameter checks to their own function.			Extract Method from Large Function
299	https://github.com/hypothesis/lms/pull/6107	4	readability	2024-03-08 11:34:31	Move the course copy logic to a private function.	       if not effective_page_id:             found_page = course_copy_plugin.find_matching_page_in_course(                 document_page_id, current_course_id             )             if not found_page:                 # We couldn't fix course copy, there might be something else going on                 # or maybe teacher never launched before a student.                 LOG.debug(                     "Via URL for page, couldn't find page in the new course. Document: %s, course: %s.",                     document_url,                     current_course_id,                 )                 raise PageNotFoundInCourse(                     "moodle_page_not_found_in_course", document_page_id                 )              # Store a mapping so we don't have to re-search next time.             current_course.set_mapped_page_id(document_page_id, found_page.lms_id)             effective_page_id = found_page.lms_id             LOG.debug(                 "Via URL for page, found page in the new course. Document: %s, course: %s, new page id: %s",                 document_url,                 current_course_id,                 found_page.lms_id,             )	effective_page_id = _effective_page_id(             course_copy_plugin,             current_course,             document_url,             document_course_id,             document_page_id,         )  def _effective_page_id(	Extract Method from Large Function
300	https://github.com/triton-inference-server/server/pull/5990	1	readability	2023-06-26 22:22:45	Split CPU-only Linux libs into own function to make if-else statement clearer			Extract Method from Large Function
301	https://github.com/sqlfluff/sqlfluff/pull/2733	1	readability	2022-02-28 12:17:43	thorough reorganization of L052, splitting the long, complex `_eval()` function into several smaller, easier to understand functions.			Extract Method from Large Function
302	https://github.com/vllm-project/vllm/pull/2499	6	readability	2024-01-19 00:45:14	makes completion api a lot easier to read and maintain. before it has one spaghetti function spanning few hundred lines, after this PR, the situation should be greatly improved. chat completion api doesn't have this problem because it is fairly modularized.     I'm doing this in preparation for batch completions support.			Extract Method from Large Function
303	https://github.com/matplotlib/matplotlib/pull/24983	1	readability	2023-02-13 17:34:51	All introduced methods are quite short, so primarily for readability.  			Extract Method from Large Function
304	https://github.com/PennyLaneAI/pennylane/pull/4379	1	readability	2023-07-24 17:07:14	Extract out `_grad_transform_jac_via_callaback` and `_device_method_jac_via_callback` to being global functions with explicit argument lists, instead of depending on closure. This reduces nesting, allows the functions to be experimented on and tested independently, and makes the dependencies explicit. The previous syntax also called local variables like `params` the same thing as a parameter from outer scope.  			Extract Method from Large Function
305	https://github.com/All-Hands-AI/OpenHands/pull/3873	2	readability	2024-09-16 18:13:52	on_event: Refactored event processing by splitting it into two distinct functions: _handle_action and _handle_observation 			Extract Method from Large Function
306	https://github.com/great-expectations/great_expectations/pull/6578	5	readability	2022-12-14 20:49:16	The method `ExecutionEngine.resolve_metrics()` is being refactored into two principal parts: gathering aggregated and non-aggregated metric computation specifications, and resolving the corresponding metrics.  The non-aggregated metrics are resolved by calling their function.  The aggregated metrics are bundled (for efficiency).  Code readability is improved.    			Extract Method from Large Function
307	https://github.com/snowflakedb/snowpark-python/pull/2257	2	readability	2024-09-11 20:20:48	Try to improve readability of binary ops by reorganize it as a `BinaryOp` class.  This pull request focuses on improving the readability and maintainability of the binary operation utility code within the Snowflake query compiler. The changes primarily involve refactoring the binary operation functions into a new `BinaryOp` class and updating the relevant method calls throughout the codebase.			Move logic to another file
308	https://github.com/great-expectations/great_expectations/pull/6406	13	readability	2022-11-22 01:58:31	Create formal `ValidationDependencies` `dataclass` object.    			Extract logic to Dataclass
309	https://github.com/mavlink/MAVSDK-Proto/pull/35	1	readability	2018-08-25 12:03:39	Moved to dataclass for easier handling and better readability			Extract logic to Dataclass
310	https://github.com/airbytehq/airbyte/pull/33255	4	readability	2023-12-13 11:23:39	Previously, all components of the vector db CDK would pass data around as a `Chunk`, which is:  * the text  * the metadata  * the record that created the chunk  * the embedding    As not all of these are available at all times, checks in a bunch of places were necessary.    This PR refactors this by passing "Documents" to the embedder, which is just the text and the record, because that's what's required for running the embedding.		@dataclass class Document:     page_content: str     record: AirbyteRecordMessage	Extract logic to Dataclass
311	https://github.com/Election-Tech-Initiative/electionguard-python/pull/114	27	readability	2020-07-30 17:06:01	For exports and variables we want a type and usage to accompany the proof types. This change is significant because it changes the proofs from NameTuples to frozen dataclasses. This gives the same immutability but the flexibility to have non essential information stored for serializing.	class DisjunctiveChaumPedersenProof(NamedTuple):	@dataclass(frozen=True) class DisjunctiveChaumPedersenProof(Proof):	Extract logic to Dataclass
312	https://github.com/streamlit/streamlit/pull/4169	4	readability	2021-12-13 21:50:41	Pulls `st.echo` out of `__init__.py` and into `echo.py`			Move logic to another file
313	https://github.com/GenericMappingTools/pygmt/pull/3653	1	readability	2024-11-27 01:01:52	This PR moves the `GMT_DATATABLE`/`GMT_DATASEGMENT` classes outside of the `GMT_DATASET` class.			Move logic to another file
314	https://github.com/DeltaRCM/pyDeltaRCM/pull/12	8	readability	2020-01-28 00:08:18	adds a few new mixin classes to the pyDeltaRCM project that are inherited by the more general Tools class.    			Move logic to another file
315	https://github.com/CsqLang/Csq/pull/264	6	readability	2023-11-01 15:34:32	Split Large Code Files for Improved Manageability and Readability  Optimized codebase for manageability and readability by splitting large files into smaller			Move logic to another file
316	https://github.com/warpnet/salt-lint/pull/203	44	readability	2020-11-28 18:46:07	Splitting the `linter.py` and formatters in separate files			Move logic to another file
317	https://github.com/warpnet/salt-lint/pull/55	31	readability	2019-10-15 19:47:45	Refactor code to improve readability for new developer. This remove most of the logic from `__init__.py` and `__main.py`.			Move logic to another file
318	https://github.com/ansys/pyaedt/pull/2655	12	readability	2023-03-21 13:27:57	moved decompose method to variable_manager in Variables.py			Move logic to another file
319	https://github.com/googleapis/python-bigquery-dataframes/pull/885	9	readability	2024-08-12 21:32:53	Move RemoteFunctionClient to a separate module remote_function_client			Move logic to another file
320	https://github.com/suitenumerique/people/pull/598	6	readability	2024-12-17 13:12:31	We used gitfilesplit to split it into several shorter files for readability.			Move logic to another file
321	@jax.jit     def test_loss_and_accuracy(params, batch_stats, l2reg, data):         """Return testing loss and accuracy."""         all_vars = {"params":params, "batch_stats":batch_stats}         images, labels = data         logits = predict(all_vars, images, train=False)         accuracy = jnp.mean(jnp.argmax(logits, axis=-1) == labels)         loss = loss_from_logits(logits, labels, l2reg)         return loss, accuracy	4	readability	2023-05-21 09:36:50	Add ireq.is_direct property, for readability	if self.req.original_link	@property     def is_direct(self) -> bool:         """Whether this requirement was specified as a direct URL."""         return self.original_link is not None  if self.req.is_direct	Extract Method from Large Function
322	https://github.com/TheAlgorithms/Python/pull/10838	1	readability	2023-10-23 17:42:03	Added function docstring and comments explaining the base case, maximizer and minimizer turns.  			Include New Comments and docstrings
323	https://github.com/rapidsai/dependency-file-generator/pull/27	3	readability	2022-11-23 21:54:18	adds documentation of all functions to explain their purposes and what arguments are being passed around. It also adds more inline comments to explain various different scenarios that might arise, particularly around empty keys or various non-matching cases. 		"""Generate the unique set of dependencies contained in a dependency list.	Include New Comments and docstrings
324	https://github.com/ansys/pyaedt/pull/2655	12	readability	2023-03-21 13:27:57	Improved dostrings		 """Convert a number to a string with units. If value is a string it's returned as is.         Parameters	Include New Comments and docstrings
325	https://github.com/getsentry/sentry/pull/68095	2	readability	2024-04-02 22:14:27	Adds some annotations to unintuitive functions/methods		# Some platforms only provide the file's name without folder paths, so we	Include New Comments and docstrings
326	https://github.com/JaxGaussianProcesses/GPJax/pull/138	7	readability	2022-11-06 21:16:35	Minor addition of comments		"""Imutable dataclass for storing optimised parameters and training history."""	Include New Comments and docstrings
327	https://github.com/GridTools/gt4py/pull/392	3	readability	2021-04-12 12:45:41	adds some comments and improves readability in general.		# for validation data, data is cropped to actually touched domain, so that origin offseting         # does not have to be implemented for every test suite. This is done based on info         # specified in test suite	Include New Comments and docstrings
328	https://github.com/streamlit/streamlit/pull/4169	4	readability	2021-12-13 21:50:41	add some code comments to echo()		# Get stack frame *before* running the echoed code. The frame's         # line number will point to the `st.echo` statement we're running.	Include New Comments and docstrings
329	https://github.com/CarperAI/trlx/pull/210	4	readability	2023-02-05 16:06:48	Adds mostly comments 		# Set this orchestrator as a property on the trainer, so that the         # trainer can call `make_experience` directly for each epoch.	Include New Comments and docstrings
330	https://github.com/timschumi/tumbot/pull/47	17	readability	2020-05-26 19:42:30	added Documentation where commands had none  		"""Removes a given amount of messages"""	Include New Comments and docstrings
331	https://github.com/keras-team/keras-cv/pull/2197	1	readability	2023-12-11 19:08:07	added comments   to improve readability and comprehensibility.		# Keras backend array need to cast explicitly	Include New Comments and docstrings
332	https://github.com/google/jaxopt/pull/89	1	readability	2021-10-22 10:56:15	I added some comments in the file.  		# Note that x is a batch of examples:         # because of BatchNorm we cannot define the forward pass in the network for a single example.	Include New Comments and docstrings
333	https://github.com/great-expectations/great_expectations/pull/6444	16	readability	2022-11-29 07:48:27	Add return types and docstrings for several methods.    		# No need to verify that type of "limit" is "integer", because static type checking already ascertains this.	Include New Comments and docstrings
334	https://github.com/TheAlgorithms/Python/pull/9265	1	readability	2023-10-22 18:51:57	Enhanced readability and added comments to the n_queens.py code.		# Check if there is any queen in the same row, column,     # left upper diagonal, and right upper diagonal	Include New Comments and docstrings
335	https://github.com/sql-machine-learning/elasticdl/pull/1163	1	readability	2019-09-12 00:39:15	Enhance code readability and docstring for Worker		# Get stack frame *before* running the echoed code. The frame's         # line number will point to the `st.echo` statement we're running.	Include New Comments and docstrings
336	https://github.com/geopandas/geopandas/pull/3462	1	readability	2024-12-13 14:09:26	adding a docstring to the _mask_is_list_like_rectangle function     		"""     Check if the input mask is list-like and not an instance of     specific geometric types.     Parameters     ----------     mask : GeoDataFrame, GeoSeries, (Multi)Polygon, list-like         Polygon vector layer used to clip ``gdf``.     Returns     -------     bool         True if `mask` is list-like and not an instance of `GeoDataFrame`,         `GeoSeries`, `Polygon`, or `MultiPolygon`, otherwise False.     """	Include New Comments and docstrings
337	https://github.com/ubicomplab/rPPG-Toolbox/pull/117	7	readability	2023-01-22 06:29:15	code clean up: added comments, docstrings		 # resize frames and crop for face region	Include New Comments and docstrings
338	https://github.com/pytest-dev/pytest/pull/3679	2	readability	2018-07-13 00:31:07	add some docs    		# empty parameter set (likely computed at runtime): create a single             # parameter set with NOSET values, with the "empty parameter set" mark applied to it	Include New Comments and docstrings
339	https://github.com/PennyLaneAI/pennylane/pull/4379	1	readability	2023-07-24 17:07:14	A few more docstrings with examples and adding some explicit documentation on closure variables to docstrings. 		# execute_wrapper_jvp merely registered, not used.     # pylint: disable=unused-variable	Include New Comments and docstrings
340	https://github.com/FHIR/genomics-operations/pull/64	1	readability	2023-06-21 15:24:26	No functional changes, just added comments		 # This split registers each molecular consequence given in the form of X&Y into separate molec conseq:     # A bit of "cheating" - this is not the highest granularity given in the data. Molec conseq is always stored in the 1 position.	Include New Comments and docstrings
341	https://github.com/GenericMappingTools/pygmt/pull/751	1	readability	2020-12-19 15:23:45	I found that the `grdview` codes are a little difficult to understand. 		# deal with kwargs["G"] if drapegrid is xr.DataArray	Include New Comments and docstrings
342	https://github.com/Wordcab/wordcab-transcribe/pull/52	1	readability	2023-05-15 11:48:44	Add comments for each config argument and improve general readability.			Include New Comments and docstrings
343	https://github.com/great-expectations/great_expectations/pull/6418	24	readability	2022-11-22 20:29:39	Add descriptive docstrings to metric computation methods.  		 Obtain domain and value keys for metrics and proceeds to add these metrics to the validation graph         until all metrics have been added	Include New Comments and docstrings
344	https://github.com/apache/airflow/pull/28619	1	readability	2023-01-05 21:54:12	Code readability improvements in Client class and methods in json_client			Include New Comments and docstrings
345	https://github.com/flairNLP/fundus/pull/365	1	readability	2024-02-23 12:06:08	Add a comment for readability in `BaseParser`			Include New Comments and docstrings
346	https://github.com/py-pdf/pypdf/pull/2775	1	readability	2024-07-26 10:15:35	Add comments and tiny refactor.			Include New Comments and docstrings
347	https://github.com/launchableinc/cli/pull/797	1	readability	2024-03-05 05:35:43	Add a comment for readability			Include New Comments and docstrings
348	https://github.com/monarch-initiative/koza/pull/142	1	readability	2024-08-20 15:24:16	Added some comments to help with future work on Koza internals. (This is mainly for me; as my brain breaks when seeing a "while not filter" )			Include New Comments and docstrings
349	https://github.com/home-assistant/core/pull/51222	1	readability	2021-05-29 14:08:46	Add comments 		 # Scheduled callback handles	Include New Comments and docstrings
350	https://github.com/twopirllc/pandas-ta/pull/536	18	readability	2022-06-02 21:26:40	Improve readability across indicators			Clarify Comments and docstring
351	https://github.com/AdaCore/e3-core/pull/658	2	readability	2023-11-24 16:59:39	Use `:ivar:` to document class fields.        Using class fields documentation renders the code less readable. In my last commit, I introduced such documentation type.        This commit is to use the `:ivar:` tag to document a class field.    The last SPDX package objects added (`PackageComment` and `PackaheHomePage`) had an invalid JSON representation.    The tag for `PackageComment` is `"comment"`, not `"comments"`.  The tag for `PackageHomePage` is `"homepage"`, not `"homePage"`.			Clarify Comments and docstring
352	https://github.com/aws-powertools/powertools-lambda-python/pull/2833	2	readability	2023-07-24 10:58:20	Correct `get_parameters` API docstrings example, and improve explanation and readability in Fetching parameters section  			Clarify Comments and docstring
353	https://github.com/DeepRegNet/DeepReg/pull/516	16	readability	2020-11-06 12:14:39	  Sentences were observed running into each other due to lack of line breaks.  Changes in this PR modify code comments to remove linebreaks and improve readability in RTD.    			Clarify Comments and docstring
354	https://github.com/dmlc/dgl/pull/1025	1	readability	2019-12-01 03:25:52	Edit pass for grammar and style			Clarify Comments and docstring
355	https://github.com/dmlc/dgl/pull/1031	1	readability	2019-12-17 06:14:18	Edit for grammar and style.   			Clarify Comments and docstring
356	https://github.com/python/cpython/pull/20963	1	readability	2020-06-19 11:57:31	Improve readability of `formataddr` docstring			Clarify Comments and docstring
357	https://github.com/python/cpython/pull/20977	1	readability	2020-06-19 12:15:58	Improve readability of `formataddr` docstring			Clarify Comments and docstring
358	https://github.com/python/cpython/pull/20978	1	readability	2020-06-19 12:18:45	Improve readability of `formataddr` docstring			Clarify Comments and docstring
359	https://github.com/neuropsychology/NeuroKit/pull/871	1	readability	2023-08-10 18:59:03	updating and improving the documentation and code readability of the ecg_process() function.   			Clarify Comments and docstring
360	https://github.com/scikit-learn/scikit-learn/pull/24311	1	readability	2022-09-01 16:04:58	Added several commas to improve readability of instructions.   			Clarify Comments and docstring
361	https://github.com/scikit-learn/scikit-learn/pull/26169	1	readability	2023-04-13 11:59:08	corrected letter case for better readability in sklearn/metrics/_classification.py /			Clarify Comments and docstring
362	https://github.com/scikit-learn/scikit-learn/pull/30351	3	readability	2025-01-13 20:19:47	I suggest some improvements in clarity in the documentation for `permutation_test_score`.    changes include:  - clarify in Userguide that `permutation_test_score` can be used on more than on classifiers  - mentioning `n_jobs` after sentence on brute force procedure  - readability on some difficult to understand sentences  - in example, clear distinguishing between original data and data without permutations (as the term "original data" was used in two different contexts for different things)  - add conclusions on results from `permutation_test_score` in example: what does the result infer for the null hypothesis?  - call p_value a proportion instead of a percentage    			Clarify Comments and docstring
363	https://github.com/deepspeedai/DeepSpeed/pull/895	4	readability	2021-04-07 20:08:59	Various readability/typos/cleanup fixes	# Stores the paritioned copy of the tensor	        # Stores the partitioned copy of the tensor	Clarify Comments and docstring
364	https://github.com/huggingface/lighteval/pull/34	4	readability	2024-02-19 16:21:34	This pull request fixes typos and improves the code readability in the project.			Clarify Comments and docstring
365	https://github.com/adswerve/GA4-Measurement-Protocol-Python/pull/35	2	readability	2022-08-12 21:43:26	fixing some comment typos.	The identifier for a Data Stream. Found in the Google Analytics UI under: Admin > Data Streams > choose your stream > Measurement ID	The identifier for a Data Stream. Found in the Google Analytics UI under: Admin > Data Streams > [choose your stream] > Measurement ID (top-right)	Clarify Comments and docstring
366	https://github.com/great-expectations/great_expectations/pull/6418	24	readability	2022-11-22 20:29:39	 * Fix type hint warning in `validator.py` by adding `Union` of proper type for Batch list. 	"""Obtain domain and value keys for metrics and proceeds to add these metrics to the validation graph         until all metrics have been added."""	        Obtain domain and value keys for metrics and proceeds to add these metrics to the validation graph         until all metrics have been added.	Clarify Comments and docstring
367	https://github.com/scikit-learn/scikit-learn/pull/13832	2	readability	2019-05-16 09:19:20	Always use `n_samples` first when comparing to `n_features` in comments.    	# X is sparse	# otherwise X is always sparse   	Clarify Comments and docstring
368	https://github.com/StanfordVL/OmniGibson/pull/364	9	readability	2024-01-18 22:18:13	Typo fixed	simulator.import_object will automatically set the control frequency to be 1 / render_timestep by default.	                simulator.import_object will automatically set the control frequency to be at the render frequency by default.	Clarify Comments and docstring
369	https://github.com/mlflow/mlflow/pull/5959	25	readability	2022-05-27 10:41:28	 Improve readability around typos in docs; docstrings	# extrypoints.get_group_all	        # entrypoints.get_group_all	Clarify Comments and docstring
370	https://github.com/Azure/azure-kusto-python/pull/476	11	readability	2023-05-17 11:02:03	# This workflow will install the dependencies, run tests and lint every push	# This workflow will install the dependencies, invoke tests and lint every push		Clarify Comments and docstring
371	https://github.com/OpenNMT/OpenNMT-py/pull/1281	7	readability	2019-02-11 14:03:45	Update docs.	 topk_ids (torch.LongTensor): Shape             ``(B, beam_size)``. These are the	topk_ids (torch.LongTensor): Shape `(B, beam_size)``. These are the	Clarify Comments and docstring
372	https://github.com/openfun/django-lti-toolbox/pull/7	4	readability	2023-08-24 13:34:07	Update classes' documentation	"""         Handler for successfully verified LTI launch requests.         You have to define your own handler according to your project needs.         It can be used to call an authentication backend, to redirect the user...etc         """	        """Process the request when the LTI launch requests is verified."""	Clarify Comments and docstring
373	https://github.com/TheAlgorithms/Python/pull/6400	1	readability	2022-10-30 07:11:18	Increased Readability Of Variables	"""Return every anagram of the given word	    """Returns every anagram of the given word	Clarify Comments and docstring
374	https://github.com/Cloud-CV/EvalAI/pull/2667	2	readability	2020-06-15 01:25:28	fix typos and comments	 // loader for existng teams// loader for exisiting teams	        // loader for exisiting teams	Clarify Comments and docstring
375	https://github.com/great-expectations/great_expectations/pull/6444	16	readability	2022-11-29 07:48:27	Add return types and docstrings for several methods.    	# Step-7: Map resolved metrics to their attributes for identification and recovery by receiver.		Clarify Comments and docstring
376	https://github.com/FangjinhuaWang/PatchmatchNet/pull/32	2	readability	2021-05-23 07:17:50	improve docstrings	depth: current depth	            depth: current depth (B, 1, H, W)	Clarify Comments and docstring
377	https://github.com/networkx/networkx/pull/5144	3	readability	2021-10-25 16:42:06	and fixed the docstrings up a bit	predicted : array, shape = [n_samples]         Array of predicted labels	predicted : list         List of length ``len(G)`` with the predicted labels for each node.	Clarify Comments and docstring
378	https://github.com/spack/spack/pull/31936	1	readability	2022-08-05 10:36:33	Fix outdated comment	 "explicit": True,  # Always true for install command	"explicit": True,  # Use true as a default for install command	Clarify Comments and docstring
379	https://github.com/ExcitedStates/qfit-3.0/pull/75	3	readability	2020-06-30 18:51:40	Clarified comment; ignoring .DS_Store	# random from interval [-1.0, 1.0)	# user-defined sigma * (random from interval [-1.0, 1.0))	Clarify Comments and docstring
380	https://github.com/CarperAI/trlx/pull/210	4	readability	2023-02-05 16:06:48	Simplify comments	 """     Orchestrator prepares data for PPO training.     Transforms samples from `pipeline` into `PPOBatch` and pushes them into trainer's `store`	"PPO Orchestrator     Runs rollouts - generates samples from prompts using the model, calculates	Clarify Comments and docstring
381	https://github.com/jarun/buku/pull/345	6	readability	2018-12-31 15:50:11	Corrects a few typos (including: Unknonw   Unknown, firefox   Firefox, buku   Buku, and json   JSON where appropriate).   	# Bash completion definition for buku.	# Bash completion definition for Buku.	Clarify Comments and docstring
382	https://github.com/google/capirca/pull/214	2	legibility	2021-08-04 23:37:11	fixed docstring	a list of dictionaries which include the input file,     the output directory, and the definitions object	 a list of input file paths	Clarify Comments and docstring
383	https://github.com/timschumi/tumbot/pull/47	17	readability	2020-05-26 19:42:30	refactored the Documentation comments to an unified standard ("normal englisch sentences")  	"""Gibt den Meta-Fragen-Text wider"""	        """Displays the meta-question-text"""	Clarify Comments and docstring
384	https://github.com/snowflakedb/snowpark-python/pull/1970	3	readability	2024-07-24 17:03:57	Update docstrings	_emit_ast: Enables AST generation if True.	            _emit_ast: Whether to emit AST statements.	Clarify Comments and docstring
385	https://github.com/scylladb/scylla-ccm/pull/588	1	readability	2024-07-10 03:32:45	and move the related comment closer to the corresponding match statement.    	 # examples of unified packages file names:	 # let's accept all unified packages namings:	Clarify Comments and docstring
386	https://github.com/scikit-learn/scikit-learn/pull/11077	1	readability	2018-05-08 12:36:32	Number One thousand is written as 1.000 which can misinterpreted with one point zero zero zero.  To improve the readability period is replaced with comma        	with 100.000 samples (1.000 of them are used for model fitting) with 20	with 100,000 samples (1,000 of them are used for model fitting) with 20	Clarify Comments and docstring
387	https://github.com/ubicomplab/rPPG-Toolbox/pull/117	7	readability	2023-01-22 06:29:15	code clean up: added comments, docstrings	 """Returns a subset of data dirs, split with begin and end values, and ensures no overlapping subjects         between splits.	        """Returns a subset of data dirs, split with begin and end values,          and ensures no overlapping subjects between splits.	Clarify Comments and docstring
388	https://github.com/physiopy/phys2bids/pull/305	2	readability	2020-09-18 20:41:53	Add explanation of `chtrig` indexing starting from 1 for human readability in all the docstrings.	 index of trigger channel	        index of trigger channel, starting in 1 for human readability	Clarify Comments and docstring
389	https://github.com/borgbackup/borg/pull/7233	22	readability	2022-12-30 14:13:18	Docs and comments consistency and readability improvement	# backup pics, but not the ones from 2018, except the good ones:	            # back up pics, but not the ones from 2018, except the good ones:	Clarify Comments and docstring
390	https://github.com/Election-Tech-Initiative/electionguard-python/pull/114	27	readability	2020-07-30 17:06:01	`plaintext` to `vote` for clarity	 This class accepts a `plaintext` string field which has no constraints 	    This class accepts a `vote` string field which has no constraints	Clarify Comments and docstring
391	https://github.com/ministryofjustice/operations-engineering/pull/4473	1	readability	2024-05-17 15:24:51	Format docstring to improve readability	"""     This function depends on a preliminary manual process: a GitHub Enterprise user must first download the 'dormant.csv' file from the GitHub Enterprise dashboard and then upload it to the 'operations-engineering-dormant-users' S3 bucket. Once this setup is complete, this function will download the 'dormant.csv' file from the S3 bucket and extract a list of usernames from the file. This process ensures that the most current data regarding dormant users is used.	    This function depends on a preliminary manual process: a GitHub Enterprise user must first download the 'dormant.csv'     file from the GitHub Enterprise dashboard and then upload it to the 'operations-engineering-dormant-users' S3 bucket.     Once this setup is complete, this function will download the 'dormant.csv' file from the S3 bucket and extract a list of     usernames from the file. This process ensures that the most current data regarding dormant users is used.	Clarify Comments and docstring
392	https://github.com/getsentry/sentry/pull/68095	2	readability	2024-04-02 22:14:27	Docstrings are not necessary for functions that one could reasonably expect to be intuitive at first glance			Remove Unnecessary Comments
393	https://github.com/awslabs/aws-deployment-framework/pull/566	1	readability	2022-12-15 21:16:17	The CodeBuild class had similar issues as the CodePipeline class where the line length requirement was not met. Plus code readability was not terrific either.  Fixed the readability by properly breaking the lines. Another pass of refactoring code too.   	def __init__(self, scope: core.Construct, id: str, shared_modules_bucket: str, deployment_region_kms: str, map_params: dict, target, **kwargs): #pylint: disable=W0622	 def __init__(         self,         scope: core.Construct,         id: str,         shared_modules_bucket: str,         deployment_region_kms: str,         map_params: dict,         target,         **kwargs,     ):	Limit Line Length
394	https://github.com/chipsec/chipsec/pull/1568	1	readability	2022-08-26 16:49:21	Update pack formatting and improve readability	status_dict = {0: "EFI_SUCCESS", 1: "EFI_LOAD_ERROR", 2: "EFI_INVALID_PARAMETER", 3: "EFI_UNSUPPORTED", 4: "EFI_BAD_BUFFER_SIZE", 5: "EFI_BUFFER_TOO_SMALL", 6: "EFI_NOT_READY", 7: "EFI_DEVICE_ERROR", 8: "EFI_WRITE_PROTECTED", 9: "EFI_OUT_OF_RESOURCES", 14: "EFI_NOT_FOUND", 26: "EFI_SECURITY_VIOLATION"}	   status_dict = {             0: "EFI_SUCCESS",             1: "EFI_LOAD_ERROR",             2: "EFI_INVALID_PARAMETER",             3: "EFI_UNSUPPORTED",             4: "EFI_BAD_BUFFER_SIZE",             5: "EFI_BUFFER_TOO_SMALL",             6: "EFI_NOT_READY",             7: "EFI_DEVICE_ERROR",             8: "EFI_WRITE_PROTECTED",             9: "EFI_OUT_OF_RESOURCES",             14: "EFI_NOT_FOUND",             26: "EFI_SECURITY_VIOLATION"         }	Format Spacing (Python Black)
395	https://github.com/dimagi/commcare-hq/pull/31968	2	readability	2022-08-15 16:05:10	I added some newlines to make it easier for me to read.  	return [[user.user_id, user.username, user.num_forms_submitted, user.delta_forms,                     user.num_forms_submitted_next_month, user.delta_forms_next_month,                     user.is_performing] for user in user_list]	            return [[                 user.user_id,                 user.username,                 user.num_forms_submitted,                 user.delta_forms,                 user.num_forms_submitted_next_month,                 user.delta_forms_next_month,                 user.is_performing,             ] for user in user_list]	Format Spacing (Python Black)
396	https://github.com/rm-hull/sql_graphviz/pull/19	1	readability	2020-06-04 09:31:44	I've improved the readability of the imports from pyparsing and the `grammar()` function.	return OneOrMore(comment_def | create_table_def | add_fkey_def | other_statement_def)	    return OneOrMore(         comment_def         | create_table_def         | add_fkey_def         | other_statement_def     )	Format Spacing (Python Black)
397	https://github.com/lichess-bot-devs/lichess-bot/pull/506	7	readability	2022-07-29 13:38:31	Split up dict definition into multiple lines	 profile = {"id": "b", "username": "b", "online": True, "title": "BOT", "url": "https://lichess.org/@/bo", "followable": True, "following": False, "blocking": False, "followsYou": False}	profile = {"id": "b",                    "username": "b",                    "online": True,                    "title": "BOT",                    "url": "https://lichess.org/@/bo",	Limit Line Length
398	https://github.com/ansible-collections/community.postgresql/pull/627	22	readability	2023-11-27 13:38:23	function imports: Return readability	connect_to_db, ensure_required_libs, exec_sql, get_conn_params,     pg_cursor_args, postgres_common_argument_spec)	    connect_to_db,     ensure_required_libs,     exec_sql,     get_conn_params,     pg_cursor_args,     postgres_common_argument_spec, )	Format Spacing (Python Black)
399	https://github.com/ydb-platform/ydb-python-sdk/pull/213	82	readability	2023-03-23 10:36:22	use line-length=120 for better code readability	stm = Episodes.__table__.insert().values(         series_id=3, season_id=6, episode_id=1, title="TBD"     )	    stm = Episodes.__table__.insert().values(series_id=3, season_id=6, episode_id=1, title="TBD")	Limit Line Length
400	https://github.com/adswerve/GA4-Measurement-Protocol-Python/pull/35	2	readability	2022-08-12 21:43:26	This includes rearranging the dictionary, changing branding to Adswerve	params_dict = {'ad_click': ['ad_event_id'],                'ad_exposure': ['firebase_screen', 'firebase_screen_id', 'firebase_screen_class', 'exposure_time'],	params_dict = {     "ad_click": [         "ad_event_id"     ],     "ad_exposure": [         "firebase_screen",         "firebase_screen_id",         "firebase_screen_class",         "exposure_time",     ],	Format Spacing (Python Black)
401	https://github.com/log2timeline/dftimewolf/pull/908	1	readability	2024-08-22 13:30:54	Improve readability of default artifacts lists	LinuxAuditLogs', 'LinuxAuthLogs', 'LinuxCronLogs', 'LinuxWtmp',       'ShellHistoryFile', 'ZeitgeistDatabase'       # keep-sorted start	      'LinuxAuditLogs',       'LinuxAuthLogs',       'LinuxCronLogs',       'LinuxWtmp',       'ShellHistoryFile',       'ZeitgeistDatabase',	Limit Line Length
402	https://github.com/jrialland/python-astar/pull/8	1	readability	2022-12-13 13:29:29	Added line for better readability of nodes	C': [('D', 20)], 'D': [('B', 20)]}  	                 'C': [('D', 20)],                   'D': [('B', 20)]}	Format Spacing (Python Black)
403	https://github.com/SuffolkLITLab/docassemble-ALWeaver/pull/370	1	readability	2021-05-12 00:45:18	Limit interview_label length for readability, Because 50 characters is still extraordinarily long and will render a lot of lines unreadable in the YAML, limiting to 35 characters instead.      	${ action_button_html(interview_url(reset=1, i="docassemble." + space_to_underscore(re.sub("\W","",interview.title)) + ":data/questions/" + interview.file_name + '.yml'), label = "Run interview", new_window=True ) }  	${ action_button_html(interview_url(reset=1, i="docassemble." + package_title + ":data/questions/" + interview_label + '.yml'), label = "Run interview", new_window=True ) }	Limit Line Length
404	https://github.com/timschumi/tumbot/pull/47	17	readability	2020-05-26 19:42:30	autoformatting everything, to make PEP happy (line length, blank lines,..)  - 			Use Pep 8 standard guidelines
405	https://github.com/vanvalenlab/deepcell-tracking/pull/54	6	readability	2021-04-13 00:51:14	update whitespace for readability	y_tracked_update = np.zeros((1, self.y.shape[1], self.y.shape[2], 1),                                     dtype='int32')	y_tracked_update = np.zeros((1, self.y.shape[1], self.y.shape[2], 1), dtype='int32')	Format Spacing (Python Black)
406	https://github.com/jarun/buku/pull/345	6	readability	2018-12-31 15:50:11	Long lines (  140 characters) were split for better readability.  			Limit Line Length
407	https://github.com/All-Hands-AI/OpenHands/pull/3873	2	readability	2024-09-16 18:13:52	fix ruff lint error 	stop_step = await self._handle_traffic_control('iteration', self.state.iteration, self.state.max_iterations)	            stop_step = await self._handle_traffic_control(                 'iteration', self.state.iteration, self.state.max_iterations             )	Limit Line Length
408	https://github.com/getsentry/sentry/pull/68095	2	readability	2024-04-02 22:14:27	Class methods that are for external use should be be at the top of the class   Moves functions around to be in a more intuitive place   The ordering of class methods should generally follow the ordering in which they are called (to minimize big jumps when ctrl-clicking)   			Reorder Elements
409	https://github.com/ultralytics/yolov3/pull/417	1	readability	2019-08-02 12:49:09	To increase readability, I modified the code order of inference process in YOLO layer.			Reorder Elements
410	https://github.com/getsentry/sentry/pull/72528	1	readability	2024-06-11 19:31:07	Reordering short fields to be at the top, and moving long fields to be in the same order shown on the UI  - conditions  - filters  - actions			Reorder Elements
411	https://github.com/home-assistant/core/pull/51222	1	readability	2021-05-29 14:08:46	reorganize the ordering of attributes and methods to improve readability			Reorder Elements
412	https://github.com/jupyterhub/oauthenticator/pull/628	8	readability	2023-07-03 16:18:23	relocated _deprecated_oauth_aliases list of deprecated config and the deprecated/removed config to the end of config declarations			Reorder Elements
413	https://github.com/PaiGramTeam/PaiGram/pull/628	1	readability	2023-08-21 09:17:15	Moved imports to the top of the file.  	async def _download_icon(self, message: Optional[Message] = None) -> float:     from time import time as time_     lock = asyncio.Lock()	from time import time as time_ async def _download_icon(self, message: Optional[Message] = None) -> float:	Reorder Elements
414	https://github.com/getsentry/sentry/pull/38093	2	readability	2022-08-29 21:49:48	Only moving methods around to make reading these files easier (no logic changes).    Re-ordering these methods to follow:  1. Implemented/Overridden methods.  2. Non '_' prepended methods aka. 'Public' instance methods.  3. '_' prepended methods aka. 'Private' instance methods.   4. @staticmethods			Reorder Elements
415	https://github.com/ubicomplab/rPPG-Toolbox/pull/117	7	readability	2023-01-22 06:29:15	output spacing (for improved readability)	p = Process(target=self.preprocess_dataset_subprocess, args=(data_dirs,                                                                                  config_preprocess, i, file_list_dict))	p = Process(target=self.preprocess_dataset_subprocess,                                  args=(data_dirs,config_preprocess, i, file_list_dict))	Use Pep 8 standard guidelines
416	https://github.com/luong-komorebi/Awesome-Linux-Software/pull/732	1	readability	2023-06-27 08:58:13	This commit includes modifications to the code in asort.py to improve code formatting and readability according to the PEP 8 style guidelines. The changes include consistent indentation, proper spacing around operators, proper capitalization of comments, and using parentheses for print statements for compatibility with Python 3.    Please note that these changes are purely stylistic and do not affect the functionality of the script. The goal is to enhance code maintainability and readability.			Use Pep 8 standard guidelines
417	https://github.com/onnela-lab/forest/pull/67	1	readability	2022-01-24 19:57:46	Update function `gps_quality_check` in `traj2stats` module to match PEP8 styling.			Use Pep 8 standard guidelines
418	https://github.com/Mecademic/ROS/pull/7	1	readability	2021-06-16 16:31:34	Reformatting to comply with PEP8 style convention and improving readability	if(len(joints.velocity)>0):	        if len(joints.velocity) > 0:	Use Pep 8 standard guidelines
419	https://github.com/fract4d/gnofract4d/pull/61	104	readability	2020-03-10 05:49:31	Some style errors fixes following PEP8 rules. Also It gives more code style consistency.	INT_COS    = 3	INT_COS = 3	Use Pep 8 standard guidelines
420	https://github.com/dmlc/dgl/pull/4461	1	readability	2022-08-30 10:31:03	Auto fix view.py to conform to the PEP 8 style guide.       			Use Pep 8 standard guidelines
421	https://github.com/dmlc/dgl/pull/4446	2	readability	2022-09-14 05:36:19	Auto fix update-version.py to conform to the PEP 8 style guide.    			Use Pep 8 standard guidelines
422	https://github.com/jarun/buku/pull/345	6	readability	2018-12-31 15:50:11	Minor improvements in syntax (adding spaces where recommended by PEP8).  			Use Pep 8 standard guidelines
423	https://github.com/lichess-bot-devs/lichess-bot/pull/506	7	readability	2022-07-29 13:38:31	Delete trailing whitespace	"""                  	"""	Use Pep 8 standard guidelines
424	https://github.com/thumbor/thumbor/pull/1554	5	readability	2023-06-20 15:46:46	Refactor code blocks for increased readability Cues from pylint.	if color_space == "RGB ":	    if color_space == "RGB":	Use Pep 8 standard guidelines
425	https://github.com/wandb/wandb/pull/8984	6	readability	2024-12-05 19:08:23	fix styles 	"""Runs a set of load tests with the same parameter.      The goal is to measure the performance of a baseline test with reliable	"""Runs a set of load tests with the same parameter. The goal is to measure the performance of a baseline test with reliable	Use Pep 8 standard guidelines
426	https://github.com/great-expectations/great_expectations/pull/6418	24	readability	2022-11-22 20:29:39	Minor formatting clean up for better code readability.    	) return validator	)  return validator	Use Pep 8 standard guidelines
427	https://github.com/OpenNMT/OpenNMT-py/pull/1281	7	readability	2019-02-11 14:03:45	Fix using Flake8 linter	self.attention[b].append( \                 self.alive_attn[:, b, :self.memory_length[b]] \	self.attention[b].append(                 self.alive_attn[:, b, :self.memory_length[b]]	Use Pep 8 standard guidelines
428	https://github.com/FangjinhuaWang/PatchmatchNet/pull/32	2	readability	2021-05-23 07:17:50	reformatting file with Python `black`.	inverse_depth_interval = inverse_depth_interval.view(batch_size,1,1,1)	inverse_depth_interval = inverse_depth_interval.view(batch_size, 1, 1, 1)	Format Spacing (Python Black)
429	https://github.com/aws/aws-lambda-builders/pull/433	5	readability	2023-02-02 19:53:15	black			Format Spacing (Python Black)
430	https://github.com/Azure/azure-iot-sdk-python/pull/380	16	readability	2019-10-31 23:07:26	Black	class TestProvisioningMQTTTranslationStageWithEnable(     ProvisioningMQTTTranslationStageTestBase ):	class TestProvisioningMQTTTranslationStageWithEnable(ProvisioningMQTTTranslationStageTestBase):	Format Spacing (Python Black)
431	https://github.com/dirac-institute/sorcha/pull/764	2	readability	2024-01-05 14:11:39	Also adds a very small change from running `black`.  	else: # benchmark	    else:  # benchmark	Format Spacing (Python Black)
432	https://github.com/DeltaRCM/pyDeltaRCM/pull/12	8	readability	2020-01-28 00:08:18	rearranging white space to be readable.			Format Spacing (Python Black)
433	https://github.com/Samsung/Universum/pull/758	1	readability	2023-02-03 07:27:42	ignore Pylint warnings for better readability	 self.unicode_acceptable = (locale.getpreferredencoding() == "UTF-8")	self.unicode_acceptable = (locale.getpreferredencoding() == "UTF-8")  # pylint: disable = superfluous-parens	Disable Pylint warning
434	https://github.com/SBFRF/pyDIWASP/pull/9	5	readability	2024-03-07 00:12:35	This PR changes the lines with multiple operations separated by semicolons into one operation per line, improving readability. There are also a bunch of automatic editor whitespace removal changes.	ptype = Options['PLOTTYPE']; displ = Options['MESSAGE']	    ptype = Options['PLOTTYPE']     displ = Options['MESSAGE']	Prefer One Statement Per Line
435	https://github.com/KMKfw/kmk_firmware/pull/877	2	readability	2023-09-12 08:18:17	Format hid reports for better readability	report_descriptor = bytes(     (         0x05,         0x01,  # Usage Page (Generic Desktop Ctrls),         0x09,         0x06,  # Usage (Keyboard),         0xA1,         0x01,  # Collection (Application),         0x85,         0x01,  #   Report ID (1)      ) )	report_descriptor = bytes(     (         0x05, 0x01,  # Usage Page (Generic Desktop Ctrls),         0x09, 0x06,  # Usage (Keyboard),         0xA1, 0x01,  # Collection (Application),         0x85, 0x01,  #   Report ID (1)     ) )	Format Spacing (Python Black)
436	https://github.com/getsentry/sentry/pull/19334	1	readability	2020-06-12 16:12:13	Formatting tweak for readability	data.update(                     {                         "currentRelease": serialize(                             current_release, request.user, GroupReleaseWithStatsSerializer()                         )                     }	 data["currentRelease"] = serialize(                     current_release, request.user, GroupReleaseWithStatsSerializer()                 )	Simplify Object Construction and Conversion
437	https://github.com/lichess-bot-devs/lichess-bot/pull/506	7	readability	2022-07-29 13:38:31	Shorten long lines	if not online_egtb_cfg.get("enabled", False) or game.state[f"{wb}time"] < online_egtb_cfg.get("min_time", 20) * 1000 or board.uci_variant not in ["chess", "antichess", "atomic"] and online_egtb_cfg.get("source", "lichess") == "lichess" or board.uci_variant != "chess" and online_egtb_cfg.get("source", "lichess") == "chessdb" or pieces > online_egtb_cfg.get("max_pieces", 7) or board.castling_rights:	if (not use_online_egtb             or game.state[f"{wb}time"] < minimum_time             or board.uci_variant not in ["chess", "antichess", "atomic"]             and source == "lichess"             or board.uci_variant != "chess"             and source == "chessdb"             or pieces > online_egtb_cfg.get("max_pieces", 7)             or board.castling_rights):	Limit Line Length