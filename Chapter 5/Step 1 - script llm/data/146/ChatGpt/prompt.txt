Given the following Java code snippet:
import akka.actor.ActorSystem;
import akka.actor.Props;
import akka.cluster.Cluster;
import akka.cluster.ClusterEvent;
import akka.cluster.Member;
import akka.cluster.MemberStatus;

public class ClusterApp {
    public static void main(String[] args) {
        ActorSystem system = ActorSystem.create("ClusterSystem");

        // Create an actor that will join the cluster
        system.actorOf(Props.create(ClusterActor.class), "clusterActor");

        // Join the cluster
        Cluster.get(system).registerOnMemberUp(() -> {
            System.out.println("Cluster member is up!");
        });

        // Listen for cluster membership events
        Cluster.get(system).subscribe(system.actorOf(Props.create(ClusterListener.class)),
                ClusterEvent.initialStateAsEvents(), MemberEvent.class, UnreachableMember.class);

        // Wait for termination
        system.awaitTermination();
    }

    public static class ClusterActor extends AbstractActor {
        @Override
        public Receive createReceive() {
            return receiveBuilder().matchAny(System.out::println).build();
        }
    }

    public static class ClusterListener extends AbstractActor {
        @Override
        public Receive createReceive() {
            return receiveBuilder().match(MemberUp.class, memberUp -> {
                Member member = memberUp.member();
                if (member.status().equals(MemberStatus.up())) {
                    System.out.println("Member " + member.address() + " is up!");
                }
            }).match(UnreachableMember.class, unreachableMember -> {
                Member member = unreachableMember.member();
                System.out.println("Member " + member.address() + " is unreachable!");
            }).match(MemberRemoved.class, memberRemoved -> {
                Member member = memberRemoved.member();
                System.out.println("Member " + member.address() + " is removed!");
            }).build();
        }
    }
}


the following improvements are recommended: rule key = java:S1192 message = Define a constant instead of duplicating this literal "Member " 3 times., start line = 41, end line = 41, rule key = java:S1602 message = Remove useless curly braces around statement (sonar.java.source not set. Assuming 8 or greater.), start line = 16, end line = 16, rule key = java:S1192 message = Define a constant instead of duplicating this literal "Member " 3 times., start line = 41, end line = 41, rule key = java:S1602 message = Remove useless curly braces around statement (sonar.java.source not set. Assuming 8 or greater.), start line = 16, end line = 16.
Please provide a revised version of the code snippet that applies the recommended improvements. Only the revised code snippet, without additional text.