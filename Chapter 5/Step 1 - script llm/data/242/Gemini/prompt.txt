Given the following Java code snippet:


import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.os.CountDownTimer;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import java.util.Locale;

public class MainActivity extends AppCompatActivity {

    private TextView mTextViewCountdown;
    private Button mButtonStartPause;
    private Button mButtonReset;

    private CountDownTimer mCountDownTimer;
    private boolean mTimerRunning;
    private long mTimeLeftInMillis = START_TIME_IN_MILLIS; // Initial time for the countdown

    private static final long START_TIME_IN_MILLIS = 600000; // 10 minutes (10 * 60 * 1000)

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        mTextViewCountdown = findViewById(R.id.countdown_text_view);
        mButtonStartPause = findViewById(R.id.start_button);
        mButtonReset = findViewById(R.id.reset_button);

        mButtonStartPause.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (mTimerRunning) {
                    pauseTimer();
                } else {
                    startTimer();
                }
            }
        });

        mButtonReset.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                resetTimer();
            }
        });

        updateCountdownText(); // Initial display of the time
    }

    private void startTimer() {
        mCountDownTimer = new CountDownTimer(mTimeLeftInMillis, 1000) { // Countdown for mTimeLeftInMillis, update every 1 second (1000 ms)
            @Override
            public void onTick(long millisUntilFinished) {
                mTimeLeftInMillis = millisUntilFinished;
                updateCountdownText();
            }

            @Override
            public void onFinish() {
                mTimerRunning = false;
                mButtonStartPause.setText("Start");
                mButtonStartPause.setVisibility(View.INVISIBLE); // Hide start button when finished
                mButtonReset.setVisibility(View.VISIBLE); // Show reset button
                Toast.makeText(MainActivity.this, "Time's Up!", Toast.LENGTH_LONG).show();
            }
        }.start(); // Start the countdown

        mTimerRunning = true;
        mButtonStartPause.setText("Pause");
        mButtonReset.setVisibility(View.INVISIBLE); // Hide reset button while counting down
    }

    private void pauseTimer() {
        mCountDownTimer.cancel(); // Stop the timer
        mTimerRunning = false;
        mButtonStartPause.setText("Start");
        mButtonReset.setVisibility(View.VISIBLE); // Show reset button when paused
    }

    private void resetTimer() {
        mTimeLeftInMillis = START_TIME_IN_MILLIS;
        updateCountdownText();
        mButtonStartPause.setText("Start");
        mButtonReset.setVisibility(View.INVISIBLE); // Hide reset button until timer finishes or pauses
        mButtonStartPause.setVisibility(View.VISIBLE); // Show start button
    }

    private void updateCountdownText() {
        int minutes = (int) (mTimeLeftInMillis / 1000) / 60;
        int seconds = (int) (mTimeLeftInMillis / 1000) % 60;

        String timeLeftFormatted = String.format(Locale.getDefault(), "%02d:%02d", minutes, seconds);
        mTextViewCountdown.setText(timeLeftFormatted);
    }
}


the following improvements are recommended: rule key = java:S1192 message = Define a constant instead of duplicating this literal "Start" 3 times., start line = 67, end line = 67.
Please provide a revised version of the code snippet that applies the recommended improvements. Only the revised code snippet, without additional text.