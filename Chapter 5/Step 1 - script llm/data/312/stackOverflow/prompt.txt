Given the following Java code snippet:

import java.util.*;

public class Teste {

    public static void main(String[] args) {
        TreeSet<Map.Entry<String, String>> ts
                = new TreeSet<Map.Entry<String, String>>(new Comparator<Map.Entry<String, String>>() {
                    @Override
                    public int compare(Map.Entry<String, String> entry1, Map.Entry<String, String> entry2) {
                        return entry1.getKey().compareTo(entry2.getKey());
                    }
                });

        ts.addAll(set);

        for (Map.Entry<String, String> entry : ts) {
            System.out.println(entry.getKey());
        }

    }
}

the following improvements are recommended: rule key = java:S1604 message = Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.), start line = 8, end line = 8, rule key = java:S2293 message = Replace the type specification in this constructor call with the diamond operator ("<>"). (sonar.java.source not set. Assuming 7 or greater.), start line = 8, end line = 8, rule key = java:S1604 message = Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.), start line = 8, end line = 8, rule key = java:S2293 message = Replace the type specification in this constructor call with the diamond operator ("<>"). (sonar.java.source not set. Assuming 7 or greater.), start line = 8, end line = 8.
Please provide a revised version of the code snippet that applies the recommended improvements. Only the revised code snippet, without additional text.