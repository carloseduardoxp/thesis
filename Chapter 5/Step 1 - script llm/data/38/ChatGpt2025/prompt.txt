Given the following Java code snippet:
import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;

class GenericClass<T> {}

class MyClass extends GenericClass<String> {}

public class Main {
    public static void main(String[] args) {
        Type type = MyClass.class.getGenericSuperclass();

        if (type instanceof ParameterizedType) {
            Type[] typeArguments = ((ParameterizedType) type).getActualTypeArguments();
            for (Type t : typeArguments) {
                System.out.println(t.getTypeName()); // prints: java.lang.String
            }
        }
    }
}


the following improvements are recommended: rule key = java:S2094 message = Remove this empty class, start line = 4, end line = 4, rule key = java:S2326 message = T is not used in the class., start line = 4, end line = 4, rule key = java:S2094 message = Remove this empty class, start line = 4, end line = 4, rule key = java:S2326 message = T is not used in the class., start line = 4, end line = 4.
Please provide a revised version of the code snippet that applies the recommended improvements. Only the revised code snippet, without additional text.